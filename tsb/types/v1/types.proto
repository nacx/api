// Copyright (c) Tetrate, Inc 2019 All Rights Reserved.

syntax = "proto3";

import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

// $title: Common Object Types
// $description: Definition of objects shared by different APIs.
// $location: https://tetrate.io/docs/reference/config/types/v1/types.html

package tetrateio.api.tsb.types.v1;
option go_package = "github.com/tetrateio/api/tsb/types/v1";

// `NamespaceSelector` selects a set of namespaces across one or more
// clusters in a tenant. Namespace selectors can be used at Workspace
// level to carve out a chunk of resources under a tenant into an
// isolated configuration domain. They can be used in a Traffic,
// Security, or a Gateway group to further scope the set of namespaces
// that will belong to a specific configuration group.
message NamespaceSelector {
  // - `*/ns1` implies `ns1` namespace in any cluster under the tenant/workspace.
  //
  // - `c1/ns1` implies `ns1` namespace from `c1` cluster under tenant/workspace.
  //
  // - `c1/*` implies all namespaces in `c1` cluster under tenant/workspace.
  //
  // - `*/*` implies all namespaces in all clusters under the tenant/workspace.
  repeated string names = 1 [(google.api.field_behavior) = REQUIRED, (validate.rules).repeated.items.string.pattern = "^[^/]+/[^/]+$"];
}

// `WorkloadSelector` selects one or more workloads in a
// namespace. `WorkloadSelector` can be used in TrafficSetting,
// SecuritySetting, and Gateway APIs in `TETRATE` mode to scope the
// configuration to a specific set of workloads.
message WorkloadSelector {
  // The namespace where the workload resides.
  string namespace = 1
      [(google.api.field_behavior) = REQUIRED, (validate.rules).string.min_len = 1];

  // One or more labels that indicate a specific set of pods/VMs in
  // the namespace. If omitted, the TrafficSetting or SecuritySetting
  // configuration will apply to all workloads in the
  // namespace. Labels are required for Gateway API resources.
  map<string, string> labels = 2;
}

// The configuration mode used by a traffic, security or a gateway group.
enum ConfigMode {
  // Indicates that the configurations to be added to the group will use Tetrate APIs.
  TETRATE = 0;
  // Indicates that the configurations to be added to the group will use Istio APIs.
  ISTIO = 1;
}

// Format for all API objects in TSB
message Object {
  // api.tsb.tetrate.io/v1, traffic.tsb.tetrate.io/v1,
  // security.tsb.tetrate.io/v1, gateway.tsb.tetrate.io/v1,
  // networking.istio.io/v1beta1, security.istio.io/v1beta1, etc.
  string api_version = 1 [(google.api.field_behavior) = REQUIRED, (validate.rules).string.min_len = 1];
  // Workspace, Cluster, Tenant, Team, User, WorkspaceSetting, Group
  // (under traffic.tsb.tetrate.io and security.tsb.tetrate.io),
  // TrafficSetting, SecuritySetting, etc.
  string kind = 2 [(google.api.field_behavior) = REQUIRED, (validate.rules).string.min_len = 1];
  ObjectMeta metadata = 3 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Struct spec = 4;
  // Contains errors, tokens (in case of cluster onboarding, and other information).
  google.protobuf.Struct status = 5;
}

// Metadata associated with each API Object.
message ObjectMeta {
  // Name associated with the object. The object name must be unique
  // within the `kind` and the parent. For example, all workspaces
  // under a tenant should have a unique name. Traffic groups under a
  // workspace should have a unique name, while names are not required
  // to be unique across traffic groups in different workspaces.
  string name = 1 [(google.api.field_behavior) = REQUIRED, (validate.rules).string.min_len = 1];
  // Applicable when using Istio objects.
  string namespace = 2;
  // The tenant to which the object belongs to.
  string tenant = 3;
  // The workspace to which the object belongs to.
  string workspace = 4;
  // The traffic/security/gateway group to which the object belongs to.
  string group = 5;
  // Resource version is used internally to track propagation of resources to the data planes.
  string resource_version = 6;
  // User specified labels to attach to the objects.
  map<string, string> labels = 7;
  // Istio artifacts should contain 3 annotations
  // tsb.tetrate.io/tenant, tsb.tetrate.io/workspace,
  // tsb.tetrate.io/trafficGroup or tsb.tetrate.io/securityGroup or
  // tsb.tetrate.io/gatewayGroup
  map<string, string> annotations = 8;
}
