// Code generated by protoc-gen-go. DO NOT EDIT.
// source: install/managementplane/v1alpha1/settings.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Detail connection details for Postgres
type PostgresSettings struct {
	// Postgres host address (can be hostname or IP address)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port Postgress is listening on
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostgresSettings) Reset()         { *m = PostgresSettings{} }
func (m *PostgresSettings) String() string { return proto.CompactTextString(m) }
func (*PostgresSettings) ProtoMessage()    {}
func (*PostgresSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{0}
}

func (m *PostgresSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresSettings.Unmarshal(m, b)
}
func (m *PostgresSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresSettings.Marshal(b, m, deterministic)
}
func (m *PostgresSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresSettings.Merge(m, src)
}
func (m *PostgresSettings) XXX_Size() int {
	return xxx_messageInfo_PostgresSettings.Size(m)
}
func (m *PostgresSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresSettings.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresSettings proto.InternalMessageInfo

func (m *PostgresSettings) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PostgresSettings) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Configure an Elastic Search connection
type ElasticSearchSettings struct {
	// Elastic Search host address (can be hostname or IP address)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port Elastic Search is listening on
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Disables certificate verification
	SelfSigned           bool     `protobuf:"varint,3,opt,name=selfSigned,proto3" json:"selfSigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElasticSearchSettings) Reset()         { *m = ElasticSearchSettings{} }
func (m *ElasticSearchSettings) String() string { return proto.CompactTextString(m) }
func (*ElasticSearchSettings) ProtoMessage()    {}
func (*ElasticSearchSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{1}
}

func (m *ElasticSearchSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElasticSearchSettings.Unmarshal(m, b)
}
func (m *ElasticSearchSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElasticSearchSettings.Marshal(b, m, deterministic)
}
func (m *ElasticSearchSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElasticSearchSettings.Merge(m, src)
}
func (m *ElasticSearchSettings) XXX_Size() int {
	return xxx_messageInfo_ElasticSearchSettings.Size(m)
}
func (m *ElasticSearchSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ElasticSearchSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ElasticSearchSettings proto.InternalMessageInfo

func (m *ElasticSearchSettings) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ElasticSearchSettings) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ElasticSearchSettings) GetSelfSigned() bool {
	if m != nil {
		return m.SelfSigned
	}
	return false
}

// Detail connection and query mappings for LDAP
type LDAPSettings struct {
	// LDAP server host address (can be hostname or IP address)
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Port the LDAP server is listening on
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Disable secure connections to the LDAP server.
	DisableTls bool `protobuf:"varint,3,opt,name=disable_tls,json=disableTls,proto3" json:"disable_tls,omitempty"`
	// Configure common properties to be used when running queries against the LDAP server.
	Search *LDAPSettings_Search `protobuf:"bytes,10,opt,name=search,proto3" json:"search,omitempty"`
	// Configure how IAM validates credentials against the LDAP server.
	// The field are not exclusive; if both are configured, a direct match against the DN is attempted first
	// and the filter based match will be used as a fallback.
	Iam *LDAPSettings_IAM `protobuf:"bytes,20,opt,name=iam,proto3" json:"iam,omitempty"`
	// Sync configures how existing users and groups are retrieved from the LDAP server.
	Sync                 *LDAPSettings_Sync `protobuf:"bytes,30,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LDAPSettings) Reset()         { *m = LDAPSettings{} }
func (m *LDAPSettings) String() string { return proto.CompactTextString(m) }
func (*LDAPSettings) ProtoMessage()    {}
func (*LDAPSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{2}
}

func (m *LDAPSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LDAPSettings.Unmarshal(m, b)
}
func (m *LDAPSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LDAPSettings.Marshal(b, m, deterministic)
}
func (m *LDAPSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LDAPSettings.Merge(m, src)
}
func (m *LDAPSettings) XXX_Size() int {
	return xxx_messageInfo_LDAPSettings.Size(m)
}
func (m *LDAPSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LDAPSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LDAPSettings proto.InternalMessageInfo

func (m *LDAPSettings) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LDAPSettings) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LDAPSettings) GetDisableTls() bool {
	if m != nil {
		return m.DisableTls
	}
	return false
}

func (m *LDAPSettings) GetSearch() *LDAPSettings_Search {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *LDAPSettings) GetIam() *LDAPSettings_IAM {
	if m != nil {
		return m.Iam
	}
	return nil
}

func (m *LDAPSettings) GetSync() *LDAPSettings_Sync {
	if m != nil {
		return m.Sync
	}
	return nil
}

type LDAPSettings_Search struct {
	// The location at which LDAP search operations will start from.
	Base_DN string `protobuf:"bytes,1,opt,name=base_DN,json=baseDN,proto3" json:"base_DN,omitempty"`
	// Recursively search the LDAP tree.
	Recursive bool `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	// The timeout when querying the LDAP server.
	// If omitted, the query is bound by the timeout set by the LDAP server.
	Timeout              *duration.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LDAPSettings_Search) Reset()         { *m = LDAPSettings_Search{} }
func (m *LDAPSettings_Search) String() string { return proto.CompactTextString(m) }
func (*LDAPSettings_Search) ProtoMessage()    {}
func (*LDAPSettings_Search) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{2, 0}
}

func (m *LDAPSettings_Search) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LDAPSettings_Search.Unmarshal(m, b)
}
func (m *LDAPSettings_Search) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LDAPSettings_Search.Marshal(b, m, deterministic)
}
func (m *LDAPSettings_Search) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LDAPSettings_Search.Merge(m, src)
}
func (m *LDAPSettings_Search) XXX_Size() int {
	return xxx_messageInfo_LDAPSettings_Search.Size(m)
}
func (m *LDAPSettings_Search) XXX_DiscardUnknown() {
	xxx_messageInfo_LDAPSettings_Search.DiscardUnknown(m)
}

var xxx_messageInfo_LDAPSettings_Search proto.InternalMessageInfo

func (m *LDAPSettings_Search) GetBase_DN() string {
	if m != nil {
		return m.Base_DN
	}
	return ""
}

func (m *LDAPSettings_Search) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *LDAPSettings_Search) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type LDAPSettings_IAM struct {
	// Configure how a user can be directly bound to a DN pattern.
	// If all users can be found with a given pattern, we can bind them directly. Otherwise, a
	// MatchFilter should be configured to perform a search of the DN for the given user.
	// In Active Directory the bind operation is directly done using the username (in the user@domain form)
	// so when connecting to an AD instance this should be set to just: %s.
	Match_DN string `protobuf:"bytes,1,opt,name=match_DN,json=matchDN,proto3" json:"match_DN,omitempty"`
	// The pattern used to search for a user DN. This will be used when the user DN cannot
	// be directly resolved by matching the configured MatchDN.
	//
	// Here are some example search patterns for common LDAP implementations:
	// - OpenLDAP: "CN=%s,CN=Users"
	// - Active Directory: "(&(objectClass=user)(samAccountName=%s))"
	MatchFilter          string   `protobuf:"bytes,2,opt,name=match_filter,json=matchFilter,proto3" json:"match_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LDAPSettings_IAM) Reset()         { *m = LDAPSettings_IAM{} }
func (m *LDAPSettings_IAM) String() string { return proto.CompactTextString(m) }
func (*LDAPSettings_IAM) ProtoMessage()    {}
func (*LDAPSettings_IAM) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{2, 1}
}

func (m *LDAPSettings_IAM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LDAPSettings_IAM.Unmarshal(m, b)
}
func (m *LDAPSettings_IAM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LDAPSettings_IAM.Marshal(b, m, deterministic)
}
func (m *LDAPSettings_IAM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LDAPSettings_IAM.Merge(m, src)
}
func (m *LDAPSettings_IAM) XXX_Size() int {
	return xxx_messageInfo_LDAPSettings_IAM.Size(m)
}
func (m *LDAPSettings_IAM) XXX_DiscardUnknown() {
	xxx_messageInfo_LDAPSettings_IAM.DiscardUnknown(m)
}

var xxx_messageInfo_LDAPSettings_IAM proto.InternalMessageInfo

func (m *LDAPSettings_IAM) GetMatch_DN() string {
	if m != nil {
		return m.Match_DN
	}
	return ""
}

func (m *LDAPSettings_IAM) GetMatchFilter() string {
	if m != nil {
		return m.MatchFilter
	}
	return ""
}

type LDAPSettings_Sync struct {
	// The LDAP filter that will be used to fetch all the users that are to be synced to TSB.
	// e.g. "(objectClass=user)"
	UsersFilter string `protobuf:"bytes,1,opt,name=users_filter,json=usersFilter,proto3" json:"users_filter,omitempty"`
	// The LDAP filter that will be used to fetch all the groups that are to be synced to TSB.
	// e.g. "(objectClass=group)"
	GroupsFilter string `protobuf:"bytes,2,opt,name=groups_filter,json=groupsFilter,proto3" json:"groups_filter,omitempty"`
	// The name of the attribute in a Group record returned from LDAP that represents a member of the group.
	// e.g. "member"
	MembershipAttribute  string   `protobuf:"bytes,3,opt,name=membership_attribute,json=membershipAttribute,proto3" json:"membership_attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LDAPSettings_Sync) Reset()         { *m = LDAPSettings_Sync{} }
func (m *LDAPSettings_Sync) String() string { return proto.CompactTextString(m) }
func (*LDAPSettings_Sync) ProtoMessage()    {}
func (*LDAPSettings_Sync) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b402c4813bec74c, []int{2, 2}
}

func (m *LDAPSettings_Sync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LDAPSettings_Sync.Unmarshal(m, b)
}
func (m *LDAPSettings_Sync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LDAPSettings_Sync.Marshal(b, m, deterministic)
}
func (m *LDAPSettings_Sync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LDAPSettings_Sync.Merge(m, src)
}
func (m *LDAPSettings_Sync) XXX_Size() int {
	return xxx_messageInfo_LDAPSettings_Sync.Size(m)
}
func (m *LDAPSettings_Sync) XXX_DiscardUnknown() {
	xxx_messageInfo_LDAPSettings_Sync.DiscardUnknown(m)
}

var xxx_messageInfo_LDAPSettings_Sync proto.InternalMessageInfo

func (m *LDAPSettings_Sync) GetUsersFilter() string {
	if m != nil {
		return m.UsersFilter
	}
	return ""
}

func (m *LDAPSettings_Sync) GetGroupsFilter() string {
	if m != nil {
		return m.GroupsFilter
	}
	return ""
}

func (m *LDAPSettings_Sync) GetMembershipAttribute() string {
	if m != nil {
		return m.MembershipAttribute
	}
	return ""
}

func init() {
	proto.RegisterType((*PostgresSettings)(nil), "tetrateio.api.install.managementplane.v1alpha1.PostgresSettings")
	proto.RegisterType((*ElasticSearchSettings)(nil), "tetrateio.api.install.managementplane.v1alpha1.ElasticSearchSettings")
	proto.RegisterType((*LDAPSettings)(nil), "tetrateio.api.install.managementplane.v1alpha1.LDAPSettings")
	proto.RegisterType((*LDAPSettings_Search)(nil), "tetrateio.api.install.managementplane.v1alpha1.LDAPSettings.Search")
	proto.RegisterType((*LDAPSettings_IAM)(nil), "tetrateio.api.install.managementplane.v1alpha1.LDAPSettings.IAM")
	proto.RegisterType((*LDAPSettings_Sync)(nil), "tetrateio.api.install.managementplane.v1alpha1.LDAPSettings.Sync")
}

func init() {
	proto.RegisterFile("install/managementplane/v1alpha1/settings.proto", fileDescriptor_0b402c4813bec74c)
}

var fileDescriptor_0b402c4813bec74c = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x65, 0x92, 0xe6, 0xcf, 0x24, 0x48, 0x68, 0x29, 0xc2, 0x8d, 0x50, 0x08, 0xe1, 0x92,
	0xd3, 0x5a, 0x69, 0x4f, 0xc0, 0x85, 0xd0, 0x80, 0x54, 0x89, 0x46, 0x95, 0x03, 0x17, 0x38, 0x44,
	0x6b, 0x67, 0x62, 0xaf, 0xb4, 0xf6, 0x5a, 0xbb, 0xe3, 0x4a, 0x3d, 0xf2, 0x22, 0x3c, 0x2b, 0xca,
	0xda, 0x26, 0x85, 0x4b, 0x15, 0xf5, 0xb6, 0xfb, 0xed, 0xcc, 0x6f, 0x66, 0x3e, 0x8f, 0x21, 0x90,
	0xb9, 0x25, 0xa1, 0x54, 0x90, 0x89, 0x5c, 0x24, 0x98, 0x61, 0x4e, 0x85, 0x12, 0x39, 0x06, 0xb7,
	0x73, 0xa1, 0x8a, 0x54, 0xcc, 0x03, 0x8b, 0x44, 0x32, 0x4f, 0x2c, 0x2f, 0x8c, 0x26, 0xcd, 0x38,
	0x21, 0x19, 0x41, 0x28, 0x35, 0x17, 0x85, 0xe4, 0x75, 0x3a, 0xff, 0x2f, 0x9d, 0x37, 0xe9, 0xa3,
	0x71, 0xa2, 0x75, 0xa2, 0x30, 0x70, 0xd9, 0x51, 0xb9, 0x0b, 0xb6, 0xa5, 0x11, 0x24, 0x75, 0x5e,
	0xf1, 0xa6, 0xef, 0xe1, 0xd9, 0x8d, 0xb6, 0x94, 0x18, 0xb4, 0xeb, 0xba, 0x12, 0x63, 0xd0, 0x4e,
	0xb5, 0x25, 0xdf, 0x9b, 0x78, 0xb3, 0x7e, 0xe8, 0xce, 0x7b, 0xad, 0xd0, 0x86, 0xfc, 0x27, 0x13,
	0x6f, 0x76, 0x12, 0xba, 0xf3, 0x74, 0x03, 0x2f, 0x3e, 0x2b, 0x61, 0x49, 0xc6, 0x6b, 0x14, 0x26,
	0x4e, 0x8f, 0x05, 0xb0, 0x31, 0x80, 0x45, 0xb5, 0x5b, 0xcb, 0x24, 0xc7, 0xad, 0xdf, 0x9a, 0x78,
	0xb3, 0x5e, 0x78, 0x4f, 0x99, 0xfe, 0x3e, 0x81, 0xe1, 0xd7, 0xe5, 0xe2, 0xe6, 0x68, 0xf0, 0x6b,
	0x18, 0x6c, 0xa5, 0x15, 0x91, 0xc2, 0x0d, 0x29, 0xdb, 0x90, 0x6b, 0xe9, 0x9b, 0xb2, 0xec, 0x27,
	0x74, 0xac, 0xeb, 0xd9, 0x87, 0x89, 0x37, 0x1b, 0x9c, 0x5f, 0x1e, 0xe9, 0x2b, 0xbf, 0xdf, 0x16,
	0xaf, 0xc6, 0x0f, 0x6b, 0x24, 0x0b, 0xa1, 0x25, 0x45, 0xe6, 0x9f, 0x3a, 0xf2, 0xc7, 0x47, 0x91,
	0xaf, 0x16, 0xd7, 0xe1, 0x1e, 0xc6, 0xbe, 0x43, 0xdb, 0xde, 0xe5, 0xb1, 0x3f, 0x76, 0xd0, 0xc5,
	0xe3, 0xda, 0xbd, 0xcb, 0xe3, 0xd0, 0xe1, 0x46, 0x04, 0x9d, 0xaa, 0x79, 0xf6, 0x12, 0xba, 0x91,
	0xb0, 0xb8, 0x59, 0xae, 0x6a, 0x77, 0x3b, 0xfb, 0xeb, 0x72, 0xc5, 0x5e, 0x41, 0xdf, 0x60, 0x5c,
	0x1a, 0x2b, 0x6f, 0xd1, 0x99, 0xdc, 0x0b, 0x0f, 0x02, 0xbb, 0x80, 0x2e, 0xc9, 0x0c, 0x75, 0x49,
	0xce, 0xe5, 0xc1, 0xf9, 0x19, 0xaf, 0x36, 0x8e, 0x37, 0x1b, 0xc7, 0x97, 0xf5, 0xc6, 0x85, 0x4d,
	0xe4, 0xe8, 0x12, 0x5a, 0x57, 0x8b, 0x6b, 0x76, 0x06, 0xbd, 0x4c, 0x50, 0x9c, 0x1e, 0x6a, 0x76,
	0xdd, 0x7d, 0xb9, 0x62, 0x6f, 0x60, 0x58, 0x3d, 0xed, 0xa4, 0x22, 0x34, 0xae, 0x6e, 0x3f, 0x1c,
	0x38, 0xed, 0x8b, 0x93, 0x46, 0xbf, 0x3c, 0x68, 0xef, 0x27, 0xd9, 0xc7, 0x96, 0x16, 0x8d, 0x6d,
	0x62, 0x2b, 0xd4, 0xc0, 0x69, 0x55, 0x2c, 0x7b, 0x0b, 0x4f, 0x13, 0xa3, 0xcb, 0xc2, 0xfe, 0xcb,
	0x1b, 0x56, 0x62, 0x1d, 0x34, 0x87, 0xd3, 0x0c, 0xb3, 0x08, 0x8d, 0x4d, 0x65, 0xb1, 0x11, 0x44,
	0x46, 0x46, 0x25, 0xa1, 0x9b, 0xab, 0x1f, 0x3e, 0x3f, 0xbc, 0x2d, 0x9a, 0xa7, 0x4f, 0x1f, 0x7e,
	0xbc, 0x4b, 0x24, 0xa5, 0x65, 0xc4, 0x63, 0x9d, 0x05, 0x7f, 0xbf, 0x49, 0x20, 0x0a, 0xf9, 0xe0,
	0x9f, 0x1d, 0x75, 0x9c, 0x43, 0x17, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xce, 0x65, 0x3e,
	0x04, 0x04, 0x00, 0x00,
}
