// Code generated by protoc-gen-go. DO NOT EDIT.
// source: install/managementplane/v1alpha1/component.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	types "github.com/tetrateio/api/install/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ApiServer overrides settings for the main TSB component.
type ApiServer struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*ApiServer_K8S
	Infrastructure       isApiServer_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ApiServer) Reset()         { *m = ApiServer{} }
func (m *ApiServer) String() string { return proto.CompactTextString(m) }
func (*ApiServer) ProtoMessage()    {}
func (*ApiServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{0}
}

func (m *ApiServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiServer.Unmarshal(m, b)
}
func (m *ApiServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiServer.Marshal(b, m, deterministic)
}
func (m *ApiServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiServer.Merge(m, src)
}
func (m *ApiServer) XXX_Size() int {
	return xxx_messageInfo_ApiServer.Size(m)
}
func (m *ApiServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiServer.DiscardUnknown(m)
}

var xxx_messageInfo_ApiServer proto.InternalMessageInfo

func (m *ApiServer) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isApiServer_Infrastructure interface {
	isApiServer_Infrastructure()
}

type ApiServer_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*ApiServer_K8S) isApiServer_Infrastructure() {}

func (m *ApiServer) GetInfrastructure() isApiServer_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *ApiServer) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*ApiServer_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ApiServer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ApiServer_K8S)(nil),
	}
}

type IamServer struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*IamServer_K8S
	Infrastructure       isIamServer_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *IamServer) Reset()         { *m = IamServer{} }
func (m *IamServer) String() string { return proto.CompactTextString(m) }
func (*IamServer) ProtoMessage()    {}
func (*IamServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{1}
}

func (m *IamServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IamServer.Unmarshal(m, b)
}
func (m *IamServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IamServer.Marshal(b, m, deterministic)
}
func (m *IamServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IamServer.Merge(m, src)
}
func (m *IamServer) XXX_Size() int {
	return xxx_messageInfo_IamServer.Size(m)
}
func (m *IamServer) XXX_DiscardUnknown() {
	xxx_messageInfo_IamServer.DiscardUnknown(m)
}

var xxx_messageInfo_IamServer proto.InternalMessageInfo

func (m *IamServer) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isIamServer_Infrastructure interface {
	isIamServer_Infrastructure()
}

type IamServer_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*IamServer_K8S) isIamServer_Infrastructure() {}

func (m *IamServer) GetInfrastructure() isIamServer_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *IamServer) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*IamServer_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IamServer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IamServer_K8S)(nil),
	}
}

type WebUi struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*WebUi_K8S
	Infrastructure       isWebUi_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WebUi) Reset()         { *m = WebUi{} }
func (m *WebUi) String() string { return proto.CompactTextString(m) }
func (*WebUi) ProtoMessage()    {}
func (*WebUi) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{2}
}

func (m *WebUi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebUi.Unmarshal(m, b)
}
func (m *WebUi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebUi.Marshal(b, m, deterministic)
}
func (m *WebUi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebUi.Merge(m, src)
}
func (m *WebUi) XXX_Size() int {
	return xxx_messageInfo_WebUi.Size(m)
}
func (m *WebUi) XXX_DiscardUnknown() {
	xxx_messageInfo_WebUi.DiscardUnknown(m)
}

var xxx_messageInfo_WebUi proto.InternalMessageInfo

func (m *WebUi) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isWebUi_Infrastructure interface {
	isWebUi_Infrastructure()
}

type WebUi_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*WebUi_K8S) isWebUi_Infrastructure() {}

func (m *WebUi) GetInfrastructure() isWebUi_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *WebUi) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*WebUi_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WebUi) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WebUi_K8S)(nil),
	}
}

type FrontEnvoy struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*FrontEnvoy_K8S
	Infrastructure isFrontEnvoy_Infrastructure `protobuf_oneof:"Infrastructure"`
	// Configure the timeout when making an authentication request to the IAM server
	IamTimeout *duration.Duration `protobuf:"bytes,100,opt,name=iam_timeout,json=iamTimeout,proto3" json:"iam_timeout,omitempty"`
	// Configure the port FrontEnvoy exposes
	Port                 string   `protobuf:"bytes,101,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrontEnvoy) Reset()         { *m = FrontEnvoy{} }
func (m *FrontEnvoy) String() string { return proto.CompactTextString(m) }
func (*FrontEnvoy) ProtoMessage()    {}
func (*FrontEnvoy) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{3}
}

func (m *FrontEnvoy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrontEnvoy.Unmarshal(m, b)
}
func (m *FrontEnvoy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrontEnvoy.Marshal(b, m, deterministic)
}
func (m *FrontEnvoy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrontEnvoy.Merge(m, src)
}
func (m *FrontEnvoy) XXX_Size() int {
	return xxx_messageInfo_FrontEnvoy.Size(m)
}
func (m *FrontEnvoy) XXX_DiscardUnknown() {
	xxx_messageInfo_FrontEnvoy.DiscardUnknown(m)
}

var xxx_messageInfo_FrontEnvoy proto.InternalMessageInfo

func (m *FrontEnvoy) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isFrontEnvoy_Infrastructure interface {
	isFrontEnvoy_Infrastructure()
}

type FrontEnvoy_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*FrontEnvoy_K8S) isFrontEnvoy_Infrastructure() {}

func (m *FrontEnvoy) GetInfrastructure() isFrontEnvoy_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *FrontEnvoy) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*FrontEnvoy_K8S); ok {
		return x.K8S
	}
	return nil
}

func (m *FrontEnvoy) GetIamTimeout() *duration.Duration {
	if m != nil {
		return m.IamTimeout
	}
	return nil
}

func (m *FrontEnvoy) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FrontEnvoy) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FrontEnvoy_K8S)(nil),
	}
}

type TeamSync struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*TeamSync_K8S
	Infrastructure isTeamSync_Infrastructure `protobuf_oneof:"Infrastructure"`
	// Standard five field cron format
	// For example, "0 * * * *" triggers the sync hourly at minute 0.
	Cron                 string   `protobuf:"bytes,100,opt,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamSync) Reset()         { *m = TeamSync{} }
func (m *TeamSync) String() string { return proto.CompactTextString(m) }
func (*TeamSync) ProtoMessage()    {}
func (*TeamSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{4}
}

func (m *TeamSync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeamSync.Unmarshal(m, b)
}
func (m *TeamSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeamSync.Marshal(b, m, deterministic)
}
func (m *TeamSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamSync.Merge(m, src)
}
func (m *TeamSync) XXX_Size() int {
	return xxx_messageInfo_TeamSync.Size(m)
}
func (m *TeamSync) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamSync.DiscardUnknown(m)
}

var xxx_messageInfo_TeamSync proto.InternalMessageInfo

func (m *TeamSync) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isTeamSync_Infrastructure interface {
	isTeamSync_Infrastructure()
}

type TeamSync_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*TeamSync_K8S) isTeamSync_Infrastructure() {}

func (m *TeamSync) GetInfrastructure() isTeamSync_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *TeamSync) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*TeamSync_K8S); ok {
		return x.K8S
	}
	return nil
}

func (m *TeamSync) GetCron() string {
	if m != nil {
		return m.Cron
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TeamSync) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TeamSync_K8S)(nil),
	}
}

type SpmSync struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*SpmSync_K8S
	Infrastructure isSpmSync_Infrastructure `protobuf_oneof:"Infrastructure"`
	// Standard five field cron format
	// For example, "0/5 * * * *" triggers the sync every 5 minutes.
	Cron                 string   `protobuf:"bytes,100,opt,name=cron,proto3" json:"cron,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpmSync) Reset()         { *m = SpmSync{} }
func (m *SpmSync) String() string { return proto.CompactTextString(m) }
func (*SpmSync) ProtoMessage()    {}
func (*SpmSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{5}
}

func (m *SpmSync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpmSync.Unmarshal(m, b)
}
func (m *SpmSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpmSync.Marshal(b, m, deterministic)
}
func (m *SpmSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpmSync.Merge(m, src)
}
func (m *SpmSync) XXX_Size() int {
	return xxx_messageInfo_SpmSync.Size(m)
}
func (m *SpmSync) XXX_DiscardUnknown() {
	xxx_messageInfo_SpmSync.DiscardUnknown(m)
}

var xxx_messageInfo_SpmSync proto.InternalMessageInfo

func (m *SpmSync) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isSpmSync_Infrastructure interface {
	isSpmSync_Infrastructure()
}

type SpmSync_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*SpmSync_K8S) isSpmSync_Infrastructure() {}

func (m *SpmSync) GetInfrastructure() isSpmSync_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *SpmSync) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*SpmSync_K8S); ok {
		return x.K8S
	}
	return nil
}

func (m *SpmSync) GetCron() string {
	if m != nil {
		return m.Cron
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SpmSync) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SpmSync_K8S)(nil),
	}
}

type SpmServer struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*SpmServer_K8S
	Infrastructure       isSpmServer_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SpmServer) Reset()         { *m = SpmServer{} }
func (m *SpmServer) String() string { return proto.CompactTextString(m) }
func (*SpmServer) ProtoMessage()    {}
func (*SpmServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{6}
}

func (m *SpmServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpmServer.Unmarshal(m, b)
}
func (m *SpmServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpmServer.Marshal(b, m, deterministic)
}
func (m *SpmServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpmServer.Merge(m, src)
}
func (m *SpmServer) XXX_Size() int {
	return xxx_messageInfo_SpmServer.Size(m)
}
func (m *SpmServer) XXX_DiscardUnknown() {
	xxx_messageInfo_SpmServer.DiscardUnknown(m)
}

var xxx_messageInfo_SpmServer proto.InternalMessageInfo

func (m *SpmServer) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isSpmServer_Infrastructure interface {
	isSpmServer_Infrastructure()
}

type SpmServer_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*SpmServer_K8S) isSpmServer_Infrastructure() {}

func (m *SpmServer) GetInfrastructure() isSpmServer_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *SpmServer) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*SpmServer_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SpmServer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SpmServer_K8S)(nil),
	}
}

type Oap struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*Oap_K8S
	Infrastructure       isOap_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Oap) Reset()         { *m = Oap{} }
func (m *Oap) String() string { return proto.CompactTextString(m) }
func (*Oap) ProtoMessage()    {}
func (*Oap) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{7}
}

func (m *Oap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Oap.Unmarshal(m, b)
}
func (m *Oap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Oap.Marshal(b, m, deterministic)
}
func (m *Oap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Oap.Merge(m, src)
}
func (m *Oap) XXX_Size() int {
	return xxx_messageInfo_Oap.Size(m)
}
func (m *Oap) XXX_DiscardUnknown() {
	xxx_messageInfo_Oap.DiscardUnknown(m)
}

var xxx_messageInfo_Oap proto.InternalMessageInfo

func (m *Oap) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isOap_Infrastructure interface {
	isOap_Infrastructure()
}

type Oap_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*Oap_K8S) isOap_Infrastructure() {}

func (m *Oap) GetInfrastructure() isOap_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *Oap) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*Oap_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Oap) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Oap_K8S)(nil),
	}
}

type Zipkin struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*Zipkin_K8S
	Infrastructure       isZipkin_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Zipkin) Reset()         { *m = Zipkin{} }
func (m *Zipkin) String() string { return proto.CompactTextString(m) }
func (*Zipkin) ProtoMessage()    {}
func (*Zipkin) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{8}
}

func (m *Zipkin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zipkin.Unmarshal(m, b)
}
func (m *Zipkin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zipkin.Marshal(b, m, deterministic)
}
func (m *Zipkin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zipkin.Merge(m, src)
}
func (m *Zipkin) XXX_Size() int {
	return xxx_messageInfo_Zipkin.Size(m)
}
func (m *Zipkin) XXX_DiscardUnknown() {
	xxx_messageInfo_Zipkin.DiscardUnknown(m)
}

var xxx_messageInfo_Zipkin proto.InternalMessageInfo

func (m *Zipkin) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isZipkin_Infrastructure interface {
	isZipkin_Infrastructure()
}

type Zipkin_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*Zipkin_K8S) isZipkin_Infrastructure() {}

func (m *Zipkin) GetInfrastructure() isZipkin_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *Zipkin) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*Zipkin_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Zipkin) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Zipkin_K8S)(nil),
	}
}

type OpenTelemetryCollector struct {
	// Flags are the collection of command line flags passed to component's binary.
	Flags []*types.Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	// Infrastructure specific configuration
	//
	// Types that are valid to be assigned to Infrastructure:
	//	*OpenTelemetryCollector_K8S
	Infrastructure       isOpenTelemetryCollector_Infrastructure `protobuf_oneof:"Infrastructure"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *OpenTelemetryCollector) Reset()         { *m = OpenTelemetryCollector{} }
func (m *OpenTelemetryCollector) String() string { return proto.CompactTextString(m) }
func (*OpenTelemetryCollector) ProtoMessage()    {}
func (*OpenTelemetryCollector) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64d129238168dd, []int{9}
}

func (m *OpenTelemetryCollector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenTelemetryCollector.Unmarshal(m, b)
}
func (m *OpenTelemetryCollector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenTelemetryCollector.Marshal(b, m, deterministic)
}
func (m *OpenTelemetryCollector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenTelemetryCollector.Merge(m, src)
}
func (m *OpenTelemetryCollector) XXX_Size() int {
	return xxx_messageInfo_OpenTelemetryCollector.Size(m)
}
func (m *OpenTelemetryCollector) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenTelemetryCollector.DiscardUnknown(m)
}

var xxx_messageInfo_OpenTelemetryCollector proto.InternalMessageInfo

func (m *OpenTelemetryCollector) GetFlags() []*types.Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type isOpenTelemetryCollector_Infrastructure interface {
	isOpenTelemetryCollector_Infrastructure()
}

type OpenTelemetryCollector_K8S struct {
	K8S *types.KubernetesResourcesSpec `protobuf:"bytes,50,opt,name=k8s,proto3,oneof"`
}

func (*OpenTelemetryCollector_K8S) isOpenTelemetryCollector_Infrastructure() {}

func (m *OpenTelemetryCollector) GetInfrastructure() isOpenTelemetryCollector_Infrastructure {
	if m != nil {
		return m.Infrastructure
	}
	return nil
}

func (m *OpenTelemetryCollector) GetK8S() *types.KubernetesResourcesSpec {
	if x, ok := m.GetInfrastructure().(*OpenTelemetryCollector_K8S); ok {
		return x.K8S
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OpenTelemetryCollector) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OpenTelemetryCollector_K8S)(nil),
	}
}

func init() {
	proto.RegisterType((*ApiServer)(nil), "tetrateio.api.install.managementplane.v1alpha1.ApiServer")
	proto.RegisterType((*IamServer)(nil), "tetrateio.api.install.managementplane.v1alpha1.IamServer")
	proto.RegisterType((*WebUi)(nil), "tetrateio.api.install.managementplane.v1alpha1.WebUi")
	proto.RegisterType((*FrontEnvoy)(nil), "tetrateio.api.install.managementplane.v1alpha1.FrontEnvoy")
	proto.RegisterType((*TeamSync)(nil), "tetrateio.api.install.managementplane.v1alpha1.TeamSync")
	proto.RegisterType((*SpmSync)(nil), "tetrateio.api.install.managementplane.v1alpha1.SpmSync")
	proto.RegisterType((*SpmServer)(nil), "tetrateio.api.install.managementplane.v1alpha1.SpmServer")
	proto.RegisterType((*Oap)(nil), "tetrateio.api.install.managementplane.v1alpha1.Oap")
	proto.RegisterType((*Zipkin)(nil), "tetrateio.api.install.managementplane.v1alpha1.Zipkin")
	proto.RegisterType((*OpenTelemetryCollector)(nil), "tetrateio.api.install.managementplane.v1alpha1.OpenTelemetryCollector")
}

func init() {
	proto.RegisterFile("install/managementplane/v1alpha1/component.proto", fileDescriptor_2b64d129238168dd)
}

var fileDescriptor_2b64d129238168dd = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0xcf, 0x6a, 0x14, 0x41,
	0x10, 0xc6, 0x6d, 0x36, 0x89, 0x6e, 0x2d, 0x88, 0xcc, 0x41, 0xd6, 0x80, 0xb2, 0x7a, 0xda, 0x53,
	0x8f, 0x59, 0x05, 0xff, 0x9d, 0x8c, 0x1a, 0x12, 0x3c, 0x04, 0x66, 0x57, 0x84, 0x5c, 0xa4, 0x66,
	0x52, 0x3b, 0x69, 0xb6, 0xbb, 0xab, 0xe9, 0xa9, 0x59, 0xd8, 0x57, 0x11, 0x05, 0x5f, 0xc0, 0x8b,
	0x3e, 0x99, 0x6f, 0x20, 0x3b, 0x9b, 0x09, 0x18, 0xa2, 0x5e, 0x27, 0xb7, 0x1a, 0xaa, 0xbe, 0xaf,
	0x7e, 0xc5, 0x54, 0xcd, 0xc0, 0x63, 0xe3, 0x2b, 0x41, 0x6b, 0x53, 0x87, 0x1e, 0x4b, 0x72, 0xe4,
	0x25, 0x58, 0xf4, 0x94, 0x2e, 0xf7, 0xd0, 0x86, 0x33, 0xdc, 0x4b, 0x0b, 0x76, 0x81, 0x3d, 0x79,
	0xd1, 0x21, 0xb2, 0x70, 0xa2, 0x85, 0x24, 0xa2, 0x90, 0x61, 0x8d, 0xc1, 0xe8, 0x73, 0xbd, 0xbe,
	0xa4, 0xd7, 0xad, 0x7e, 0xf7, 0x7e, 0xdb, 0x41, 0x56, 0x81, 0xaa, 0xcb, 0x76, 0xbb, 0x0f, 0xfe,
	0x4c, 0x2f, 0xea, 0x9c, 0xa2, 0x27, 0xa1, 0xaa, 0xcd, 0x97, 0xcc, 0xa5, 0xa5, 0xb4, 0x79, 0xca,
	0xeb, 0x79, 0x7a, 0x5a, 0x47, 0x14, 0xc3, 0x7e, 0x93, 0x7f, 0xf4, 0x4d, 0x41, 0xff, 0x75, 0x30,
	0x53, 0x8a, 0x4b, 0x8a, 0xc9, 0x33, 0xd8, 0x9e, 0x5b, 0x2c, 0xab, 0xa1, 0x1a, 0xf5, 0xc6, 0x83,
	0xc9, 0xc3, 0xbf, 0xc0, 0x36, 0xbd, 0xf4, 0x81, 0xc5, 0x32, 0xdb, 0xd4, 0x27, 0x87, 0xd0, 0x5b,
	0x3c, 0xaf, 0x86, 0x93, 0x91, 0x1a, 0x0f, 0x26, 0x4f, 0xff, 0x29, 0x7b, 0x7f, 0x81, 0x98, 0x51,
	0xc5, 0x75, 0x2c, 0xa8, 0x9a, 0x06, 0x2a, 0x0e, 0x6f, 0x64, 0x6b, 0x8b, 0xfd, 0x3b, 0x70, 0xfb,
	0xc8, 0xcf, 0x23, 0x56, 0x12, 0xeb, 0x42, 0xea, 0x48, 0x0d, 0xe2, 0x11, 0xba, 0x2e, 0x23, 0x7e,
	0x51, 0xb0, 0xfd, 0x91, 0xf2, 0x0f, 0xa6, 0x9b, 0x78, 0xbf, 0x14, 0xc0, 0x41, 0x64, 0x2f, 0xef,
	0xfc, 0x92, 0x57, 0x1d, 0x60, 0x4c, 0x5e, 0xc2, 0xc0, 0xa0, 0xfb, 0x24, 0xc6, 0x11, 0xd7, 0x32,
	0x3c, 0x6d, 0x1c, 0xef, 0xe9, 0xcd, 0xb2, 0xea, 0x76, 0x59, 0xf5, 0xdb, 0xf3, 0x65, 0xcd, 0xc0,
	0xa0, 0x9b, 0x6d, 0x8a, 0x93, 0x04, 0xb6, 0x02, 0x47, 0x19, 0xd2, 0x48, 0x8d, 0xfb, 0x59, 0x13,
	0x5f, 0x31, 0xf3, 0x4f, 0x05, 0xb7, 0x66, 0x84, 0x6e, 0xba, 0xf2, 0x45, 0x17, 0x26, 0x4e, 0x60,
	0xab, 0x88, 0xec, 0x9b, 0x51, 0xfb, 0x59, 0x13, 0x5f, 0x41, 0xfd, 0x43, 0xc1, 0xcd, 0x69, 0xb8,
	0x66, 0xd0, 0xeb, 0x03, 0x5d, 0x43, 0x77, 0xf8, 0x40, 0x3f, 0x2b, 0xe8, 0x1d, 0x63, 0xe8, 0x26,
	0xdc, 0x57, 0x05, 0x3b, 0x27, 0x26, 0x2c, 0x8c, 0xef, 0x26, 0xdf, 0x77, 0x05, 0x77, 0x8f, 0x03,
	0xf9, 0x19, 0x59, 0x72, 0x24, 0x71, 0xf5, 0x86, 0xad, 0xa5, 0x42, 0xb8, 0x9b, 0x2f, 0x7b, 0xff,
	0xd5, 0xc9, 0x8b, 0xd2, 0xc8, 0x59, 0x9d, 0xeb, 0x82, 0x5d, 0x7a, 0x61, 0x9d, 0x62, 0x30, 0xe9,
	0xff, 0xfe, 0xd7, 0xf9, 0x4e, 0xf3, 0xf1, 0x79, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xa7,
	0x2a, 0x90, 0xda, 0x07, 0x00, 0x00,
}
