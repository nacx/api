// Copyright (c) Tetrate, Inc 2018 All Rights Reserved.
syntax = "proto3";

package tetrate.api.inventory.v1;
option go_package = "github.com/tetrateio/tetrate/api/inventory/v1;invv1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// The cloud credentials service is used to manage the different cloud
// credentials of the Tetrate platform.
service CloudCredentialsService {
  
  // List all existing cloud credentials
  rpc ListCloudCredentials(ListCredentialsRequest) returns (ListCredentialsResponse) {
    option (google.api.http).get = "/v1/cloudcredentials";
  };

  // Get the given cloud credentials
  rpc GetCloudCredential(GetCredentialsRequest) returns (CloudCredentials) {
    option (google.api.http).get = "/v1/cloudcredentials/{name}";
  };

  // Removes the given cloud credentials
  rpc DeleteCloudCredential(DeleteCredentialsRequest) returns (google.protobuf.Empty) {
    option (google.api.http).delete = "/v1/cloudcredentials/{name}";
  };

  // Adds the given credentials to the Tetrate platform, to enable onboarding
  // features for the Azure cloud
  rpc AddAzureCredentials(AzureCredentials) returns (AddCredentialsResponse) {
    option (google.api.http) = {
      post: "/v1/cloudcredentials/azure"
      body: "*"
    };
  };
}

// Cloud credentials represent the opaque credentials existing in hte platform
message CloudCredentials {
  // Name that identifies the cloud credentials
  string name = 1;

  // The cloud provider these credentials belong to
  enum Provider {
    AZURE = 0;
    GCE = 1;
    AWS = 2;
  }
  Provider provider = 2;
}

// Azure credentials specify the tenant and the application credentials Tetrate will
// use to access the Azure account.
message AzureCredentials {
  // The name that identifies these cloud credentials
  string name = 1;
  // The id of the tenant (not the full OAuth URL, just the id) to use
  string tenant_id = 2;
  // Id of the application to use to connect to Azure
  string app_id = 3;
  // Credential for the application used to connect to Azure
  string app_secret = 4;
}

message AddCredentialsResponse { }

message ListCredentialsRequest { }

// The list of all existing cloud credentials
message ListCredentialsResponse {
  repeated CloudCredentials credentials = 1;
}

// Request to retrieve the given cloud credentials
message GetCredentialsRequest {
  string name = 1;
}

// Request to delete the given cloud credentials
message DeleteCredentialsRequest {
  string name = 1;
}
