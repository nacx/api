// Code generated by protoc-gen-go. DO NOT EDIT.
// source: team.proto

package invv1 // import "github.com/tetrateio/tetrate/api/inventory/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Kind is the type of the actual user.
type User_Kind int32

const (
	// USER means a real human.
	User_USER User_Kind = 0
	// SERVICEACCOUNT means an account just used for programmatical access.
	User_SERVICEACCOUNT User_Kind = 1
)

var User_Kind_name = map[int32]string{
	0: "USER",
	1: "SERVICEACCOUNT",
}
var User_Kind_value = map[string]int32{
	"USER":           0,
	"SERVICEACCOUNT": 1,
}

func (x User_Kind) String() string {
	return proto.EnumName(User_Kind_name, int32(x))
}
func (User_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{0, 0}
}

// User represents a cloud principal
// TODO: Are we going to support here just user accounts, or do we want to support
// other types such as service accounts, applications or other "cloud consumers" ?
type User struct {
	// Unique Identifier of the user across clouds
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Friendly name of the user
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Groups the user belongs to
	Groups []*ResourceRef `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Kind   User_Kind      `protobuf:"varint,4,opt,name=kind,proto3,enum=tetrate.api.inventory.v1.User_Kind" json:"kind,omitempty"`
	// Email of the user or service account, if known
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *User) GetGroups() []*ResourceRef {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *User) GetKind() User_Kind {
	if m != nil {
		return m.Kind
	}
	return User_USER
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// Group represents a logical grouping of entities in a hierarchy.
// Groups can contain users or other groups. Each group has a parent
// except th root group.
type Group struct {
	// Unique Identifier of the group across clouds
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Friendly name of the group
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Group's parents. Will be empty for the root group
	Parents []*ResourceRef `protobuf:"bytes,4,rep,name=parents,proto3" json:"parents,omitempty"`
	// List of users that belong to this group
	Users                []*ResourceRef `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{1}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Group) GetParents() []*ResourceRef {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *Group) GetUsers() []*ResourceRef {
	if m != nil {
		return m.Users
	}
	return nil
}

// Role is a grouping of permissions that can be assigned to groups and users
type Role struct {
	// Unique Identifier of the role across clouds
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Friendly name of the role
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Permissions granted by this role
	Permissions          []string `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{2}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (dst *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(dst, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Role) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// RoleBinding represents a grant of permissions to a user on certain resources
type RoleBinding struct {
	// Represents the resource where the role permissions are applied
	// to the target entity
	Resource *ResourceRef `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Role to be assigned to the target entity (user or group)
	Role *ResourceRef `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	// Users or groups that will be granted the permissions of the bound role on the
	// given resource.
	Principals           []*ResourceRef `protobuf:"bytes,3,rep,name=principals,proto3" json:"principals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoleBinding) Reset()         { *m = RoleBinding{} }
func (m *RoleBinding) String() string { return proto.CompactTextString(m) }
func (*RoleBinding) ProtoMessage()    {}
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{3}
}
func (m *RoleBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBinding.Unmarshal(m, b)
}
func (m *RoleBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBinding.Marshal(b, m, deterministic)
}
func (dst *RoleBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBinding.Merge(dst, src)
}
func (m *RoleBinding) XXX_Size() int {
	return xxx_messageInfo_RoleBinding.Size(m)
}
func (m *RoleBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBinding.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBinding proto.InternalMessageInfo

func (m *RoleBinding) GetResource() *ResourceRef {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *RoleBinding) GetRole() *ResourceRef {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *RoleBinding) GetPrincipals() []*ResourceRef {
	if m != nil {
		return m.Principals
	}
	return nil
}

// ResourceRef represents a reference to a cloud resource
type ResourceRef struct {
	// Unique Identifier of the resource across clouds
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// (Optional) The friendly name of the resource
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Type of the resource in the target cloud provider
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceRef) Reset()         { *m = ResourceRef{} }
func (m *ResourceRef) String() string { return proto.CompactTextString(m) }
func (*ResourceRef) ProtoMessage()    {}
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{4}
}
func (m *ResourceRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRef.Unmarshal(m, b)
}
func (m *ResourceRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRef.Marshal(b, m, deterministic)
}
func (dst *ResourceRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRef.Merge(dst, src)
}
func (m *ResourceRef) XXX_Size() int {
	return xxx_messageInfo_ResourceRef.Size(m)
}
func (m *ResourceRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRef.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRef proto.InternalMessageInfo

func (m *ResourceRef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResourceRef) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ResourceRef) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

// ListGroupsRequest requests all existing groups
type ListGroupsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGroupsRequest) Reset()         { *m = ListGroupsRequest{} }
func (m *ListGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListGroupsRequest) ProtoMessage()    {}
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{5}
}
func (m *ListGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsRequest.Unmarshal(m, b)
}
func (m *ListGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsRequest.Marshal(b, m, deterministic)
}
func (dst *ListGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsRequest.Merge(dst, src)
}
func (m *ListGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_ListGroupsRequest.Size(m)
}
func (m *ListGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsRequest proto.InternalMessageInfo

// ListGroupsResponse represents a response to the list groups service call
type ListGroupsResponse struct {
	// The list of groups
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGroupsResponse) Reset()         { *m = ListGroupsResponse{} }
func (m *ListGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListGroupsResponse) ProtoMessage()    {}
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{6}
}
func (m *ListGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsResponse.Unmarshal(m, b)
}
func (m *ListGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsResponse.Marshal(b, m, deterministic)
}
func (dst *ListGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsResponse.Merge(dst, src)
}
func (m *ListGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListGroupsResponse.Size(m)
}
func (m *ListGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsResponse proto.InternalMessageInfo

func (m *ListGroupsResponse) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

// istUsersRequest requests all existing users
type ListUsersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{7}
}
func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (dst *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(dst, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

// ListUsersResponse represents a response to the list users service call
type ListUsersResponse struct {
	// The list of users
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{8}
}
func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (dst *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(dst, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

// ListRolesRequest requests all existing roles
type ListRolesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRolesRequest) Reset()         { *m = ListRolesRequest{} }
func (m *ListRolesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRolesRequest) ProtoMessage()    {}
func (*ListRolesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{9}
}
func (m *ListRolesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRolesRequest.Unmarshal(m, b)
}
func (m *ListRolesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRolesRequest.Marshal(b, m, deterministic)
}
func (dst *ListRolesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesRequest.Merge(dst, src)
}
func (m *ListRolesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRolesRequest.Size(m)
}
func (m *ListRolesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesRequest proto.InternalMessageInfo

// ListRolesResponse represents a response to the list roles service call
type ListRolesResponse struct {
	// The list of existing roles
	Roles                []*Role  `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRolesResponse) Reset()         { *m = ListRolesResponse{} }
func (m *ListRolesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRolesResponse) ProtoMessage()    {}
func (*ListRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{10}
}
func (m *ListRolesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRolesResponse.Unmarshal(m, b)
}
func (m *ListRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRolesResponse.Marshal(b, m, deterministic)
}
func (dst *ListRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesResponse.Merge(dst, src)
}
func (m *ListRolesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRolesResponse.Size(m)
}
func (m *ListRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesResponse proto.InternalMessageInfo

func (m *ListRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// ListRoleBindingsRequest requests all existing role bindings for hte given role across all resources
type ListRoleBindingsRequest struct {
	// Identifier of the resource to get the bindings for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoleBindingsRequest) Reset()         { *m = ListRoleBindingsRequest{} }
func (m *ListRoleBindingsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRoleBindingsRequest) ProtoMessage()    {}
func (*ListRoleBindingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{11}
}
func (m *ListRoleBindingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoleBindingsRequest.Unmarshal(m, b)
}
func (m *ListRoleBindingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoleBindingsRequest.Marshal(b, m, deterministic)
}
func (dst *ListRoleBindingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoleBindingsRequest.Merge(dst, src)
}
func (m *ListRoleBindingsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRoleBindingsRequest.Size(m)
}
func (m *ListRoleBindingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoleBindingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoleBindingsRequest proto.InternalMessageInfo

func (m *ListRoleBindingsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// ListRoleBindingsResponse represents a response to the list role bindings service call
type ListRoleBindingsResponse struct {
	// Existing bindings for the requested resource
	Bindings             []*RoleBinding `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListRoleBindingsResponse) Reset()         { *m = ListRoleBindingsResponse{} }
func (m *ListRoleBindingsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRoleBindingsResponse) ProtoMessage()    {}
func (*ListRoleBindingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_team_2d23e113089f8392, []int{12}
}
func (m *ListRoleBindingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoleBindingsResponse.Unmarshal(m, b)
}
func (m *ListRoleBindingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoleBindingsResponse.Marshal(b, m, deterministic)
}
func (dst *ListRoleBindingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoleBindingsResponse.Merge(dst, src)
}
func (m *ListRoleBindingsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRoleBindingsResponse.Size(m)
}
func (m *ListRoleBindingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoleBindingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoleBindingsResponse proto.InternalMessageInfo

func (m *ListRoleBindingsResponse) GetBindings() []*RoleBinding {
	if m != nil {
		return m.Bindings
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "tetrate.api.inventory.v1.User")
	proto.RegisterType((*Group)(nil), "tetrate.api.inventory.v1.Group")
	proto.RegisterType((*Role)(nil), "tetrate.api.inventory.v1.Role")
	proto.RegisterType((*RoleBinding)(nil), "tetrate.api.inventory.v1.RoleBinding")
	proto.RegisterType((*ResourceRef)(nil), "tetrate.api.inventory.v1.ResourceRef")
	proto.RegisterType((*ListGroupsRequest)(nil), "tetrate.api.inventory.v1.ListGroupsRequest")
	proto.RegisterType((*ListGroupsResponse)(nil), "tetrate.api.inventory.v1.ListGroupsResponse")
	proto.RegisterType((*ListUsersRequest)(nil), "tetrate.api.inventory.v1.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "tetrate.api.inventory.v1.ListUsersResponse")
	proto.RegisterType((*ListRolesRequest)(nil), "tetrate.api.inventory.v1.ListRolesRequest")
	proto.RegisterType((*ListRolesResponse)(nil), "tetrate.api.inventory.v1.ListRolesResponse")
	proto.RegisterType((*ListRoleBindingsRequest)(nil), "tetrate.api.inventory.v1.ListRoleBindingsRequest")
	proto.RegisterType((*ListRoleBindingsResponse)(nil), "tetrate.api.inventory.v1.ListRoleBindingsResponse")
	proto.RegisterEnum("tetrate.api.inventory.v1.User_Kind", User_Kind_name, User_Kind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TeamServiceClient is the client API for TeamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TeamServiceClient interface {
	// Gets the existing groups in the target cloud provider
	ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error)
	// Gets the existing users in hte target cloud provider
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	// Get the roles and their bindings
	// Roles can be global or scoped to certaing groups/IAM entities.
	ListRoles(ctx context.Context, in *ListRolesRequest, opts ...grpc.CallOption) (*ListRolesResponse, error)
	// Returns all bindings for the given resource
	ListRoleBindings(ctx context.Context, in *ListRoleBindingsRequest, opts ...grpc.CallOption) (*ListRoleBindingsResponse, error)
}

type teamServiceClient struct {
	cc *grpc.ClientConn
}

func NewTeamServiceClient(cc *grpc.ClientConn) TeamServiceClient {
	return &teamServiceClient{cc}
}

func (c *teamServiceClient) ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error) {
	out := new(ListGroupsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.TeamService/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.TeamService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ListRoles(ctx context.Context, in *ListRolesRequest, opts ...grpc.CallOption) (*ListRolesResponse, error) {
	out := new(ListRolesResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.TeamService/ListRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ListRoleBindings(ctx context.Context, in *ListRoleBindingsRequest, opts ...grpc.CallOption) (*ListRoleBindingsResponse, error) {
	out := new(ListRoleBindingsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.TeamService/ListRoleBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TeamServiceServer is the server API for TeamService service.
type TeamServiceServer interface {
	// Gets the existing groups in the target cloud provider
	ListGroups(context.Context, *ListGroupsRequest) (*ListGroupsResponse, error)
	// Gets the existing users in hte target cloud provider
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	// Get the roles and their bindings
	// Roles can be global or scoped to certaing groups/IAM entities.
	ListRoles(context.Context, *ListRolesRequest) (*ListRolesResponse, error)
	// Returns all bindings for the given resource
	ListRoleBindings(context.Context, *ListRoleBindingsRequest) (*ListRoleBindingsResponse, error)
}

func RegisterTeamServiceServer(s *grpc.Server, srv TeamServiceServer) {
	s.RegisterService(&_TeamService_serviceDesc, srv)
}

func _TeamService_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.TeamService/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListGroups(ctx, req.(*ListGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.TeamService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.TeamService/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListRoles(ctx, req.(*ListRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_ListRoleBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoleBindingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListRoleBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.TeamService/ListRoleBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListRoleBindings(ctx, req.(*ListRoleBindingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TeamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.inventory.v1.TeamService",
	HandlerType: (*TeamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGroups",
			Handler:    _TeamService_ListGroups_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _TeamService_ListUsers_Handler,
		},
		{
			MethodName: "ListRoles",
			Handler:    _TeamService_ListRoles_Handler,
		},
		{
			MethodName: "ListRoleBindings",
			Handler:    _TeamService_ListRoleBindings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "team.proto",
}

func init() { proto.RegisterFile("team.proto", fileDescriptor_team_2d23e113089f8392) }

var fileDescriptor_team_2d23e113089f8392 = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xff, 0x4e, 0x13, 0x4b,
	0x14, 0xbe, 0x0b, 0x5b, 0x2e, 0x3d, 0x4b, 0x08, 0x1c, 0xee, 0x8d, 0x9b, 0x6a, 0xb4, 0xae, 0x92,
	0x10, 0xd1, 0xdd, 0xb4, 0x68, 0x88, 0x21, 0xc6, 0x00, 0x69, 0x0c, 0x51, 0x31, 0x59, 0xc0, 0x18,
	0x13, 0x43, 0x96, 0x76, 0xac, 0x13, 0xdb, 0x99, 0x75, 0x66, 0xba, 0x86, 0x10, 0xff, 0xf1, 0x15,
	0x8c, 0x3e, 0x8d, 0x4f, 0xa1, 0xaf, 0xe0, 0x0b, 0xf8, 0x06, 0x66, 0x66, 0x67, 0x4b, 0x01, 0x0b,
	0x2d, 0xff, 0x2d, 0x67, 0xcf, 0xf7, 0x63, 0xf8, 0xbe, 0xe9, 0x02, 0x28, 0x92, 0x74, 0xc3, 0x54,
	0x70, 0xc5, 0xd1, 0x57, 0x44, 0x89, 0x44, 0x91, 0x30, 0x49, 0x69, 0x48, 0x59, 0x46, 0x98, 0xe2,
	0xe2, 0x30, 0xcc, 0x6a, 0x95, 0x6b, 0x6d, 0xce, 0xdb, 0x1d, 0x12, 0x25, 0x29, 0x8d, 0x12, 0xc6,
	0xb8, 0x4a, 0x14, 0xe5, 0x4c, 0xe6, 0xb8, 0xe0, 0xb7, 0x03, 0xee, 0x9e, 0x24, 0x02, 0x11, 0x5c,
	0x96, 0x74, 0x89, 0xef, 0x54, 0x9d, 0xa5, 0x72, 0x6c, 0x9e, 0xf1, 0x26, 0xcc, 0xb4, 0xa8, 0x4c,
	0x3b, 0xc9, 0xe1, 0xbe, 0x79, 0x37, 0x61, 0xde, 0x79, 0x76, 0xb6, 0xad, 0x57, 0x1e, 0xc1, 0x54,
	0x5b, 0xf0, 0x5e, 0x2a, 0xfd, 0xc9, 0xea, 0xe4, 0x92, 0x57, 0x5f, 0x0c, 0x87, 0x19, 0x09, 0x63,
	0x22, 0x79, 0x4f, 0x34, 0x49, 0x4c, 0xde, 0xc6, 0x16, 0x84, 0xab, 0xe0, 0xbe, 0xa7, 0xac, 0xe5,
	0xbb, 0x55, 0x67, 0x69, 0xb6, 0x7e, 0x6b, 0x38, 0x58, 0x7b, 0x0c, 0x9f, 0x52, 0xd6, 0x8a, 0x0d,
	0x00, 0xff, 0x83, 0x12, 0xe9, 0x26, 0xb4, 0xe3, 0x97, 0x8c, 0xa7, 0xfc, 0x8f, 0xe0, 0x36, 0xb8,
	0x7a, 0x07, 0xa7, 0xc1, 0xdd, 0xdb, 0x69, 0xc4, 0x73, 0xff, 0x20, 0xc2, 0xec, 0x4e, 0x23, 0x7e,
	0xb9, 0xb5, 0xd9, 0x58, 0xdf, 0xdc, 0x7c, 0xb1, 0xb7, 0xbd, 0x3b, 0xe7, 0x04, 0xdf, 0x1d, 0x28,
	0x3d, 0xd1, 0xfa, 0x97, 0x3d, 0xf4, 0x63, 0xf8, 0x37, 0x4d, 0x04, 0x61, 0x4a, 0xfa, 0xee, 0x38,
	0xa7, 0x2e, 0x50, 0xb8, 0x06, 0xa5, 0x9e, 0x24, 0x42, 0xfa, 0xa5, 0x71, 0xe0, 0x39, 0x26, 0xd8,
	0x07, 0x37, 0xe6, 0x1d, 0x72, 0x59, 0xf3, 0x55, 0xf0, 0x52, 0x22, 0xba, 0x54, 0x4a, 0x5d, 0x03,
	0x13, 0x5b, 0x39, 0x1e, 0x1c, 0x05, 0x3f, 0x1c, 0xf0, 0xb4, 0xc2, 0x06, 0x65, 0x2d, 0xca, 0xda,
	0xb8, 0x0e, 0xd3, 0xc2, 0xda, 0x30, 0x62, 0x23, 0x1b, 0xee, 0xc3, 0xf0, 0x21, 0xb8, 0x82, 0x77,
	0x72, 0x3f, 0x23, 0xc3, 0x0d, 0x04, 0x1b, 0x00, 0xa9, 0xa0, 0xac, 0x49, 0xd3, 0xa4, 0x33, 0x66,
	0xcb, 0x06, 0x80, 0xc1, 0x2b, 0xf0, 0x06, 0x5e, 0x5d, 0xf6, 0x9f, 0x87, 0xe0, 0xaa, 0xc3, 0x94,
	0xf8, 0x93, 0x39, 0x4c, 0x3f, 0x07, 0x0b, 0x30, 0xff, 0x8c, 0x4a, 0x65, 0x1a, 0x25, 0x63, 0xf2,
	0xa1, 0x47, 0xa4, 0x0a, 0x9e, 0x03, 0x0e, 0x0e, 0x65, 0xca, 0x99, 0x24, 0xb8, 0xda, 0xbf, 0x2d,
	0x8e, 0x39, 0xc7, 0x8d, 0xe1, 0xe7, 0x30, 0xc8, 0xe2, 0x9e, 0x04, 0x08, 0x73, 0x9a, 0x4e, 0xdf,
	0x82, 0xbe, 0xc4, 0x56, 0xae, 0x6b, 0x67, 0x56, 0xe1, 0x7e, 0xd1, 0xac, 0x5c, 0xe0, 0xfa, 0xf9,
	0x37, 0xaa, 0xa8, 0x94, 0xa5, 0xd7, 0xa1, 0x9f, 0xa6, 0xb7, 0xb3, 0x63, 0x7a, 0x1d, 0xca, 0x08,
	0xf4, 0x1a, 0x17, 0xe7, 0xcb, 0xc1, 0x3d, 0xb8, 0x52, 0x50, 0xd9, 0x4e, 0x15, 0x2a, 0x7f, 0xcb,
	0x21, 0x78, 0x03, 0xfe, 0xd9, 0x75, 0x6b, 0x60, 0x1d, 0xa6, 0x0f, 0xec, 0xcc, 0x7a, 0x58, 0x3c,
	0xdf, 0x83, 0x65, 0x88, 0xfb, 0xb0, 0xfa, 0x57, 0x17, 0xbc, 0x5d, 0x92, 0x74, 0x77, 0x88, 0xc8,
	0x68, 0x93, 0xe0, 0x11, 0xc0, 0x71, 0x54, 0xb8, 0x3c, 0x9c, 0xee, 0x4c, 0xca, 0x95, 0xbb, 0xa3,
	0x2d, 0xe7, 0xde, 0x03, 0xfc, 0xfc, 0xf3, 0xd7, 0x97, 0x89, 0x19, 0x84, 0x28, 0xab, 0x45, 0xf6,
	0x07, 0xf0, 0x23, 0x94, 0xfb, 0x21, 0xe2, 0x9d, 0xf3, 0xe9, 0x06, 0xd3, 0xaf, 0x2c, 0x8f, 0xb4,
	0x6b, 0x95, 0xe7, 0x8d, 0xb2, 0x87, 0x65, 0xad, 0x6c, 0x22, 0x2f, 0x84, 0x4d, 0xbc, 0x17, 0x09,
	0x0f, 0xf6, 0xe2, 0x22, 0xe1, 0x13, 0x7d, 0x39, 0x29, 0x6c, 0xca, 0x80, 0xdf, 0x9c, 0xe3, 0xb2,
	0x15, 0xf1, 0x62, 0xed, 0x62, 0xd2, 0x53, 0xcd, 0xa9, 0xd4, 0xc7, 0x81, 0x58, 0x3b, 0x57, 0x8d,
	0x9d, 0xff, 0x71, 0x41, 0xdb, 0x29, 0x0a, 0x11, 0x1d, 0xe9, 0xd6, 0x7d, 0xda, 0x78, 0xf0, 0x7a,
	0xa5, 0x4d, 0xd5, 0xbb, 0xde, 0x41, 0xd8, 0xe4, 0xdd, 0xc8, 0x92, 0x53, 0x5e, 0x3c, 0x99, 0x0f,
	0x68, 0x5f, 0x26, 0xca, 0x6a, 0x6b, 0x94, 0x65, 0x59, 0xed, 0x60, 0xca, 0x7c, 0x48, 0x57, 0xfe,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x83, 0xcd, 0x95, 0x8e, 0x07, 0x00, 0x00,
}
