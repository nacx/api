// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cloud_credentials.proto

package invv1 // import "github.com/tetrateio/tetrate/api/inventory/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The cloud provider these credentials belong to
type CloudCredentials_Provider int32

const (
	CloudCredentials_AZURE CloudCredentials_Provider = 0
	CloudCredentials_GCE   CloudCredentials_Provider = 1
	CloudCredentials_AWS   CloudCredentials_Provider = 2
)

var CloudCredentials_Provider_name = map[int32]string{
	0: "AZURE",
	1: "GCE",
	2: "AWS",
}
var CloudCredentials_Provider_value = map[string]int32{
	"AZURE": 0,
	"GCE":   1,
	"AWS":   2,
}

func (x CloudCredentials_Provider) String() string {
	return proto.EnumName(CloudCredentials_Provider_name, int32(x))
}
func (CloudCredentials_Provider) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{0, 0}
}

// Cloud credentials represent the opaque credentials existing in hte platform
type CloudCredentials struct {
	// Name that identifies the cloud credentials
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider             CloudCredentials_Provider `protobuf:"varint,2,opt,name=provider,proto3,enum=tetrate.api.inventory.v1.CloudCredentials_Provider" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CloudCredentials) Reset()         { *m = CloudCredentials{} }
func (m *CloudCredentials) String() string { return proto.CompactTextString(m) }
func (*CloudCredentials) ProtoMessage()    {}
func (*CloudCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{0}
}
func (m *CloudCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudCredentials.Unmarshal(m, b)
}
func (m *CloudCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudCredentials.Marshal(b, m, deterministic)
}
func (dst *CloudCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudCredentials.Merge(dst, src)
}
func (m *CloudCredentials) XXX_Size() int {
	return xxx_messageInfo_CloudCredentials.Size(m)
}
func (m *CloudCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_CloudCredentials proto.InternalMessageInfo

func (m *CloudCredentials) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CloudCredentials) GetProvider() CloudCredentials_Provider {
	if m != nil {
		return m.Provider
	}
	return CloudCredentials_AZURE
}

// Azure credentials specify the tenant and the application credentials Tetrate will
// use to access the Azure account.
type AzureCredentials struct {
	// The name that identifies these cloud credentials
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The id of the tenant (not the full OAuth URL, just the id) to use
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Id of the application to use to connect to Azure
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Credential for the application used to connect to Azure
	AppSecret            string   `protobuf:"bytes,4,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AzureCredentials) Reset()         { *m = AzureCredentials{} }
func (m *AzureCredentials) String() string { return proto.CompactTextString(m) }
func (*AzureCredentials) ProtoMessage()    {}
func (*AzureCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{1}
}
func (m *AzureCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AzureCredentials.Unmarshal(m, b)
}
func (m *AzureCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AzureCredentials.Marshal(b, m, deterministic)
}
func (dst *AzureCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzureCredentials.Merge(dst, src)
}
func (m *AzureCredentials) XXX_Size() int {
	return xxx_messageInfo_AzureCredentials.Size(m)
}
func (m *AzureCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_AzureCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_AzureCredentials proto.InternalMessageInfo

func (m *AzureCredentials) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AzureCredentials) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *AzureCredentials) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AzureCredentials) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

type AddCredentialsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCredentialsResponse) Reset()         { *m = AddCredentialsResponse{} }
func (m *AddCredentialsResponse) String() string { return proto.CompactTextString(m) }
func (*AddCredentialsResponse) ProtoMessage()    {}
func (*AddCredentialsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{2}
}
func (m *AddCredentialsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCredentialsResponse.Unmarshal(m, b)
}
func (m *AddCredentialsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCredentialsResponse.Marshal(b, m, deterministic)
}
func (dst *AddCredentialsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCredentialsResponse.Merge(dst, src)
}
func (m *AddCredentialsResponse) XXX_Size() int {
	return xxx_messageInfo_AddCredentialsResponse.Size(m)
}
func (m *AddCredentialsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCredentialsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddCredentialsResponse proto.InternalMessageInfo

type ListCredentialsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCredentialsRequest) Reset()         { *m = ListCredentialsRequest{} }
func (m *ListCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCredentialsRequest) ProtoMessage()    {}
func (*ListCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{3}
}
func (m *ListCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCredentialsRequest.Unmarshal(m, b)
}
func (m *ListCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *ListCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCredentialsRequest.Merge(dst, src)
}
func (m *ListCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCredentialsRequest.Size(m)
}
func (m *ListCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCredentialsRequest proto.InternalMessageInfo

// The list of all existing cloud credentials
type ListCredentialsResponse struct {
	Credentials          []*CloudCredentials `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListCredentialsResponse) Reset()         { *m = ListCredentialsResponse{} }
func (m *ListCredentialsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCredentialsResponse) ProtoMessage()    {}
func (*ListCredentialsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{4}
}
func (m *ListCredentialsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCredentialsResponse.Unmarshal(m, b)
}
func (m *ListCredentialsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCredentialsResponse.Marshal(b, m, deterministic)
}
func (dst *ListCredentialsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCredentialsResponse.Merge(dst, src)
}
func (m *ListCredentialsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCredentialsResponse.Size(m)
}
func (m *ListCredentialsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCredentialsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCredentialsResponse proto.InternalMessageInfo

func (m *ListCredentialsResponse) GetCredentials() []*CloudCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

// Request to retrieve the given cloud credentials
type GetCredentialsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCredentialsRequest) Reset()         { *m = GetCredentialsRequest{} }
func (m *GetCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCredentialsRequest) ProtoMessage()    {}
func (*GetCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{5}
}
func (m *GetCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCredentialsRequest.Unmarshal(m, b)
}
func (m *GetCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *GetCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCredentialsRequest.Merge(dst, src)
}
func (m *GetCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCredentialsRequest.Size(m)
}
func (m *GetCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCredentialsRequest proto.InternalMessageInfo

func (m *GetCredentialsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to delete the given cloud credentials
type DeleteCredentialsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCredentialsRequest) Reset()         { *m = DeleteCredentialsRequest{} }
func (m *DeleteCredentialsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCredentialsRequest) ProtoMessage()    {}
func (*DeleteCredentialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cloud_credentials_6a46c9eeaefd4d90, []int{6}
}
func (m *DeleteCredentialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCredentialsRequest.Unmarshal(m, b)
}
func (m *DeleteCredentialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCredentialsRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteCredentialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCredentialsRequest.Merge(dst, src)
}
func (m *DeleteCredentialsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCredentialsRequest.Size(m)
}
func (m *DeleteCredentialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCredentialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCredentialsRequest proto.InternalMessageInfo

func (m *DeleteCredentialsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CloudCredentials)(nil), "tetrate.api.inventory.v1.CloudCredentials")
	proto.RegisterType((*AzureCredentials)(nil), "tetrate.api.inventory.v1.AzureCredentials")
	proto.RegisterType((*AddCredentialsResponse)(nil), "tetrate.api.inventory.v1.AddCredentialsResponse")
	proto.RegisterType((*ListCredentialsRequest)(nil), "tetrate.api.inventory.v1.ListCredentialsRequest")
	proto.RegisterType((*ListCredentialsResponse)(nil), "tetrate.api.inventory.v1.ListCredentialsResponse")
	proto.RegisterType((*GetCredentialsRequest)(nil), "tetrate.api.inventory.v1.GetCredentialsRequest")
	proto.RegisterType((*DeleteCredentialsRequest)(nil), "tetrate.api.inventory.v1.DeleteCredentialsRequest")
	proto.RegisterEnum("tetrate.api.inventory.v1.CloudCredentials_Provider", CloudCredentials_Provider_name, CloudCredentials_Provider_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CloudCredentialsServiceClient is the client API for CloudCredentialsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudCredentialsServiceClient interface {
	// List all existing cloud credentials
	ListCloudCredentials(ctx context.Context, in *ListCredentialsRequest, opts ...grpc.CallOption) (*ListCredentialsResponse, error)
	// Get the given cloud credentials
	GetCloudCredential(ctx context.Context, in *GetCredentialsRequest, opts ...grpc.CallOption) (*CloudCredentials, error)
	// Removes the given cloud credentials
	DeleteCloudCredential(ctx context.Context, in *DeleteCredentialsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Adds the given credentials to the Tetrate platform, to enable onboarding
	// features for the Azure cloud
	AddAzureCredentials(ctx context.Context, in *AzureCredentials, opts ...grpc.CallOption) (*AddCredentialsResponse, error)
}

type cloudCredentialsServiceClient struct {
	cc *grpc.ClientConn
}

func NewCloudCredentialsServiceClient(cc *grpc.ClientConn) CloudCredentialsServiceClient {
	return &cloudCredentialsServiceClient{cc}
}

func (c *cloudCredentialsServiceClient) ListCloudCredentials(ctx context.Context, in *ListCredentialsRequest, opts ...grpc.CallOption) (*ListCredentialsResponse, error) {
	out := new(ListCredentialsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.CloudCredentialsService/ListCloudCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudCredentialsServiceClient) GetCloudCredential(ctx context.Context, in *GetCredentialsRequest, opts ...grpc.CallOption) (*CloudCredentials, error) {
	out := new(CloudCredentials)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.CloudCredentialsService/GetCloudCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudCredentialsServiceClient) DeleteCloudCredential(ctx context.Context, in *DeleteCredentialsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.CloudCredentialsService/DeleteCloudCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudCredentialsServiceClient) AddAzureCredentials(ctx context.Context, in *AzureCredentials, opts ...grpc.CallOption) (*AddCredentialsResponse, error) {
	out := new(AddCredentialsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.inventory.v1.CloudCredentialsService/AddAzureCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudCredentialsServiceServer is the server API for CloudCredentialsService service.
type CloudCredentialsServiceServer interface {
	// List all existing cloud credentials
	ListCloudCredentials(context.Context, *ListCredentialsRequest) (*ListCredentialsResponse, error)
	// Get the given cloud credentials
	GetCloudCredential(context.Context, *GetCredentialsRequest) (*CloudCredentials, error)
	// Removes the given cloud credentials
	DeleteCloudCredential(context.Context, *DeleteCredentialsRequest) (*empty.Empty, error)
	// Adds the given credentials to the Tetrate platform, to enable onboarding
	// features for the Azure cloud
	AddAzureCredentials(context.Context, *AzureCredentials) (*AddCredentialsResponse, error)
}

func RegisterCloudCredentialsServiceServer(s *grpc.Server, srv CloudCredentialsServiceServer) {
	s.RegisterService(&_CloudCredentialsService_serviceDesc, srv)
}

func _CloudCredentialsService_ListCloudCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCredentialsServiceServer).ListCloudCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.CloudCredentialsService/ListCloudCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCredentialsServiceServer).ListCloudCredentials(ctx, req.(*ListCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudCredentialsService_GetCloudCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCredentialsServiceServer).GetCloudCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.CloudCredentialsService/GetCloudCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCredentialsServiceServer).GetCloudCredential(ctx, req.(*GetCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudCredentialsService_DeleteCloudCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCredentialsServiceServer).DeleteCloudCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.CloudCredentialsService/DeleteCloudCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCredentialsServiceServer).DeleteCloudCredential(ctx, req.(*DeleteCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudCredentialsService_AddAzureCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AzureCredentials)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudCredentialsServiceServer).AddAzureCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.inventory.v1.CloudCredentialsService/AddAzureCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudCredentialsServiceServer).AddAzureCredentials(ctx, req.(*AzureCredentials))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudCredentialsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.inventory.v1.CloudCredentialsService",
	HandlerType: (*CloudCredentialsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCloudCredentials",
			Handler:    _CloudCredentialsService_ListCloudCredentials_Handler,
		},
		{
			MethodName: "GetCloudCredential",
			Handler:    _CloudCredentialsService_GetCloudCredential_Handler,
		},
		{
			MethodName: "DeleteCloudCredential",
			Handler:    _CloudCredentialsService_DeleteCloudCredential_Handler,
		},
		{
			MethodName: "AddAzureCredentials",
			Handler:    _CloudCredentialsService_AddAzureCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cloud_credentials.proto",
}

func init() {
	proto.RegisterFile("cloud_credentials.proto", fileDescriptor_cloud_credentials_6a46c9eeaefd4d90)
}

var fileDescriptor_cloud_credentials_6a46c9eeaefd4d90 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcf, 0x6b, 0x13, 0x41,
	0x14, 0x76, 0xfb, 0xcb, 0xe4, 0x15, 0x24, 0x8c, 0x4d, 0xb2, 0x6c, 0x5a, 0x0c, 0x2b, 0x62, 0x88,
	0x30, 0x6b, 0x12, 0xbc, 0xe8, 0x29, 0xc6, 0x50, 0x0a, 0x05, 0x65, 0x83, 0x08, 0xbd, 0x94, 0x49,
	0xf6, 0x19, 0x07, 0x92, 0x99, 0x71, 0x77, 0xb2, 0x10, 0xc5, 0x8b, 0x27, 0xef, 0x82, 0xa0, 0x27,
	0xff, 0x27, 0xff, 0x05, 0xff, 0x06, 0xcf, 0xb2, 0x93, 0x4d, 0x4d, 0xd3, 0xdd, 0xd8, 0xde, 0x26,
	0xef, 0x9b, 0x37, 0xdf, 0xf7, 0xbe, 0x97, 0x6f, 0xa1, 0x3a, 0x9a, 0xc8, 0x59, 0x70, 0x3e, 0x0a,
	0x31, 0x40, 0xa1, 0x39, 0x9b, 0x44, 0x54, 0x85, 0x52, 0x4b, 0x62, 0x6b, 0xd4, 0x21, 0xd3, 0x48,
	0x99, 0xe2, 0x94, 0x8b, 0x18, 0x85, 0x96, 0xe1, 0x9c, 0xc6, 0x2d, 0xe7, 0x70, 0x2c, 0xe5, 0x78,
	0x82, 0x1e, 0x53, 0xdc, 0x63, 0x42, 0x48, 0xcd, 0x34, 0x97, 0x22, 0xed, 0x73, 0x6a, 0x29, 0x6a,
	0x7e, 0x0d, 0x67, 0x6f, 0x3d, 0x9c, 0x2a, 0x3d, 0x5f, 0x80, 0xee, 0x4f, 0x0b, 0x4a, 0xbd, 0x84,
	0xb0, 0xf7, 0x8f, 0x8f, 0x10, 0xd8, 0x11, 0x6c, 0x8a, 0xb6, 0x55, 0xb7, 0x1a, 0x45, 0xdf, 0x9c,
	0xc9, 0x4b, 0x28, 0xa8, 0x50, 0xc6, 0x3c, 0xc0, 0xd0, 0xde, 0xaa, 0x5b, 0x8d, 0x3b, 0xed, 0x0e,
	0xcd, 0x13, 0x44, 0xd7, 0x5f, 0xa4, 0xaf, 0xd2, 0x56, 0xff, 0xe2, 0x11, 0xf7, 0x21, 0x14, 0x96,
	0x55, 0x52, 0x84, 0xdd, 0xee, 0xd9, 0x6b, 0xbf, 0x5f, 0xba, 0x45, 0x6e, 0xc3, 0xf6, 0x71, 0xaf,
	0x5f, 0xb2, 0x92, 0x43, 0xf7, 0xcd, 0xa0, 0xb4, 0xe5, 0xce, 0xa1, 0xd4, 0xfd, 0x30, 0x0b, 0xf1,
	0x7f, 0x0a, 0x6b, 0x50, 0xd4, 0x28, 0x98, 0xd0, 0xe7, 0x3c, 0x30, 0x12, 0x8b, 0x7e, 0x61, 0x51,
	0x38, 0x09, 0x48, 0x19, 0xf6, 0x98, 0x52, 0x09, 0xb2, 0x6d, 0x90, 0x5d, 0xa6, 0xd4, 0x49, 0x40,
	0x8e, 0x00, 0x92, 0x72, 0x84, 0xa3, 0x10, 0xb5, 0xbd, 0x63, 0xa0, 0x22, 0x53, 0x6a, 0x60, 0x0a,
	0xae, 0x0d, 0x95, 0x6e, 0xb0, 0x3a, 0x88, 0x8f, 0x91, 0x92, 0x22, 0xc2, 0x04, 0x39, 0xe5, 0x91,
	0xbe, 0x04, 0xbd, 0x9f, 0x61, 0xa4, 0xdd, 0x31, 0x54, 0xaf, 0x20, 0x8b, 0x26, 0x72, 0x0a, 0xfb,
	0x2b, 0x6b, 0xb5, 0xad, 0xfa, 0x76, 0x63, 0xbf, 0xdd, 0xbc, 0xbe, 0x8d, 0xfe, 0x6a, 0xbb, 0xfb,
	0x08, 0xca, 0xc7, 0x98, 0xa1, 0x20, 0xcb, 0x1c, 0x97, 0x82, 0xfd, 0x02, 0x27, 0xa8, 0xf1, 0x7a,
	0xf7, 0xdb, 0x7f, 0x76, 0xa0, 0xba, 0x4e, 0x3f, 0xc0, 0x30, 0xe6, 0x23, 0x24, 0xdf, 0x2d, 0x38,
	0x30, 0x23, 0xae, 0xff, 0x6f, 0x1e, 0xe7, 0x8f, 0x92, 0x6d, 0x96, 0xd3, 0xba, 0x41, 0x47, 0xea,
	0xfc, 0xe1, 0xe7, 0x5f, 0xbf, 0xbf, 0x6e, 0x55, 0xc8, 0x81, 0x17, 0xb7, 0x3c, 0x93, 0x95, 0x15,
	0x53, 0xc8, 0x37, 0x0b, 0x48, 0xe2, 0xca, 0x65, 0x69, 0xc4, 0xcb, 0xe7, 0xc9, 0xf4, 0xd0, 0xb9,
	0xc1, 0x56, 0xdc, 0xfb, 0x46, 0xd1, 0x11, 0xa9, 0x65, 0x29, 0xf2, 0x3e, 0x26, 0x7e, 0x7e, 0x22,
	0x5f, 0x2c, 0x28, 0xa7, 0x1b, 0x58, 0xd3, 0xd6, 0xce, 0xa7, 0xca, 0x5b, 0x99, 0x53, 0xa1, 0x8b,
	0x50, 0xd3, 0x65, 0xa8, 0x69, 0x3f, 0x09, 0xf5, 0x52, 0x4a, 0x73, 0xa3, 0x94, 0x1f, 0x16, 0xdc,
	0xed, 0x06, 0xc1, 0x95, 0x50, 0x6d, 0x98, 0x79, 0xfd, 0xae, 0xb3, 0x61, 0xd5, 0x39, 0x89, 0x79,
	0x60, 0xa4, 0xdd, 0x73, 0x9d, 0x4c, 0x69, 0x2c, 0x21, 0x78, 0x6a, 0x35, 0x9f, 0x3f, 0x39, 0xeb,
	0x8c, 0xb9, 0x7e, 0x37, 0x1b, 0xd2, 0x91, 0x9c, 0x7a, 0x29, 0x09, 0x97, 0xcb, 0x93, 0xf9, 0xc6,
	0x5d, 0xd0, 0x79, 0x71, 0xeb, 0x19, 0x17, 0x71, 0xdc, 0x1a, 0xee, 0x19, 0x23, 0x3a, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x66, 0xd6, 0xa2, 0xb6, 0x3e, 0x05, 0x00, 0x00,
}
