// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package v1alpha1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Protocols supported
type Protocol int32

const (
	Protocol_NONE  Protocol = 0
	Protocol_HTTP  Protocol = 1
	Protocol_GRPC  Protocol = 2
	Protocol_REDIS Protocol = 3
)

var Protocol_name = map[int32]string{
	0: "NONE",
	1: "HTTP",
	2: "GRPC",
	3: "REDIS",
}
var Protocol_value = map[string]int32{
	"NONE":  0,
	"HTTP":  1,
	"GRPC":  2,
	"REDIS": 3,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{0}
}

// Service status
type ServiceStatus int32

const (
	ServiceStatus_UNHEALTHY ServiceStatus = 0
	ServiceStatus_HEALTHY   ServiceStatus = 1
)

var ServiceStatus_name = map[int32]string{
	0: "UNHEALTHY",
	1: "HEALTHY",
}
var ServiceStatus_value = map[string]int32{
	"UNHEALTHY": 0,
	"HEALTHY":   1,
}

func (x ServiceStatus) String() string {
	return proto.EnumName(ServiceStatus_name, int32(x))
}
func (ServiceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{1}
}

// Service types supported to gather inventory
// TBD: what other services kinds do we support: Deployment, Job, DaemonSet?
type ServiceKind int32

const (
	ServiceKind_SERVICE        ServiceKind = 0
	ServiceKind_JOB            ServiceKind = 1
	ServiceKind_VIRTUALSERVICE ServiceKind = 2
)

var ServiceKind_name = map[int32]string{
	0: "SERVICE",
	1: "JOB",
	2: "VIRTUALSERVICE",
}
var ServiceKind_value = map[string]int32{
	"SERVICE":        0,
	"JOB":            1,
	"VIRTUALSERVICE": 2,
}

func (x ServiceKind) String() string {
	return proto.EnumName(ServiceKind_name, int32(x))
}
func (ServiceKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{2}
}

// Protocol Specifications that defines services or endpoints
type ProtocolSpec struct {
	Proto                Protocol `protobuf:"varint,1,opt,name=proto,proto3,enum=tetrate.api.inventory.v1alpha1.Protocol" json:"proto,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	TargetPort           int32    `protobuf:"varint,3,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
	ContainerPort        int32    `protobuf:"varint,4,opt,name=containerPort,proto3" json:"containerPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtocolSpec) Reset()         { *m = ProtocolSpec{} }
func (m *ProtocolSpec) String() string { return proto.CompactTextString(m) }
func (*ProtocolSpec) ProtoMessage()    {}
func (*ProtocolSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{0}
}
func (m *ProtocolSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolSpec.Unmarshal(m, b)
}
func (m *ProtocolSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolSpec.Marshal(b, m, deterministic)
}
func (dst *ProtocolSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolSpec.Merge(dst, src)
}
func (m *ProtocolSpec) XXX_Size() int {
	return xxx_messageInfo_ProtocolSpec.Size(m)
}
func (m *ProtocolSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolSpec proto.InternalMessageInfo

func (m *ProtocolSpec) GetProto() Protocol {
	if m != nil {
		return m.Proto
	}
	return Protocol_NONE
}

func (m *ProtocolSpec) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ProtocolSpec) GetTargetPort() int32 {
	if m != nil {
		return m.TargetPort
	}
	return 0
}

func (m *ProtocolSpec) GetContainerPort() int32 {
	if m != nil {
		return m.ContainerPort
	}
	return 0
}

// Generic Spec
type GenericSpec struct {
	// Spec name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Supported Protocol spec
	Spec                 *ProtocolSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GenericSpec) Reset()         { *m = GenericSpec{} }
func (m *GenericSpec) String() string { return proto.CompactTextString(m) }
func (*GenericSpec) ProtoMessage()    {}
func (*GenericSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{1}
}
func (m *GenericSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericSpec.Unmarshal(m, b)
}
func (m *GenericSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericSpec.Marshal(b, m, deterministic)
}
func (dst *GenericSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericSpec.Merge(dst, src)
}
func (m *GenericSpec) XXX_Size() int {
	return xxx_messageInfo_GenericSpec.Size(m)
}
func (m *GenericSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericSpec.DiscardUnknown(m)
}

var xxx_messageInfo_GenericSpec proto.InternalMessageInfo

func (m *GenericSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenericSpec) GetSpec() *ProtocolSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Workload e.g. region, node, OU
type Workload struct {
	// Workload name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Workload provider e.g. AWS, GCP, Azure
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// Region
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// Node, Pod
	Node string `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	// Organizational Unit
	// TBD - could this be moved
	Ou                   string   `protobuf:"bytes,5,opt,name=ou,proto3" json:"ou,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workload) Reset()         { *m = Workload{} }
func (m *Workload) String() string { return proto.CompactTextString(m) }
func (*Workload) ProtoMessage()    {}
func (*Workload) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{2}
}
func (m *Workload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workload.Unmarshal(m, b)
}
func (m *Workload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workload.Marshal(b, m, deterministic)
}
func (dst *Workload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workload.Merge(dst, src)
}
func (m *Workload) XXX_Size() int {
	return xxx_messageInfo_Workload.Size(m)
}
func (m *Workload) XXX_DiscardUnknown() {
	xxx_messageInfo_Workload.DiscardUnknown(m)
}

var xxx_messageInfo_Workload proto.InternalMessageInfo

func (m *Workload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workload) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Workload) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Workload) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Workload) GetOu() string {
	if m != nil {
		return m.Ou
	}
	return ""
}

// Extended object metadata definitions
type Metadata struct {
	// Metadata namespace, version, spec
	Namespace string       `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Version   string       `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Spec      *GenericSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// Domain associated
	Domain string `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	// Labels, annotations
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotation           map[string]string `protobuf:"bytes,6,rep,name=annotation,proto3" json:"annotation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{3}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Metadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Metadata) GetSpec() *GenericSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Metadata) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Metadata) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Metadata) GetAnnotation() map[string]string {
	if m != nil {
		return m.Annotation
	}
	return nil
}

// Endpoint, IP or DNS, orts
type Endpoint struct {
	// Types that are valid to be assigned to Ip:
	//	*Endpoint_Ipv4
	//	*Endpoint_Ipv6
	//	*Endpoint_DnsName
	Ip                   isEndpoint_Ip `protobuf_oneof:"ip"`
	Port                 int32         `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_ba45ca8157c7a5f0, []int{4}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

type isEndpoint_Ip interface {
	isEndpoint_Ip()
}

type Endpoint_Ipv4 struct {
	Ipv4 []byte `protobuf:"bytes,1,opt,name=ipv4,proto3,oneof"`
}
type Endpoint_Ipv6 struct {
	Ipv6 []byte `protobuf:"bytes,2,opt,name=ipv6,proto3,oneof"`
}
type Endpoint_DnsName struct {
	DnsName string `protobuf:"bytes,3,opt,name=dnsName,proto3,oneof"`
}

func (*Endpoint_Ipv4) isEndpoint_Ip()    {}
func (*Endpoint_Ipv6) isEndpoint_Ip()    {}
func (*Endpoint_DnsName) isEndpoint_Ip() {}

func (m *Endpoint) GetIp() isEndpoint_Ip {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Endpoint) GetIpv4() []byte {
	if x, ok := m.GetIp().(*Endpoint_Ipv4); ok {
		return x.Ipv4
	}
	return nil
}

func (m *Endpoint) GetIpv6() []byte {
	if x, ok := m.GetIp().(*Endpoint_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

func (m *Endpoint) GetDnsName() string {
	if x, ok := m.GetIp().(*Endpoint_DnsName); ok {
		return x.DnsName
	}
	return ""
}

func (m *Endpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Endpoint) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Endpoint_OneofMarshaler, _Endpoint_OneofUnmarshaler, _Endpoint_OneofSizer, []interface{}{
		(*Endpoint_Ipv4)(nil),
		(*Endpoint_Ipv6)(nil),
		(*Endpoint_DnsName)(nil),
	}
}

func _Endpoint_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Endpoint)
	// ip
	switch x := m.Ip.(type) {
	case *Endpoint_Ipv4:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Ipv4)
	case *Endpoint_Ipv6:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Ipv6)
	case *Endpoint_DnsName:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DnsName)
	case nil:
	default:
		return fmt.Errorf("Endpoint.Ip has unexpected type %T", x)
	}
	return nil
}

func _Endpoint_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Endpoint)
	switch tag {
	case 1: // ip.ipv4
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Ip = &Endpoint_Ipv4{x}
		return true, err
	case 2: // ip.ipv6
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Ip = &Endpoint_Ipv6{x}
		return true, err
	case 3: // ip.dnsName
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Ip = &Endpoint_DnsName{x}
		return true, err
	default:
		return false, nil
	}
}

func _Endpoint_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Endpoint)
	// ip
	switch x := m.Ip.(type) {
	case *Endpoint_Ipv4:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Ipv4)))
		n += len(x.Ipv4)
	case *Endpoint_Ipv6:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Ipv6)))
		n += len(x.Ipv6)
	case *Endpoint_DnsName:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.DnsName)))
		n += len(x.DnsName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ProtocolSpec)(nil), "tetrate.api.inventory.v1alpha1.ProtocolSpec")
	proto.RegisterType((*GenericSpec)(nil), "tetrate.api.inventory.v1alpha1.GenericSpec")
	proto.RegisterType((*Workload)(nil), "tetrate.api.inventory.v1alpha1.Workload")
	proto.RegisterType((*Metadata)(nil), "tetrate.api.inventory.v1alpha1.Metadata")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.inventory.v1alpha1.Metadata.AnnotationEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.inventory.v1alpha1.Metadata.LabelsEntry")
	proto.RegisterType((*Endpoint)(nil), "tetrate.api.inventory.v1alpha1.Endpoint")
	proto.RegisterEnum("tetrate.api.inventory.v1alpha1.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("tetrate.api.inventory.v1alpha1.ServiceStatus", ServiceStatus_name, ServiceStatus_value)
	proto.RegisterEnum("tetrate.api.inventory.v1alpha1.ServiceKind", ServiceKind_name, ServiceKind_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_ba45ca8157c7a5f0) }

var fileDescriptor_common_ba45ca8157c7a5f0 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x6b, 0x4f, 0xdb, 0x3c,
	0x14, 0x26, 0xb7, 0x36, 0x39, 0x05, 0xde, 0xca, 0x7a, 0x35, 0x55, 0x68, 0x42, 0x53, 0xb5, 0x0f,
	0x08, 0xa6, 0x48, 0x5c, 0xc4, 0xd8, 0xa4, 0x5d, 0x80, 0x45, 0x94, 0xad, 0x2b, 0x95, 0x5b, 0xd8,
	0xe5, 0x9b, 0x49, 0x2c, 0x16, 0x91, 0xda, 0x91, 0xe3, 0x46, 0xea, 0x3f, 0xda, 0x9f, 0xd8, 0x7f,
	0x9b, 0xed, 0x26, 0xa5, 0x9b, 0xa6, 0xc1, 0xbe, 0x9d, 0xdb, 0xf3, 0x3c, 0xe7, 0x71, 0x4f, 0x0a,
	0xab, 0x31, 0x9f, 0x4c, 0x38, 0x0b, 0x73, 0xc1, 0x25, 0x47, 0x9b, 0x92, 0x4a, 0x41, 0x24, 0x0d,
	0x49, 0x9e, 0x86, 0x29, 0x2b, 0x29, 0x93, 0x5c, 0xcc, 0xc2, 0x72, 0x97, 0x64, 0xf9, 0x37, 0xb2,
	0xdb, 0xfd, 0x6e, 0xc1, 0xea, 0x50, 0x4f, 0xc6, 0x3c, 0x1b, 0xe5, 0x34, 0x46, 0xaf, 0xc1, 0x33,
	0xc8, 0x8e, 0xf5, 0xc4, 0xda, 0x5a, 0xdf, 0xdb, 0x0a, 0xff, 0x4e, 0x10, 0xd6, 0x60, 0x3c, 0x87,
	0x21, 0x04, 0x6e, 0xce, 0x85, 0xec, 0xd8, 0x0a, 0xee, 0x61, 0x13, 0xa3, 0x4d, 0x00, 0x49, 0xc4,
	0x0d, 0x95, 0x43, 0xdd, 0x71, 0x4c, 0x67, 0xa9, 0x82, 0x9e, 0xc2, 0x5a, 0xcc, 0x99, 0x24, 0x29,
	0xa3, 0xc2, 0x8c, 0xb8, 0x66, 0xe4, 0xd7, 0x62, 0x37, 0x86, 0xd6, 0x19, 0x55, 0x49, 0x1a, 0x9b,
	0x45, 0x95, 0x10, 0x23, 0x13, 0x6a, 0xf6, 0x0c, 0xb0, 0x89, 0xd1, 0x5b, 0x70, 0x0b, 0xd5, 0x33,
	0xe2, 0xad, 0xbd, 0x67, 0x0f, 0xdd, 0x5d, 0xf3, 0x61, 0x83, 0xec, 0x96, 0xe0, 0x7f, 0xe2, 0xe2,
	0x36, 0xe3, 0x24, 0xf9, 0xa3, 0xc2, 0x06, 0xf8, 0xca, 0x67, 0x99, 0x26, 0x54, 0x18, 0x95, 0x00,
	0x2f, 0x72, 0xf4, 0x08, 0x1a, 0x82, 0xde, 0xa4, 0x9c, 0x19, 0x8b, 0x01, 0xae, 0x32, 0xc3, 0xc3,
	0x13, 0x6a, 0x5c, 0x69, 0x1e, 0x15, 0xa3, 0x75, 0xb0, 0xf9, 0xb4, 0xe3, 0x99, 0x8a, 0x8a, 0xba,
	0x3f, 0x1c, 0xf0, 0x3f, 0x52, 0x49, 0x12, 0x22, 0x09, 0x7a, 0x0c, 0x81, 0x16, 0x2b, 0x72, 0x12,
	0xd7, 0xea, 0x77, 0x05, 0xd4, 0x81, 0x66, 0x49, 0x45, 0xa1, 0x75, 0xe6, 0x1b, 0xd4, 0x29, 0x7a,
	0x53, 0xd9, 0x77, 0x8c, 0xfd, 0x9d, 0xfb, 0xec, 0x2f, 0xbd, 0xe6, 0xdc, 0xbd, 0x76, 0x90, 0xf0,
	0x89, 0x7a, 0xf2, 0x6a, 0xd7, 0x2a, 0x43, 0x7d, 0x68, 0x64, 0xe4, 0x9a, 0x66, 0x85, 0xda, 0xd8,
	0x51, 0xd4, 0x07, 0xf7, 0x51, 0xd7, 0x56, 0xc2, 0xbe, 0x81, 0x45, 0x4c, 0x8a, 0x19, 0xae, 0x38,
	0xd0, 0x67, 0x00, 0xc2, 0x18, 0x97, 0x44, 0x6a, 0x0f, 0x0d, 0xc3, 0x78, 0xf4, 0x60, 0xc6, 0xe3,
	0x05, 0x74, 0xce, 0xba, 0xc4, 0xb5, 0xf1, 0x02, 0x5a, 0x4b, 0x82, 0xa8, 0x0d, 0xce, 0x2d, 0x9d,
	0x55, 0x2f, 0xa8, 0x43, 0xf4, 0x3f, 0x78, 0x25, 0xc9, 0xa6, 0xb4, 0x7a, 0xb9, 0x79, 0xf2, 0xd2,
	0x3e, 0xb2, 0x36, 0x5e, 0xc1, 0x7f, 0xbf, 0x31, 0xff, 0x0b, 0xbc, 0x9b, 0x81, 0x1f, 0xb1, 0x24,
	0xe7, 0x29, 0x93, 0x6a, 0xca, 0x4d, 0xf3, 0xf2, 0xc0, 0x00, 0x57, 0x7b, 0x2b, 0xd8, 0x64, 0x55,
	0xf5, 0xd0, 0x40, 0xeb, 0xea, 0xa1, 0xba, 0xa7, 0x66, 0xc2, 0x8a, 0x81, 0x3e, 0x33, 0x73, 0x34,
	0xaa, 0x51, 0x17, 0x16, 0x9f, 0x92, 0x77, 0xf7, 0x29, 0x9d, 0xb8, 0x60, 0xa7, 0xf9, 0xf6, 0x3e,
	0xf8, 0xf5, 0xed, 0x22, 0x1f, 0xdc, 0xc1, 0xc5, 0x20, 0x6a, 0xaf, 0xe8, 0xa8, 0x37, 0x1e, 0x0f,
	0xdb, 0x96, 0x8e, 0xce, 0xf0, 0xf0, 0xb4, 0x6d, 0xa3, 0x00, 0x3c, 0x1c, 0xbd, 0x3b, 0x1f, 0xb5,
	0x9d, 0xed, 0x1d, 0x58, 0x1b, 0x51, 0x51, 0xa6, 0x31, 0x1d, 0x29, 0x97, 0xd3, 0x02, 0xad, 0x41,
	0x70, 0x39, 0xe8, 0x45, 0xc7, 0xfd, 0x71, 0xef, 0x8b, 0x82, 0xb7, 0xa0, 0x59, 0x27, 0xd6, 0xf6,
	0x73, 0x68, 0x55, 0xc3, 0x1f, 0x52, 0x96, 0xe8, 0xde, 0x28, 0xc2, 0x57, 0xe7, 0xa7, 0x5a, 0xa7,
	0x09, 0xce, 0xfb, 0x8b, 0x13, 0x25, 0x83, 0x60, 0xfd, 0xea, 0x1c, 0x8f, 0x2f, 0x8f, 0xfb, 0x75,
	0xd3, 0x3e, 0x81, 0xaf, 0x7e, 0xfd, 0x9b, 0x5d, 0x37, 0xcc, 0x5f, 0xc2, 0xfe, 0xcf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x96, 0x6f, 0x56, 0x96, 0x93, 0x04, 0x00, 0x00,
}
