// TODO: we need this LoadBalancer for the workflows to make sense: they all operate on load
// balancers. So: do we expose this directly, or is just a special kind of LoadBalancer?
syntax = "proto3";

package tetrate.api.tcc.v1.workflows;
option go_package = "github.com/tetrateio/tetrate/api/tcc/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service LoadBalancers {
  rpc CreateLoadBalancer(CreateLoadBalancerRequest) returns (LoadBalancer) {
    option (google.api.http) = {
      post: "/v1/loadbalancers/tenant/{tenant}/workspace/{workspace}/{name}"
      body: "*"
    };
  };

  rpc GetLoadBalancer(GetLoadBalancerRequest) returns (LoadBalancer) {
    option (google.api.http) = {
      get: "/v1/loadbalancers/tenant/{tenant}/workspace/{workspace}/{name}"
    };
  };

  rpc ListTenantLoadBalancer(ListTenantLoadBalancerRequest) returns (ListLoadBalancerResponse) {
    option (google.api.http) = {
      get: "/v1/loadbalancers/tenant/{tenant}"
    };
  };

  rpc ListWorkspaceLoadBalancer(ListWorkspaceLoadBalancerRequest)
      returns (ListLoadBalancerResponse) {
    option (google.api.http) = {
      get: "/v1/loadbalancers/tenant/{tenant}/workspace/{workspace}"
    };
  };

  rpc UpdateLoadBalancer(UpdateLoadBalancerRequest) returns (LoadBalancer) {
    option (google.api.http) = {
      put: "/v1/loadbalancers/tenant/{tenant}/workspace/{workspace}/{name}"
      body: "*"
    };
  };

  rpc DeleteLoadBalancer(DeleteLoadBalancerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/loadbalancers/tenant/{tenant}/workspace/{workspace}/{name}"
    };
  };
}

message LoadBalancer {
  // The name of the service that implements this load balancer
  string name = 1;
  string workspace = 2;
  string tenant = 3;

  // f5 or envoy
  LBClass class = 4;

  oneof class_info {
    // If its a hardware load balancer like F5, we need its management
    // IP to talk to it. TODO(@rshriram): we need some credentials, or
    // what not to talk to F5. Those should be part of this call?
    string management_ip = 5;

    // The name of the service that implements this load balancer behavior (i.e. the set of Envoys)
    // e.g. tenant/123/workspace/456/service/ingress-envoys.foo.com.
    string service_name = 6;
  }

  map<string, string> labels = 7;

  // List of services attached to this loadbalancer in the form
  // `tenant/123/workspace/456/service/foo.com`
  repeated string services = 8;
}

message CreateLoadBalancerRequest {
  // e.g. "f5-ltm"
  string name = 1;
  string workspace = 2;
  string tenant = 3;

  // f5 or envoy
  LBClass class = 4;

  oneof class_info {
    // If its a hardware load balancer like F5, we need its management
    // IP to talk to it. TODO(@rshriram): we need some credentials, or
    // what not to talk to F5. Those should be part of this call?
    string management_ip = 5;

    // The name of the service that implements this load balancer behavior (i.e. the set of Envoys)
    // e.g. tenant/123/workspace/456/service/ingress-envoys.foo.com.
    string service_name = 6;
  }

  map<string, string> labels = 7;
}

message GetLoadBalancerRequest {
  string name = 1;
  string workspace = 2;
  string tenant = 3;
}

message ListWorkspaceLoadBalancerRequest {
  string workspace = 1;
  string tenant = 2;
}

message ListTenantLoadBalancerRequest {
  string tenant = 1;
}

message ListLoadBalancerResponse {
  repeated LoadBalancer loadbalancers = 1;
}

message UpdateLoadBalancerRequest {
  // Immutable, name of the load balancer being updated. e.g. "zone-3-ingress"
  string name = 1;
  string workspace = 2;
  string tenant = 3;

  // f5 or envoy
  LBClass class = 4;

  oneof class_info {
    // If its a hardware load balancer like F5, we need its management
    // IP to talk to it. TODO(@rshriram): we need some credentials, or
    // what not to talk to F5. Those should be part of this call?
    string management_ip = 5;

    // The name of the service that implements this load balancer behavior (i.e. the set of Envoys)
    // e.g. tenant/123/workspace/456/service/ingress-envoys.foo.com.
    string service_name = 6;
  }

  map<string, string> labels = 7;
}

message DeleteLoadBalancerRequest {
  string name = 1;
  string workspace = 2;
  string tenant = 3;
}

enum LBClass {
  Envoy = 0;
  F5 = 1;
}
