// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loadbalancer.proto

package v1 // import "github.com/tetrateio/tetrate/api/tcc/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LBClass int32

const (
	LBClass_Envoy LBClass = 0
	LBClass_F5    LBClass = 1
)

var LBClass_name = map[int32]string{
	0: "Envoy",
	1: "F5",
}
var LBClass_value = map[string]int32{
	"Envoy": 0,
	"F5":    1,
}

func (x LBClass) String() string {
	return proto.EnumName(LBClass_name, int32(x))
}
func (LBClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{0}
}

type LoadBalancer struct {
	// The name of the service that implements this load balancer
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// f5 or envoy
	Class LBClass `protobuf:"varint,4,opt,name=class,proto3,enum=tetrate.api.tcc.v1.workflows.LBClass" json:"class,omitempty"`
	// Types that are valid to be assigned to ClassInfo:
	//	*LoadBalancer_ManagementIp
	//	*LoadBalancer_ServiceName
	ClassInfo isLoadBalancer_ClassInfo `protobuf_oneof:"class_info"`
	Labels    map[string]string        `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// List of services attached to this loadbalancer in the form
	// `tenant/123/workspace/456/service/foo.com`
	Services             []string `protobuf:"bytes,8,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadBalancer) Reset()         { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()    {}
func (*LoadBalancer) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{0}
}
func (m *LoadBalancer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancer.Unmarshal(m, b)
}
func (m *LoadBalancer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancer.Marshal(b, m, deterministic)
}
func (dst *LoadBalancer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancer.Merge(dst, src)
}
func (m *LoadBalancer) XXX_Size() int {
	return xxx_messageInfo_LoadBalancer.Size(m)
}
func (m *LoadBalancer) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancer.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancer proto.InternalMessageInfo

func (m *LoadBalancer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoadBalancer) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *LoadBalancer) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *LoadBalancer) GetClass() LBClass {
	if m != nil {
		return m.Class
	}
	return LBClass_Envoy
}

type isLoadBalancer_ClassInfo interface {
	isLoadBalancer_ClassInfo()
}

type LoadBalancer_ManagementIp struct {
	ManagementIp string `protobuf:"bytes,5,opt,name=management_ip,json=managementIp,proto3,oneof"`
}

type LoadBalancer_ServiceName struct {
	ServiceName string `protobuf:"bytes,6,opt,name=service_name,json=serviceName,proto3,oneof"`
}

func (*LoadBalancer_ManagementIp) isLoadBalancer_ClassInfo() {}

func (*LoadBalancer_ServiceName) isLoadBalancer_ClassInfo() {}

func (m *LoadBalancer) GetClassInfo() isLoadBalancer_ClassInfo {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

func (m *LoadBalancer) GetManagementIp() string {
	if x, ok := m.GetClassInfo().(*LoadBalancer_ManagementIp); ok {
		return x.ManagementIp
	}
	return ""
}

func (m *LoadBalancer) GetServiceName() string {
	if x, ok := m.GetClassInfo().(*LoadBalancer_ServiceName); ok {
		return x.ServiceName
	}
	return ""
}

func (m *LoadBalancer) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *LoadBalancer) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LoadBalancer) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LoadBalancer_OneofMarshaler, _LoadBalancer_OneofUnmarshaler, _LoadBalancer_OneofSizer, []interface{}{
		(*LoadBalancer_ManagementIp)(nil),
		(*LoadBalancer_ServiceName)(nil),
	}
}

func _LoadBalancer_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LoadBalancer)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *LoadBalancer_ManagementIp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ManagementIp)
	case *LoadBalancer_ServiceName:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ServiceName)
	case nil:
	default:
		return fmt.Errorf("LoadBalancer.ClassInfo has unexpected type %T", x)
	}
	return nil
}

func _LoadBalancer_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LoadBalancer)
	switch tag {
	case 5: // class_info.management_ip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &LoadBalancer_ManagementIp{x}
		return true, err
	case 6: // class_info.service_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &LoadBalancer_ServiceName{x}
		return true, err
	default:
		return false, nil
	}
}

func _LoadBalancer_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LoadBalancer)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *LoadBalancer_ManagementIp:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ManagementIp)))
		n += len(x.ManagementIp)
	case *LoadBalancer_ServiceName:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ServiceName)))
		n += len(x.ServiceName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateLoadBalancerRequest struct {
	// e.g. "f5-ltm"
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// f5 or envoy
	Class LBClass `protobuf:"varint,4,opt,name=class,proto3,enum=tetrate.api.tcc.v1.workflows.LBClass" json:"class,omitempty"`
	// Types that are valid to be assigned to ClassInfo:
	//	*CreateLoadBalancerRequest_ManagementIp
	//	*CreateLoadBalancerRequest_ServiceName
	ClassInfo            isCreateLoadBalancerRequest_ClassInfo `protobuf_oneof:"class_info"`
	Labels               map[string]string                     `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CreateLoadBalancerRequest) Reset()         { *m = CreateLoadBalancerRequest{} }
func (m *CreateLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerRequest) ProtoMessage()    {}
func (*CreateLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{1}
}
func (m *CreateLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerRequest.Unmarshal(m, b)
}
func (m *CreateLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *CreateLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerRequest.Merge(dst, src)
}
func (m *CreateLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerRequest.Size(m)
}
func (m *CreateLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerRequest proto.InternalMessageInfo

func (m *CreateLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetClass() LBClass {
	if m != nil {
		return m.Class
	}
	return LBClass_Envoy
}

type isCreateLoadBalancerRequest_ClassInfo interface {
	isCreateLoadBalancerRequest_ClassInfo()
}

type CreateLoadBalancerRequest_ManagementIp struct {
	ManagementIp string `protobuf:"bytes,5,opt,name=management_ip,json=managementIp,proto3,oneof"`
}

type CreateLoadBalancerRequest_ServiceName struct {
	ServiceName string `protobuf:"bytes,6,opt,name=service_name,json=serviceName,proto3,oneof"`
}

func (*CreateLoadBalancerRequest_ManagementIp) isCreateLoadBalancerRequest_ClassInfo() {}

func (*CreateLoadBalancerRequest_ServiceName) isCreateLoadBalancerRequest_ClassInfo() {}

func (m *CreateLoadBalancerRequest) GetClassInfo() isCreateLoadBalancerRequest_ClassInfo {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

func (m *CreateLoadBalancerRequest) GetManagementIp() string {
	if x, ok := m.GetClassInfo().(*CreateLoadBalancerRequest_ManagementIp); ok {
		return x.ManagementIp
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetServiceName() string {
	if x, ok := m.GetClassInfo().(*CreateLoadBalancerRequest_ServiceName); ok {
		return x.ServiceName
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateLoadBalancerRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateLoadBalancerRequest_OneofMarshaler, _CreateLoadBalancerRequest_OneofUnmarshaler, _CreateLoadBalancerRequest_OneofSizer, []interface{}{
		(*CreateLoadBalancerRequest_ManagementIp)(nil),
		(*CreateLoadBalancerRequest_ServiceName)(nil),
	}
}

func _CreateLoadBalancerRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateLoadBalancerRequest)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *CreateLoadBalancerRequest_ManagementIp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ManagementIp)
	case *CreateLoadBalancerRequest_ServiceName:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ServiceName)
	case nil:
	default:
		return fmt.Errorf("CreateLoadBalancerRequest.ClassInfo has unexpected type %T", x)
	}
	return nil
}

func _CreateLoadBalancerRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateLoadBalancerRequest)
	switch tag {
	case 5: // class_info.management_ip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &CreateLoadBalancerRequest_ManagementIp{x}
		return true, err
	case 6: // class_info.service_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &CreateLoadBalancerRequest_ServiceName{x}
		return true, err
	default:
		return false, nil
	}
}

func _CreateLoadBalancerRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateLoadBalancerRequest)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *CreateLoadBalancerRequest_ManagementIp:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ManagementIp)))
		n += len(x.ManagementIp)
	case *CreateLoadBalancerRequest_ServiceName:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ServiceName)))
		n += len(x.ServiceName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GetLoadBalancerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace            string   `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLoadBalancerRequest) Reset()         { *m = GetLoadBalancerRequest{} }
func (m *GetLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*GetLoadBalancerRequest) ProtoMessage()    {}
func (*GetLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{2}
}
func (m *GetLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadBalancerRequest.Unmarshal(m, b)
}
func (m *GetLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *GetLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadBalancerRequest.Merge(dst, src)
}
func (m *GetLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_GetLoadBalancerRequest.Size(m)
}
func (m *GetLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadBalancerRequest proto.InternalMessageInfo

func (m *GetLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetLoadBalancerRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListWorkspaceLoadBalancerRequest struct {
	Workspace            string   `protobuf:"bytes,1,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWorkspaceLoadBalancerRequest) Reset()         { *m = ListWorkspaceLoadBalancerRequest{} }
func (m *ListWorkspaceLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkspaceLoadBalancerRequest) ProtoMessage()    {}
func (*ListWorkspaceLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{3}
}
func (m *ListWorkspaceLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkspaceLoadBalancerRequest.Unmarshal(m, b)
}
func (m *ListWorkspaceLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkspaceLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *ListWorkspaceLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkspaceLoadBalancerRequest.Merge(dst, src)
}
func (m *ListWorkspaceLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkspaceLoadBalancerRequest.Size(m)
}
func (m *ListWorkspaceLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkspaceLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkspaceLoadBalancerRequest proto.InternalMessageInfo

func (m *ListWorkspaceLoadBalancerRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *ListWorkspaceLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListTenantLoadBalancerRequest struct {
	Tenant               string   `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTenantLoadBalancerRequest) Reset()         { *m = ListTenantLoadBalancerRequest{} }
func (m *ListTenantLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*ListTenantLoadBalancerRequest) ProtoMessage()    {}
func (*ListTenantLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{4}
}
func (m *ListTenantLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTenantLoadBalancerRequest.Unmarshal(m, b)
}
func (m *ListTenantLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTenantLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *ListTenantLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTenantLoadBalancerRequest.Merge(dst, src)
}
func (m *ListTenantLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_ListTenantLoadBalancerRequest.Size(m)
}
func (m *ListTenantLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTenantLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTenantLoadBalancerRequest proto.InternalMessageInfo

func (m *ListTenantLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListLoadBalancerResponse struct {
	Loadbalancers        []*LoadBalancer `protobuf:"bytes,1,rep,name=loadbalancers,proto3" json:"loadbalancers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListLoadBalancerResponse) Reset()         { *m = ListLoadBalancerResponse{} }
func (m *ListLoadBalancerResponse) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancerResponse) ProtoMessage()    {}
func (*ListLoadBalancerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{5}
}
func (m *ListLoadBalancerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancerResponse.Unmarshal(m, b)
}
func (m *ListLoadBalancerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancerResponse.Marshal(b, m, deterministic)
}
func (dst *ListLoadBalancerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancerResponse.Merge(dst, src)
}
func (m *ListLoadBalancerResponse) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancerResponse.Size(m)
}
func (m *ListLoadBalancerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancerResponse proto.InternalMessageInfo

func (m *ListLoadBalancerResponse) GetLoadbalancers() []*LoadBalancer {
	if m != nil {
		return m.Loadbalancers
	}
	return nil
}

type UpdateLoadBalancerRequest struct {
	// Immutable, name of the load balancer being updated. e.g. "zone-3-ingress"
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// f5 or envoy
	Class LBClass `protobuf:"varint,4,opt,name=class,proto3,enum=tetrate.api.tcc.v1.workflows.LBClass" json:"class,omitempty"`
	// Types that are valid to be assigned to ClassInfo:
	//	*UpdateLoadBalancerRequest_ManagementIp
	//	*UpdateLoadBalancerRequest_ServiceName
	ClassInfo            isUpdateLoadBalancerRequest_ClassInfo `protobuf_oneof:"class_info"`
	Labels               map[string]string                     `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *UpdateLoadBalancerRequest) Reset()         { *m = UpdateLoadBalancerRequest{} }
func (m *UpdateLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLoadBalancerRequest) ProtoMessage()    {}
func (*UpdateLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{6}
}
func (m *UpdateLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLoadBalancerRequest.Unmarshal(m, b)
}
func (m *UpdateLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLoadBalancerRequest.Merge(dst, src)
}
func (m *UpdateLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLoadBalancerRequest.Size(m)
}
func (m *UpdateLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLoadBalancerRequest proto.InternalMessageInfo

func (m *UpdateLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateLoadBalancerRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *UpdateLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *UpdateLoadBalancerRequest) GetClass() LBClass {
	if m != nil {
		return m.Class
	}
	return LBClass_Envoy
}

type isUpdateLoadBalancerRequest_ClassInfo interface {
	isUpdateLoadBalancerRequest_ClassInfo()
}

type UpdateLoadBalancerRequest_ManagementIp struct {
	ManagementIp string `protobuf:"bytes,5,opt,name=management_ip,json=managementIp,proto3,oneof"`
}

type UpdateLoadBalancerRequest_ServiceName struct {
	ServiceName string `protobuf:"bytes,6,opt,name=service_name,json=serviceName,proto3,oneof"`
}

func (*UpdateLoadBalancerRequest_ManagementIp) isUpdateLoadBalancerRequest_ClassInfo() {}

func (*UpdateLoadBalancerRequest_ServiceName) isUpdateLoadBalancerRequest_ClassInfo() {}

func (m *UpdateLoadBalancerRequest) GetClassInfo() isUpdateLoadBalancerRequest_ClassInfo {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

func (m *UpdateLoadBalancerRequest) GetManagementIp() string {
	if x, ok := m.GetClassInfo().(*UpdateLoadBalancerRequest_ManagementIp); ok {
		return x.ManagementIp
	}
	return ""
}

func (m *UpdateLoadBalancerRequest) GetServiceName() string {
	if x, ok := m.GetClassInfo().(*UpdateLoadBalancerRequest_ServiceName); ok {
		return x.ServiceName
	}
	return ""
}

func (m *UpdateLoadBalancerRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateLoadBalancerRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateLoadBalancerRequest_OneofMarshaler, _UpdateLoadBalancerRequest_OneofUnmarshaler, _UpdateLoadBalancerRequest_OneofSizer, []interface{}{
		(*UpdateLoadBalancerRequest_ManagementIp)(nil),
		(*UpdateLoadBalancerRequest_ServiceName)(nil),
	}
}

func _UpdateLoadBalancerRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateLoadBalancerRequest)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *UpdateLoadBalancerRequest_ManagementIp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ManagementIp)
	case *UpdateLoadBalancerRequest_ServiceName:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ServiceName)
	case nil:
	default:
		return fmt.Errorf("UpdateLoadBalancerRequest.ClassInfo has unexpected type %T", x)
	}
	return nil
}

func _UpdateLoadBalancerRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateLoadBalancerRequest)
	switch tag {
	case 5: // class_info.management_ip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &UpdateLoadBalancerRequest_ManagementIp{x}
		return true, err
	case 6: // class_info.service_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ClassInfo = &UpdateLoadBalancerRequest_ServiceName{x}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateLoadBalancerRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateLoadBalancerRequest)
	// class_info
	switch x := m.ClassInfo.(type) {
	case *UpdateLoadBalancerRequest_ManagementIp:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ManagementIp)))
		n += len(x.ManagementIp)
	case *UpdateLoadBalancerRequest_ServiceName:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ServiceName)))
		n += len(x.ServiceName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeleteLoadBalancerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace            string   `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerRequest) Reset()         { *m = DeleteLoadBalancerRequest{} }
func (m *DeleteLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerRequest) ProtoMessage()    {}
func (*DeleteLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_loadbalancer_2db200532343f75f, []int{7}
}
func (m *DeleteLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerRequest.Merge(dst, src)
}
func (m *DeleteLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Size(m)
}
func (m *DeleteLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerRequest proto.InternalMessageInfo

func (m *DeleteLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteLoadBalancerRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *DeleteLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func init() {
	proto.RegisterType((*LoadBalancer)(nil), "tetrate.api.tcc.v1.workflows.LoadBalancer")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.workflows.LoadBalancer.LabelsEntry")
	proto.RegisterType((*CreateLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.CreateLoadBalancerRequest")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.workflows.CreateLoadBalancerRequest.LabelsEntry")
	proto.RegisterType((*GetLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.GetLoadBalancerRequest")
	proto.RegisterType((*ListWorkspaceLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.ListWorkspaceLoadBalancerRequest")
	proto.RegisterType((*ListTenantLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.ListTenantLoadBalancerRequest")
	proto.RegisterType((*ListLoadBalancerResponse)(nil), "tetrate.api.tcc.v1.workflows.ListLoadBalancerResponse")
	proto.RegisterType((*UpdateLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.UpdateLoadBalancerRequest")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.workflows.UpdateLoadBalancerRequest.LabelsEntry")
	proto.RegisterType((*DeleteLoadBalancerRequest)(nil), "tetrate.api.tcc.v1.workflows.DeleteLoadBalancerRequest")
	proto.RegisterEnum("tetrate.api.tcc.v1.workflows.LBClass", LBClass_name, LBClass_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoadBalancersClient is the client API for LoadBalancers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadBalancersClient interface {
	CreateLoadBalancer(ctx context.Context, in *CreateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error)
	GetLoadBalancer(ctx context.Context, in *GetLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error)
	ListTenantLoadBalancer(ctx context.Context, in *ListTenantLoadBalancerRequest, opts ...grpc.CallOption) (*ListLoadBalancerResponse, error)
	ListWorkspaceLoadBalancer(ctx context.Context, in *ListWorkspaceLoadBalancerRequest, opts ...grpc.CallOption) (*ListLoadBalancerResponse, error)
	UpdateLoadBalancer(ctx context.Context, in *UpdateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error)
	DeleteLoadBalancer(ctx context.Context, in *DeleteLoadBalancerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type loadBalancersClient struct {
	cc *grpc.ClientConn
}

func NewLoadBalancersClient(cc *grpc.ClientConn) LoadBalancersClient {
	return &loadBalancersClient{cc}
}

func (c *loadBalancersClient) CreateLoadBalancer(ctx context.Context, in *CreateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/CreateLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) GetLoadBalancer(ctx context.Context, in *GetLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/GetLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) ListTenantLoadBalancer(ctx context.Context, in *ListTenantLoadBalancerRequest, opts ...grpc.CallOption) (*ListLoadBalancerResponse, error) {
	out := new(ListLoadBalancerResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/ListTenantLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) ListWorkspaceLoadBalancer(ctx context.Context, in *ListWorkspaceLoadBalancerRequest, opts ...grpc.CallOption) (*ListLoadBalancerResponse, error) {
	out := new(ListLoadBalancerResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/ListWorkspaceLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) UpdateLoadBalancer(ctx context.Context, in *UpdateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/UpdateLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancersClient) DeleteLoadBalancer(ctx context.Context, in *DeleteLoadBalancerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.workflows.LoadBalancers/DeleteLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadBalancersServer is the server API for LoadBalancers service.
type LoadBalancersServer interface {
	CreateLoadBalancer(context.Context, *CreateLoadBalancerRequest) (*LoadBalancer, error)
	GetLoadBalancer(context.Context, *GetLoadBalancerRequest) (*LoadBalancer, error)
	ListTenantLoadBalancer(context.Context, *ListTenantLoadBalancerRequest) (*ListLoadBalancerResponse, error)
	ListWorkspaceLoadBalancer(context.Context, *ListWorkspaceLoadBalancerRequest) (*ListLoadBalancerResponse, error)
	UpdateLoadBalancer(context.Context, *UpdateLoadBalancerRequest) (*LoadBalancer, error)
	DeleteLoadBalancer(context.Context, *DeleteLoadBalancerRequest) (*empty.Empty, error)
}

func RegisterLoadBalancersServer(s *grpc.Server, srv LoadBalancersServer) {
	s.RegisterService(&_LoadBalancers_serviceDesc, srv)
}

func _LoadBalancers_CreateLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).CreateLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/CreateLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).CreateLoadBalancer(ctx, req.(*CreateLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_GetLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).GetLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/GetLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).GetLoadBalancer(ctx, req.(*GetLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_ListTenantLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTenantLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).ListTenantLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/ListTenantLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).ListTenantLoadBalancer(ctx, req.(*ListTenantLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_ListWorkspaceLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkspaceLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).ListWorkspaceLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/ListWorkspaceLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).ListWorkspaceLoadBalancer(ctx, req.(*ListWorkspaceLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_UpdateLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).UpdateLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/UpdateLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).UpdateLoadBalancer(ctx, req.(*UpdateLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancers_DeleteLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancersServer).DeleteLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.workflows.LoadBalancers/DeleteLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancersServer).DeleteLoadBalancer(ctx, req.(*DeleteLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadBalancers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.tcc.v1.workflows.LoadBalancers",
	HandlerType: (*LoadBalancersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLoadBalancer",
			Handler:    _LoadBalancers_CreateLoadBalancer_Handler,
		},
		{
			MethodName: "GetLoadBalancer",
			Handler:    _LoadBalancers_GetLoadBalancer_Handler,
		},
		{
			MethodName: "ListTenantLoadBalancer",
			Handler:    _LoadBalancers_ListTenantLoadBalancer_Handler,
		},
		{
			MethodName: "ListWorkspaceLoadBalancer",
			Handler:    _LoadBalancers_ListWorkspaceLoadBalancer_Handler,
		},
		{
			MethodName: "UpdateLoadBalancer",
			Handler:    _LoadBalancers_UpdateLoadBalancer_Handler,
		},
		{
			MethodName: "DeleteLoadBalancer",
			Handler:    _LoadBalancers_DeleteLoadBalancer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "loadbalancer.proto",
}

func init() { proto.RegisterFile("loadbalancer.proto", fileDescriptor_loadbalancer_2db200532343f75f) }

var fileDescriptor_loadbalancer_2db200532343f75f = []byte{
	// 727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdf, 0x4e, 0x13, 0x4f,
	0x14, 0x66, 0x5a, 0x5a, 0xe8, 0xa1, 0xfc, 0x7e, 0xe4, 0xc4, 0x34, 0xcb, 0x5a, 0x93, 0x5a, 0x42,
	0x2c, 0xbd, 0xd8, 0x0d, 0xa8, 0x20, 0x90, 0xa0, 0x69, 0x05, 0x25, 0x69, 0x88, 0x69, 0x34, 0x1a,
	0xbd, 0x20, 0xd3, 0x65, 0xa8, 0x1b, 0xb6, 0x3b, 0x6b, 0x67, 0x5a, 0xd2, 0x10, 0x6e, 0x7c, 0x05,
	0x8d, 0x77, 0x3e, 0x82, 0xf7, 0x26, 0xde, 0xfa, 0x06, 0xfa, 0x08, 0x3e, 0x88, 0xd9, 0xe9, 0x16,
	0x5a, 0x68, 0xbb, 0x52, 0xe0, 0xc6, 0x78, 0xb5, 0x73, 0x76, 0xe6, 0x9c, 0xf9, 0xbe, 0xf3, 0xe7,
	0xcb, 0x00, 0x3a, 0x9c, 0xee, 0x55, 0xa8, 0x43, 0x5d, 0x8b, 0xd5, 0x0d, 0xaf, 0xce, 0x25, 0xc7,
	0xb4, 0x64, 0xb2, 0x4e, 0x25, 0x33, 0xa8, 0x67, 0x1b, 0xd2, 0xb2, 0x8c, 0xe6, 0xa2, 0x71, 0xc8,
	0xeb, 0x07, 0xfb, 0x0e, 0x3f, 0x14, 0x7a, 0xba, 0xca, 0x79, 0xd5, 0x61, 0x26, 0xf5, 0x6c, 0x93,
	0xba, 0x2e, 0x97, 0x54, 0xda, 0xdc, 0x15, 0x6d, 0x5f, 0xfd, 0x66, 0xb0, 0xab, 0xac, 0x4a, 0x63,
	0xdf, 0x64, 0x35, 0x4f, 0xb6, 0xda, 0x9b, 0xd9, 0x4f, 0x51, 0x48, 0x96, 0x38, 0xdd, 0x2b, 0x04,
	0xf7, 0x21, 0xc2, 0xb8, 0x4b, 0x6b, 0x4c, 0x23, 0x19, 0x92, 0x4b, 0x94, 0xd5, 0x1a, 0xd3, 0x90,
	0xf0, 0x2f, 0x13, 0x1e, 0xb5, 0x98, 0x16, 0x51, 0x1b, 0xa7, 0x3f, 0x30, 0x05, 0x71, 0xc9, 0x5c,
	0xea, 0x4a, 0x2d, 0xaa, 0xb6, 0x02, 0x0b, 0xd7, 0x21, 0x66, 0x39, 0x54, 0x08, 0x6d, 0x3c, 0x43,
	0x72, 0xff, 0x2d, 0xcd, 0x1b, 0xc3, 0x38, 0x18, 0xa5, 0x42, 0xd1, 0x3f, 0x5c, 0x6e, 0xfb, 0xe0,
	0x3c, 0x4c, 0xd7, 0xa8, 0x4b, 0xab, 0xac, 0xc6, 0x5c, 0xb9, 0x6b, 0x7b, 0x5a, 0xcc, 0x8f, 0xfd,
	0x74, 0xac, 0x9c, 0x3c, 0xfd, 0xbd, 0xed, 0xe1, 0x1c, 0x24, 0x05, 0xab, 0x37, 0x6d, 0x8b, 0xed,
	0x2a, 0xd4, 0xf1, 0xe0, 0xd4, 0x54, 0xf0, 0x77, 0xc7, 0x87, 0xbf, 0x03, 0x71, 0x87, 0x56, 0x98,
	0x23, 0xb4, 0x89, 0x4c, 0x34, 0x37, 0xb5, 0xb4, 0x1c, 0x82, 0xa4, 0x2b, 0x1d, 0x46, 0x49, 0x39,
	0x6e, 0xba, 0xb2, 0xde, 0x2a, 0x07, 0x51, 0x50, 0x87, 0xc9, 0x20, 0xbc, 0xd0, 0x26, 0x33, 0xd1,
	0x5c, 0xa2, 0x7c, 0x62, 0xeb, 0xab, 0x30, 0xd5, 0xe5, 0x82, 0x33, 0x10, 0x3d, 0x60, 0xad, 0x20,
	0x99, 0xfe, 0x12, 0x6f, 0x40, 0xac, 0x49, 0x9d, 0x46, 0x27, 0x8f, 0x6d, 0x63, 0x2d, 0xf2, 0x80,
	0x14, 0x92, 0x00, 0x8a, 0xfb, 0xae, 0xed, 0xee, 0xf3, 0xec, 0xc7, 0x28, 0xcc, 0x16, 0xeb, 0x8c,
	0x4a, 0xd6, 0x8d, 0xa7, 0xcc, 0xde, 0x35, 0x98, 0x90, 0x7f, 0x63, 0x95, 0xde, 0x9c, 0xa9, 0x52,
	0x71, 0x38, 0x92, 0x81, 0xb9, 0xe9, 0x57, 0xb2, 0xab, 0x2b, 0x4b, 0x05, 0x52, 0x4f, 0x98, 0xbc,
	0xd6, 0x92, 0x64, 0x5f, 0x41, 0xa6, 0x64, 0x0b, 0xf9, 0xb2, 0x73, 0xb0, 0xdf, 0x6d, 0x3d, 0x91,
	0xc9, 0xe0, 0xc8, 0x91, 0x9e, 0xc8, 0x2b, 0x70, 0xcb, 0x8f, 0xfc, 0x5c, 0x59, 0xfd, 0xc2, 0x9e,
	0x3a, 0x92, 0x1e, 0x47, 0x07, 0x34, 0xdf, 0xb1, 0xd7, 0x45, 0x78, 0xdc, 0x15, 0x0c, 0x9f, 0xc1,
	0x74, 0xb7, 0x62, 0x09, 0x8d, 0xa8, 0xfa, 0xe5, 0xff, 0x7c, 0xca, 0xca, 0xbd, 0x01, 0x54, 0xef,
	0xbf, 0xf0, 0xf6, 0xfe, 0xf5, 0xfe, 0x00, 0x24, 0x03, 0x73, 0x73, 0xbd, 0xbd, 0xcf, 0x60, 0xf6,
	0x31, 0x73, 0xd8, 0x35, 0x57, 0x25, 0x9f, 0x86, 0x89, 0x20, 0xd5, 0x98, 0x80, 0xd8, 0xa6, 0xdb,
	0xe4, 0xad, 0x99, 0x31, 0x8c, 0x43, 0x64, 0xeb, 0xfe, 0x0c, 0x59, 0xfa, 0x9c, 0x80, 0xe9, 0xee,
	0xfb, 0x05, 0x7e, 0x27, 0x80, 0xe7, 0xd5, 0x00, 0x57, 0x46, 0xd4, 0x0f, 0xfd, 0x02, 0x8d, 0x9b,
	0xdd, 0x7e, 0xff, 0xe3, 0xd7, 0x87, 0x48, 0x31, 0xbb, 0x61, 0x36, 0x17, 0xcd, 0x9e, 0x26, 0x36,
	0xdb, 0x6c, 0xcc, 0xa3, 0xf6, 0xf7, 0xd8, 0x3c, 0x21, 0x6e, 0x1e, 0x9d, 0x2c, 0x8f, 0xcd, 0x23,
	0x3f, 0x51, 0xc7, 0x6b, 0x24, 0x8f, 0xdf, 0x08, 0xfc, 0x7f, 0x46, 0x5a, 0xf0, 0xde, 0x70, 0x28,
	0xfd, 0x95, 0xe8, 0x42, 0x04, 0xb6, 0x14, 0x81, 0x47, 0x78, 0x49, 0x02, 0xf8, 0x95, 0x40, 0xaa,
	0xbf, 0xb4, 0xe0, 0x7a, 0x08, 0x9c, 0x61, 0x82, 0xa4, 0x2f, 0x87, 0x3b, 0xf7, 0x13, 0xa5, 0xec,
	0x82, 0xe2, 0x35, 0x87, 0xb7, 0x43, 0x79, 0xe1, 0x4f, 0x02, 0xb3, 0x03, 0xf5, 0x16, 0x37, 0xc2,
	0x01, 0x0c, 0x13, 0xea, 0x91, 0x09, 0x3c, 0x54, 0x04, 0x56, 0x71, 0x65, 0xc4, 0xc2, 0xa8, 0xb1,
	0x38, 0x2f, 0x14, 0x61, 0x63, 0x31, 0x50, 0x5a, 0x46, 0x19, 0x0b, 0xfd, 0x0a, 0xc6, 0xe2, 0x0b,
	0x01, 0x3c, 0xaf, 0x3a, 0x61, 0x34, 0x06, 0xea, 0x94, 0x9e, 0x32, 0xda, 0xcf, 0x61, 0xa3, 0xf3,
	0x1c, 0x36, 0x36, 0xfd, 0xe7, 0x70, 0x67, 0x10, 0xf2, 0x97, 0x84, 0x5c, 0x58, 0x78, 0x7d, 0xa7,
	0x6a, 0xcb, 0xb7, 0x8d, 0x8a, 0x61, 0xf1, 0x9a, 0x19, 0x80, 0xb4, 0x79, 0x67, 0xa5, 0xde, 0xe8,
	0xd2, 0xb2, 0xcc, 0xe6, 0x62, 0x25, 0xae, 0x20, 0xdc, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x67,
	0x79, 0x8c, 0x49, 0xf1, 0x0b, 0x00, 0x00,
}
