// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endpoint.proto

package v1 // import "github.com/tetrateio/tetrate/api/tcc/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Endpoint defines a network address (IP or hostname) associated with
// the service.
type Endpoint struct {
	// read-only e.g. 1.2.3.4
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// empty if not associated with a service
	Service   string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Workspace string `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// REQUIRED: Address associated with the network endpoint without
	// the port.  Domain names can be used and must be fully-qualified
	// without wildcards.
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// Set of inbound traffic ports associated with the endpoint. The
	// ports must be associated with a port number that was declared
	// as part of the service.
	Ports map[uint32]uint32 `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The locality associated with the endpoint, in the form
	// country/region/zone. A locality corresponds to a failure domain
	// (country/region/zone).
	Locality string `protobuf:"bytes,8,opt,name=locality,proto3" json:"locality,omitempty"`
	// The load balancing weight associated with the endpoint. Endpoints
	// with higher weights in a pool will receive proportionally higher
	// traffic.
	Weight               uint32   `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Endpoint) Reset()         { *m = Endpoint{} }
func (m *Endpoint) String() string { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()    {}
func (*Endpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{0}
}
func (m *Endpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endpoint.Unmarshal(m, b)
}
func (m *Endpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endpoint.Marshal(b, m, deterministic)
}
func (dst *Endpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endpoint.Merge(dst, src)
}
func (m *Endpoint) XXX_Size() int {
	return xxx_messageInfo_Endpoint.Size(m)
}
func (m *Endpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Endpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Endpoint proto.InternalMessageInfo

func (m *Endpoint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Endpoint) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Endpoint) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Endpoint) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *Endpoint) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Endpoint) GetPorts() map[uint32]uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Endpoint) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Endpoint) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *Endpoint) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type CreateEndpointRequest struct {
	// Short name of the endpoint, e.g. "1.2.3.4". TODO: other name reqs/restrictions
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// optional
	Service   string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Workspace string `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`
	// REQUIRED: Address associated with the network endpoint without
	// the port.  Domain names can be used and must be fully-qualified
	// without wildcards.
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// Set of ports associated with the endpoint. The ports must be
	// associated with a port name that was declared as part of the
	// service.
	Ports map[uint32]uint32 `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The locality associated with the endpoint, in the form
	// country/region/zone. A locality corresponds to a failure domain
	// (country/region/zone).
	Locality string `protobuf:"bytes,8,opt,name=locality,proto3" json:"locality,omitempty"`
	// The load balancing weight associated with the endpoint. Endpoints
	// with higher weights in a pool will receive proportionally higher
	// traffic.
	Weight               uint32   `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEndpointRequest) Reset()         { *m = CreateEndpointRequest{} }
func (m *CreateEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEndpointRequest) ProtoMessage()    {}
func (*CreateEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{1}
}
func (m *CreateEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEndpointRequest.Unmarshal(m, b)
}
func (m *CreateEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *CreateEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEndpointRequest.Merge(dst, src)
}
func (m *CreateEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEndpointRequest.Size(m)
}
func (m *CreateEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEndpointRequest proto.InternalMessageInfo

func (m *CreateEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateEndpointRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CreateEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *CreateEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateEndpointRequest) GetPorts() map[uint32]uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *CreateEndpointRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateEndpointRequest) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *CreateEndpointRequest) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type GetEndpointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace            string   `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEndpointRequest) Reset()         { *m = GetEndpointRequest{} }
func (m *GetEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*GetEndpointRequest) ProtoMessage()    {}
func (*GetEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{2}
}
func (m *GetEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEndpointRequest.Unmarshal(m, b)
}
func (m *GetEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *GetEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEndpointRequest.Merge(dst, src)
}
func (m *GetEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_GetEndpointRequest.Size(m)
}
func (m *GetEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEndpointRequest proto.InternalMessageInfo

func (m *GetEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *GetEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListWorkspaceEndpointRequest struct {
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Workspace            string   `protobuf:"bytes,3,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWorkspaceEndpointRequest) Reset()         { *m = ListWorkspaceEndpointRequest{} }
func (m *ListWorkspaceEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkspaceEndpointRequest) ProtoMessage()    {}
func (*ListWorkspaceEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{3}
}
func (m *ListWorkspaceEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkspaceEndpointRequest.Unmarshal(m, b)
}
func (m *ListWorkspaceEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkspaceEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *ListWorkspaceEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkspaceEndpointRequest.Merge(dst, src)
}
func (m *ListWorkspaceEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkspaceEndpointRequest.Size(m)
}
func (m *ListWorkspaceEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkspaceEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkspaceEndpointRequest proto.InternalMessageInfo

func (m *ListWorkspaceEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListWorkspaceEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

type ListServiceEndpointRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Workspace            string   `protobuf:"bytes,3,opt,name=workspace,proto3" json:"workspace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceEndpointRequest) Reset()         { *m = ListServiceEndpointRequest{} }
func (m *ListServiceEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceEndpointRequest) ProtoMessage()    {}
func (*ListServiceEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{4}
}
func (m *ListServiceEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceEndpointRequest.Unmarshal(m, b)
}
func (m *ListServiceEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *ListServiceEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceEndpointRequest.Merge(dst, src)
}
func (m *ListServiceEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceEndpointRequest.Size(m)
}
func (m *ListServiceEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceEndpointRequest proto.InternalMessageInfo

func (m *ListServiceEndpointRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ListServiceEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListServiceEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

type ListServiceSubsetEndpointRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Workspace            string   `protobuf:"bytes,3,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Subset               string   `protobuf:"bytes,4,opt,name=subset,proto3" json:"subset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceSubsetEndpointRequest) Reset()         { *m = ListServiceSubsetEndpointRequest{} }
func (m *ListServiceSubsetEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceSubsetEndpointRequest) ProtoMessage()    {}
func (*ListServiceSubsetEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{5}
}
func (m *ListServiceSubsetEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceSubsetEndpointRequest.Unmarshal(m, b)
}
func (m *ListServiceSubsetEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceSubsetEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *ListServiceSubsetEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceSubsetEndpointRequest.Merge(dst, src)
}
func (m *ListServiceSubsetEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceSubsetEndpointRequest.Size(m)
}
func (m *ListServiceSubsetEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceSubsetEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceSubsetEndpointRequest proto.InternalMessageInfo

func (m *ListServiceSubsetEndpointRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ListServiceSubsetEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListServiceSubsetEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *ListServiceSubsetEndpointRequest) GetSubset() string {
	if m != nil {
		return m.Subset
	}
	return ""
}

type ListEndpointResponse struct {
	Endpoints            []*Endpoint `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListEndpointResponse) Reset()         { *m = ListEndpointResponse{} }
func (m *ListEndpointResponse) String() string { return proto.CompactTextString(m) }
func (*ListEndpointResponse) ProtoMessage()    {}
func (*ListEndpointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{6}
}
func (m *ListEndpointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEndpointResponse.Unmarshal(m, b)
}
func (m *ListEndpointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEndpointResponse.Marshal(b, m, deterministic)
}
func (dst *ListEndpointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEndpointResponse.Merge(dst, src)
}
func (m *ListEndpointResponse) XXX_Size() int {
	return xxx_messageInfo_ListEndpointResponse.Size(m)
}
func (m *ListEndpointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEndpointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEndpointResponse proto.InternalMessageInfo

func (m *ListEndpointResponse) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type UpdateEndpointRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant    string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// REQUIRED: Address associated with the network endpoint without
	// the port.  Domain names can be used and must be fully-qualified
	// without wildcards.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Set of ports associated with the endpoint. The ports must be
	// associated with a port name that was declared as part of the
	// service.
	Ports map[uint32]uint32 `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// One or more labels associated with the endpoint.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The locality associated with the endpoint, in the form
	// country/region/zone. A locality corresponds to a failure domain
	// (country/region/zone).
	Locality string `protobuf:"bytes,7,opt,name=locality,proto3" json:"locality,omitempty"`
	// The load balancing weight associated with the endpoint. Endpoints
	// with higher weights in a pool will receive proportionally higher
	// traffic.
	Weight               uint32   `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEndpointRequest) Reset()         { *m = UpdateEndpointRequest{} }
func (m *UpdateEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEndpointRequest) ProtoMessage()    {}
func (*UpdateEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{7}
}
func (m *UpdateEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEndpointRequest.Unmarshal(m, b)
}
func (m *UpdateEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEndpointRequest.Merge(dst, src)
}
func (m *UpdateEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEndpointRequest.Size(m)
}
func (m *UpdateEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEndpointRequest proto.InternalMessageInfo

func (m *UpdateEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *UpdateEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *UpdateEndpointRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UpdateEndpointRequest) GetPorts() map[uint32]uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *UpdateEndpointRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *UpdateEndpointRequest) GetLocality() string {
	if m != nil {
		return m.Locality
	}
	return ""
}

func (m *UpdateEndpointRequest) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type DeleteEndpointRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Workspace            string   `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEndpointRequest) Reset()         { *m = DeleteEndpointRequest{} }
func (m *DeleteEndpointRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEndpointRequest) ProtoMessage()    {}
func (*DeleteEndpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_endpoint_216daf82f93bbe81, []int{8}
}
func (m *DeleteEndpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEndpointRequest.Unmarshal(m, b)
}
func (m *DeleteEndpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEndpointRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteEndpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEndpointRequest.Merge(dst, src)
}
func (m *DeleteEndpointRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEndpointRequest.Size(m)
}
func (m *DeleteEndpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEndpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEndpointRequest proto.InternalMessageInfo

func (m *DeleteEndpointRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteEndpointRequest) GetWorkspace() string {
	if m != nil {
		return m.Workspace
	}
	return ""
}

func (m *DeleteEndpointRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func init() {
	proto.RegisterType((*Endpoint)(nil), "tetrate.api.tcc.v1.Endpoint")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.Endpoint.LabelsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tetrate.api.tcc.v1.Endpoint.PortsEntry")
	proto.RegisterType((*CreateEndpointRequest)(nil), "tetrate.api.tcc.v1.CreateEndpointRequest")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.CreateEndpointRequest.LabelsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tetrate.api.tcc.v1.CreateEndpointRequest.PortsEntry")
	proto.RegisterType((*GetEndpointRequest)(nil), "tetrate.api.tcc.v1.GetEndpointRequest")
	proto.RegisterType((*ListWorkspaceEndpointRequest)(nil), "tetrate.api.tcc.v1.ListWorkspaceEndpointRequest")
	proto.RegisterType((*ListServiceEndpointRequest)(nil), "tetrate.api.tcc.v1.ListServiceEndpointRequest")
	proto.RegisterType((*ListServiceSubsetEndpointRequest)(nil), "tetrate.api.tcc.v1.ListServiceSubsetEndpointRequest")
	proto.RegisterType((*ListEndpointResponse)(nil), "tetrate.api.tcc.v1.ListEndpointResponse")
	proto.RegisterType((*UpdateEndpointRequest)(nil), "tetrate.api.tcc.v1.UpdateEndpointRequest")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.v1.UpdateEndpointRequest.LabelsEntry")
	proto.RegisterMapType((map[uint32]uint32)(nil), "tetrate.api.tcc.v1.UpdateEndpointRequest.PortsEntry")
	proto.RegisterType((*DeleteEndpointRequest)(nil), "tetrate.api.tcc.v1.DeleteEndpointRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EndpointsClient is the client API for Endpoints service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EndpointsClient interface {
	// Endpoints may or may not belong to a service
	CreateEndpoint(ctx context.Context, in *CreateEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error)
	GetEndpoint(ctx context.Context, in *GetEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error)
	ListWorkspaceEndpoint(ctx context.Context, in *ListWorkspaceEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error)
	ListServiceEndpoint(ctx context.Context, in *ListServiceEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error)
	ListServiceSubsetEndpoint(ctx context.Context, in *ListServiceSubsetEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error)
	UpdateEndpoint(ctx context.Context, in *UpdateEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error)
	DeleteEndpoint(ctx context.Context, in *DeleteEndpointRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type endpointsClient struct {
	cc *grpc.ClientConn
}

func NewEndpointsClient(cc *grpc.ClientConn) EndpointsClient {
	return &endpointsClient{cc}
}

func (c *endpointsClient) CreateEndpoint(ctx context.Context, in *CreateEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error) {
	out := new(Endpoint)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/CreateEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) GetEndpoint(ctx context.Context, in *GetEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error) {
	out := new(Endpoint)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/GetEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) ListWorkspaceEndpoint(ctx context.Context, in *ListWorkspaceEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error) {
	out := new(ListEndpointResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/ListWorkspaceEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) ListServiceEndpoint(ctx context.Context, in *ListServiceEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error) {
	out := new(ListEndpointResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/ListServiceEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) ListServiceSubsetEndpoint(ctx context.Context, in *ListServiceSubsetEndpointRequest, opts ...grpc.CallOption) (*ListEndpointResponse, error) {
	out := new(ListEndpointResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/ListServiceSubsetEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) UpdateEndpoint(ctx context.Context, in *UpdateEndpointRequest, opts ...grpc.CallOption) (*Endpoint, error) {
	out := new(Endpoint)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/UpdateEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *endpointsClient) DeleteEndpoint(ctx context.Context, in *DeleteEndpointRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.v1.Endpoints/DeleteEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EndpointsServer is the server API for Endpoints service.
type EndpointsServer interface {
	// Endpoints may or may not belong to a service
	CreateEndpoint(context.Context, *CreateEndpointRequest) (*Endpoint, error)
	GetEndpoint(context.Context, *GetEndpointRequest) (*Endpoint, error)
	ListWorkspaceEndpoint(context.Context, *ListWorkspaceEndpointRequest) (*ListEndpointResponse, error)
	ListServiceEndpoint(context.Context, *ListServiceEndpointRequest) (*ListEndpointResponse, error)
	ListServiceSubsetEndpoint(context.Context, *ListServiceSubsetEndpointRequest) (*ListEndpointResponse, error)
	UpdateEndpoint(context.Context, *UpdateEndpointRequest) (*Endpoint, error)
	DeleteEndpoint(context.Context, *DeleteEndpointRequest) (*empty.Empty, error)
}

func RegisterEndpointsServer(s *grpc.Server, srv EndpointsServer) {
	s.RegisterService(&_Endpoints_serviceDesc, srv)
}

func _Endpoints_CreateEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).CreateEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/CreateEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).CreateEndpoint(ctx, req.(*CreateEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_GetEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).GetEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/GetEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).GetEndpoint(ctx, req.(*GetEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_ListWorkspaceEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkspaceEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).ListWorkspaceEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/ListWorkspaceEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).ListWorkspaceEndpoint(ctx, req.(*ListWorkspaceEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_ListServiceEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).ListServiceEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/ListServiceEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).ListServiceEndpoint(ctx, req.(*ListServiceEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_ListServiceSubsetEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceSubsetEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).ListServiceSubsetEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/ListServiceSubsetEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).ListServiceSubsetEndpoint(ctx, req.(*ListServiceSubsetEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_UpdateEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).UpdateEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/UpdateEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).UpdateEndpoint(ctx, req.(*UpdateEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Endpoints_DeleteEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEndpointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EndpointsServer).DeleteEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.v1.Endpoints/DeleteEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EndpointsServer).DeleteEndpoint(ctx, req.(*DeleteEndpointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Endpoints_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.tcc.v1.Endpoints",
	HandlerType: (*EndpointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEndpoint",
			Handler:    _Endpoints_CreateEndpoint_Handler,
		},
		{
			MethodName: "GetEndpoint",
			Handler:    _Endpoints_GetEndpoint_Handler,
		},
		{
			MethodName: "ListWorkspaceEndpoint",
			Handler:    _Endpoints_ListWorkspaceEndpoint_Handler,
		},
		{
			MethodName: "ListServiceEndpoint",
			Handler:    _Endpoints_ListServiceEndpoint_Handler,
		},
		{
			MethodName: "ListServiceSubsetEndpoint",
			Handler:    _Endpoints_ListServiceSubsetEndpoint_Handler,
		},
		{
			MethodName: "UpdateEndpoint",
			Handler:    _Endpoints_UpdateEndpoint_Handler,
		},
		{
			MethodName: "DeleteEndpoint",
			Handler:    _Endpoints_DeleteEndpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "endpoint.proto",
}

func init() { proto.RegisterFile("endpoint.proto", fileDescriptor_endpoint_216daf82f93bbe81) }

var fileDescriptor_endpoint_216daf82f93bbe81 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xcd, 0x6a, 0xdb, 0x4a,
	0x14, 0x46, 0x76, 0xec, 0x58, 0x27, 0x24, 0x5c, 0xe6, 0xc6, 0x41, 0x57, 0xd7, 0x0b, 0xa3, 0xc5,
	0x8d, 0x93, 0x85, 0xe6, 0xe6, 0x0f, 0x52, 0xb7, 0xa5, 0x25, 0xad, 0x09, 0x94, 0x04, 0x8a, 0xd2,
	0x10, 0x28, 0xb4, 0x20, 0xcb, 0x53, 0x47, 0x44, 0x91, 0x54, 0xcd, 0xd8, 0xc1, 0x18, 0x6f, 0xba,
	0xec, 0xb6, 0x8b, 0x6e, 0xfb, 0x08, 0xa5, 0x0f, 0xd0, 0x3e, 0x44, 0xa1, 0xd0, 0xae, 0xfb, 0x20,
	0x45, 0x23, 0xc9, 0x7f, 0x19, 0x39, 0xce, 0x4f, 0x09, 0x5d, 0x79, 0x8e, 0x66, 0xce, 0x39, 0xdf,
	0x99, 0x73, 0xbe, 0xcf, 0x0c, 0x2c, 0x10, 0xb7, 0xe1, 0x7b, 0xb6, 0xcb, 0x74, 0x3f, 0xf0, 0x98,
	0x87, 0x10, 0x23, 0x2c, 0x30, 0x19, 0xd1, 0x4d, 0xdf, 0xd6, 0x99, 0x65, 0xe9, 0xed, 0x35, 0xb5,
	0xd4, 0xf4, 0xbc, 0xa6, 0x43, 0xb0, 0xe9, 0xdb, 0xd8, 0x74, 0x5d, 0x8f, 0x99, 0xcc, 0xf6, 0x5c,
	0x1a, 0x79, 0xa8, 0xff, 0xc6, 0xbb, 0xdc, 0xaa, 0xb7, 0x5e, 0x61, 0x72, 0xea, 0xb3, 0x4e, 0xb4,
	0xa9, 0x7d, 0xca, 0x42, 0xa1, 0x16, 0x67, 0x40, 0x08, 0x66, 0x5c, 0xf3, 0x94, 0x28, 0x52, 0x59,
	0xaa, 0xc8, 0x06, 0x5f, 0x23, 0x05, 0x66, 0x29, 0x09, 0xda, 0xb6, 0x45, 0x94, 0x0c, 0xff, 0x9c,
	0x98, 0x68, 0x09, 0xf2, 0x8c, 0xb8, 0xa6, 0xcb, 0x94, 0x2c, 0xdf, 0x88, 0x2d, 0x54, 0x02, 0xf9,
	0xcc, 0x0b, 0x4e, 0xa8, 0x6f, 0x5a, 0x44, 0x99, 0xe1, 0x5b, 0x83, 0x0f, 0x61, 0x3c, 0xb3, 0xd1,
	0x08, 0x08, 0xa5, 0x4a, 0x2e, 0x8a, 0x17, 0x9b, 0xe8, 0x3e, 0xe4, 0x7c, 0x2f, 0x60, 0x54, 0xc9,
	0x97, 0xb3, 0x95, 0xb9, 0xf5, 0x65, 0xfd, 0x7c, 0xa5, 0x7a, 0x02, 0x55, 0x7f, 0x1a, 0x9e, 0xac,
	0xb9, 0x2c, 0xe8, 0x18, 0x91, 0x17, 0x7a, 0x08, 0x79, 0xc7, 0xac, 0x13, 0x87, 0x2a, 0xb3, 0xdc,
	0xbf, 0x32, 0xd1, 0x7f, 0x8f, 0x1f, 0x8d, 0x02, 0xc4, 0x7e, 0x48, 0x85, 0x82, 0xe3, 0x59, 0xa6,
	0x63, 0xb3, 0x8e, 0x52, 0xe0, 0xd8, 0xfa, 0x76, 0x58, 0xec, 0x19, 0xb1, 0x9b, 0xc7, 0x4c, 0x91,
	0xcb, 0x52, 0x65, 0xde, 0x88, 0x2d, 0x75, 0x1b, 0x60, 0x00, 0x05, 0xfd, 0x05, 0xd9, 0x13, 0xd2,
	0xe1, 0xf7, 0x37, 0x6f, 0x84, 0x4b, 0xb4, 0x08, 0xb9, 0xb6, 0xe9, 0xb4, 0xa2, 0xcb, 0x9b, 0x37,
	0x22, 0xa3, 0x9a, 0xd9, 0x96, 0xd4, 0x3b, 0x30, 0x37, 0x04, 0x62, 0xd8, 0x55, 0x16, 0xb8, 0xca,
	0x43, 0xae, 0xda, 0xf7, 0x2c, 0x14, 0x1f, 0x05, 0xc4, 0x64, 0x24, 0xa9, 0xc7, 0x20, 0xaf, 0x5b,
	0x84, 0xde, 0x76, 0x07, 0x9f, 0x8c, 0x76, 0x70, 0x53, 0xd4, 0x01, 0x21, 0x6e, 0x41, 0x3b, 0xf7,
	0xc7, 0xda, 0xb9, 0x35, 0x7d, 0xb0, 0x3f, 0xba, 0xb7, 0x2f, 0x01, 0xed, 0x12, 0x36, 0x4d, 0x5f,
	0x47, 0xba, 0x94, 0x19, 0xef, 0x52, 0x4a, 0x6f, 0xb5, 0x67, 0x50, 0xda, 0xb3, 0x29, 0x3b, 0x4a,
	0x0e, 0x8e, 0x67, 0x1a, 0xf8, 0x65, 0xd2, 0x67, 0x22, 0x3b, 0x96, 0x4d, 0x73, 0x40, 0x0d, 0xa3,
	0x1e, 0x44, 0x83, 0x35, 0x1e, 0x73, 0x68, 0x02, 0xa5, 0xb4, 0x09, 0xbc, 0x4c, 0xb6, 0xb7, 0x12,
	0x94, 0x87, 0xd2, 0x1d, 0xb4, 0xea, 0xf4, 0xfc, 0x95, 0xdd, 0x70, 0xd2, 0xd0, 0x8b, 0xf2, 0x44,
	0x31, 0x23, 0x62, 0x4b, 0x33, 0x60, 0x31, 0xc4, 0x32, 0x48, 0x4f, 0x7d, 0xcf, 0xa5, 0x04, 0x55,
	0x41, 0x4e, 0xa4, 0x9b, 0x2a, 0x12, 0x9f, 0xe1, 0xd2, 0x24, 0x49, 0x32, 0x06, 0xc7, 0xb5, 0x2f,
	0x59, 0x28, 0x1e, 0xfa, 0x8d, 0x29, 0x09, 0x7e, 0xa5, 0x41, 0x18, 0xa6, 0xf1, 0x4c, 0x0a, 0x8d,
	0x73, 0xe9, 0x34, 0x16, 0xa2, 0x9b, 0x48, 0xe3, 0x7c, 0x3a, 0x8d, 0xc5, 0xc1, 0x2e, 0xa2, 0xf1,
	0x6c, 0x2a, 0x8d, 0x0b, 0xb7, 0x4f, 0x63, 0x13, 0x8a, 0x8f, 0x89, 0x43, 0x7e, 0x63, 0x03, 0xd7,
	0xbf, 0xc9, 0x20, 0x27, 0xd1, 0x29, 0xfa, 0x20, 0xc1, 0xc2, 0xa8, 0x1c, 0xa2, 0x95, 0xa9, 0x25,
	0x53, 0x9d, 0x38, 0x99, 0x5a, 0xed, 0xcd, 0xd7, 0x9f, 0xef, 0x32, 0x0f, 0xb4, 0x2a, 0x6e, 0xaf,
	0xe1, 0xfe, 0x94, 0xe2, 0x08, 0x07, 0xee, 0x46, 0xbf, 0x3d, 0xdc, 0x87, 0x8c, 0xbb, 0xfd, 0x65,
	0x0f, 0x77, 0xc3, 0x12, 0x7b, 0x55, 0x69, 0x15, 0xbd, 0x97, 0x60, 0x6e, 0x48, 0xdb, 0xd0, 0x7f,
	0xa2, 0xa4, 0xe7, 0xc5, 0xef, 0x02, 0x70, 0x3b, 0x1c, 0xdc, 0x3d, 0x74, 0x0d, 0x70, 0xe8, 0xa3,
	0x04, 0x45, 0xa1, 0x2a, 0xa2, 0xff, 0x45, 0xb9, 0x27, 0x09, 0xa8, 0x5a, 0x49, 0xf3, 0x18, 0x57,
	0x08, 0xed, 0x2e, 0x47, 0xbe, 0x85, 0x36, 0xae, 0x80, 0x1c, 0x7d, 0x96, 0xe0, 0x6f, 0x81, 0xe4,
	0x22, 0x3d, 0x2d, 0xbd, 0x58, 0x9b, 0x2f, 0x01, 0x77, 0x9f, 0xc3, 0xdd, 0x45, 0xb5, 0xab, 0x5c,
	0x74, 0xac, 0xbd, 0xb8, 0x1b, 0x2f, 0x7a, 0xe8, 0x87, 0x04, 0xff, 0xa4, 0x8a, 0x38, 0xda, 0xbc,
	0xa0, 0x0c, 0xa1, 0xe6, 0x5f, 0xa2, 0x98, 0x17, 0xbc, 0x98, 0x23, 0x74, 0x78, 0x23, 0xc5, 0xe0,
	0xe8, 0xbf, 0x00, 0x77, 0xa3, 0xdf, 0x1e, 0x67, 0xe3, 0xa8, 0xaa, 0x89, 0xd9, 0x28, 0x54, 0xbe,
	0xe9, 0xd8, 0xa8, 0x5e, 0x9f, 0x8d, 0x0b, 0xa3, 0x12, 0x25, 0x86, 0x28, 0x94, 0x31, 0x75, 0x49,
	0x8f, 0x5e, 0x15, 0x7a, 0xf2, 0xaa, 0xd0, 0x6b, 0xe1, 0xab, 0x22, 0x61, 0xe3, 0xea, 0x35, 0xc0,
	0xed, 0xac, 0x3c, 0x5f, 0x6e, 0xda, 0xec, 0xb8, 0x55, 0xd7, 0x2d, 0xef, 0x14, 0xc7, 0x90, 0x6c,
	0x2f, 0x59, 0xf1, 0x67, 0x0e, 0xb3, 0x2c, 0xdc, 0x5e, 0xab, 0xe7, 0x79, 0xfa, 0x8d, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x52, 0x39, 0xad, 0xd5, 0x26, 0x0d, 0x00, 0x00,
}
