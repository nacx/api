{
  "swagger": "2.0",
  "info": {
    "title": "TCC Workflows API",
    "version": "v1",
    "contact": {
      "name": "Tetrate.io, Inc.",
      "url": "https://www.tetrate.io",
      "email": "info@tetrate.io"
    }
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{id}/attach": {
      "post": {
        "operationId": "Attach",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.CreateTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{id}/detach": {
      "post": {
        "operationId": "Detach",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.CreateTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/pending": {
      "get": {
        "operationId": "ListPendingTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.ListTicketsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/requests/{id}/approve": {
      "post": {
        "operationId": "Approve",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.ResolveTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/requests/{id}/cancel": {
      "post": {
        "operationId": "Cancel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.CancelTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/requests/{id}/deny": {
      "post": {
        "operationId": "Deny",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.ResolveTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/requests/{id}/publish": {
      "post": {
        "summary": "LB owner calls this API with additional settings like TLS, to finally expose the service on the load balancer or remove a detached service",
        "operationId": "Publish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.PublishTicketRequest"
            }
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/workflows/loadbalancers/{loadbalancer}/requests/{id}/status": {
      "get": {
        "operationId": "GetTicketStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancer",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LoadBalancerWorkflow"
        ]
      }
    }
  },
  "definitions": {
    "tetrate.api.tcc.core.v1.TLSMode": {
      "type": "string",
      "enum": [
        "DISABLED",
        "SIMPLE",
        "MUTUAL",
        "SNI_PASSTHROUGH"
      ],
      "default": "DISABLED"
    },
    "tetrate.api.tcc.core.v1.TLSSettings": {
      "type": "object",
      "properties": {
        "tlsMode": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSMode",
          "description": "Set this to SIMPLE, MUTUAL, or SNI_PASSTHROUGH for one-way TLS, mutual TLS, or client sni-based TLS passthrough respectively. The hostname in the load balancer will be used as the SNI in the TLS passthrough mode."
        },
        "tlsEnabled": {
          "type": "boolean",
          "format": "boolean",
          "description": "enable TLS settings for the application."
        },
        "redirectToHttps": {
          "type": "boolean",
          "format": "boolean",
          "description": "If set, the load balancer will redirect HTTP connections on port 80 to HTTPS port 443."
        },
        "serverCertificate": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the server-side TLS certificate to use."
        },
        "privateKey": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the server's private key."
        },
        "caCertificates": {
          "type": "string",
          "description": "For proxies running on VMs, the path to a file containing certificate authority certificates to use in verifying a presented client side certificate for mutual TLS connections."
        },
        "secretName": {
          "type": "string",
          "description": "For proxies running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates. Currently applicable only on Kubernetes. The secret (type generic) should contain the following keys and values: key: \u003cprivateKey\u003e, cert: \u003cserverCert\u003e, cacert: \u003cCACertificate\u003e.  If the service is exposed via a load balancer, the secret must be accessible to it."
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.Action": {
      "type": "string",
      "enum": [
        "ATTACH",
        "DETACH"
      ],
      "default": "ATTACH"
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.CancelTicketRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "loadbalancer": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.CreateTicketRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "application": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.ListTicketsResponse": {
      "type": "object",
      "properties": {
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus"
          }
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.PublishTicketRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "loadbalancer": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "tls": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSSettings"
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.ResolveTicketRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "loadbalancer": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "note": {
          "type": "string",
          "title": "optional description (e.g. to be recorded in audit logs)"
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "loadbalancer": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.Action"
        },
        "state": {
          "$ref": "#/definitions/tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus.RequestState"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.workflows.loadbalancer.v1.TicketStatus.RequestState": {
      "type": "string",
      "enum": [
        "PENDING",
        "APPROVED",
        "DENIED",
        "PUBLISHED",
        "CANCELED"
      ],
      "default": "PENDING"
    }
  }
}
