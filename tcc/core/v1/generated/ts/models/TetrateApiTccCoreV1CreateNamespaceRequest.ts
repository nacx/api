// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1Namespace,
    TetrateApiTccCoreV1NamespaceFromJSON,
    TetrateApiTccCoreV1NamespaceToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1CreateNamespaceRequest
 */
export interface TetrateApiTccCoreV1CreateNamespaceRequest {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1CreateNamespaceRequest
     */
    parent?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1CreateNamespaceRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1CreateNamespaceRequest
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1CreateNamespaceRequest
     */
    cluster?: string;
    /**
     * 
     * @type {TetrateApiTccCoreV1Namespace}
     * @memberof TetrateApiTccCoreV1CreateNamespaceRequest
     */
    namespace?: TetrateApiTccCoreV1Namespace;
}

export function TetrateApiTccCoreV1CreateNamespaceRequestFromJSON(json: any): TetrateApiTccCoreV1CreateNamespaceRequest {
    return {
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],
        'namespace': !exists(json, 'namespace') ? undefined : TetrateApiTccCoreV1NamespaceFromJSON(json['namespace']),
    };
}

export function TetrateApiTccCoreV1CreateNamespaceRequestToJSON(value?: TetrateApiTccCoreV1CreateNamespaceRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'parent': value.parent,
        'id': value.id,
        'tenant': value.tenant,
        'cluster': value.cluster,
        'namespace': TetrateApiTccCoreV1NamespaceToJSON(value.namespace),
    };
}


