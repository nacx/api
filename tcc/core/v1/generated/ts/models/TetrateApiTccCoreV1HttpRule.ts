// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1HttpMatchCondition,
    TetrateApiTccCoreV1HttpMatchConditionFromJSON,
    TetrateApiTccCoreV1HttpMatchConditionToJSON,
    TetrateApiTccCoreV1HttpModifyAction,
    TetrateApiTccCoreV1HttpModifyActionFromJSON,
    TetrateApiTccCoreV1HttpModifyActionToJSON,
    TetrateApiTccCoreV1Redirect,
    TetrateApiTccCoreV1RedirectFromJSON,
    TetrateApiTccCoreV1RedirectToJSON,
    TetrateApiTccCoreV1Route,
    TetrateApiTccCoreV1RouteFromJSON,
    TetrateApiTccCoreV1RouteToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1HttpRule
 */
export interface TetrateApiTccCoreV1HttpRule {
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1HttpMatchCondition>}
     * @memberof TetrateApiTccCoreV1HttpRule
     */
    match?: Array<TetrateApiTccCoreV1HttpMatchCondition>;
    /**
     * 
     * @type {TetrateApiTccCoreV1HttpModifyAction}
     * @memberof TetrateApiTccCoreV1HttpRule
     */
    modify?: TetrateApiTccCoreV1HttpModifyAction;
    /**
     * 
     * @type {TetrateApiTccCoreV1Route}
     * @memberof TetrateApiTccCoreV1HttpRule
     */
    route?: TetrateApiTccCoreV1Route;
    /**
     * 
     * @type {TetrateApiTccCoreV1Redirect}
     * @memberof TetrateApiTccCoreV1HttpRule
     */
    redirect?: TetrateApiTccCoreV1Redirect;
}

export function TetrateApiTccCoreV1HttpRuleFromJSON(json: any): TetrateApiTccCoreV1HttpRule {
    return {
        'match': !exists(json, 'match') ? undefined : (json['match'] as Array<any>).map(TetrateApiTccCoreV1HttpMatchConditionFromJSON),
        'modify': !exists(json, 'modify') ? undefined : TetrateApiTccCoreV1HttpModifyActionFromJSON(json['modify']),
        'route': !exists(json, 'route') ? undefined : TetrateApiTccCoreV1RouteFromJSON(json['route']),
        'redirect': !exists(json, 'redirect') ? undefined : TetrateApiTccCoreV1RedirectFromJSON(json['redirect']),
    };
}

export function TetrateApiTccCoreV1HttpRuleToJSON(value?: TetrateApiTccCoreV1HttpRule): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'match': value.match === undefined ? undefined : (value.match as Array<any>).map(TetrateApiTccCoreV1HttpMatchConditionToJSON),
        'modify': TetrateApiTccCoreV1HttpModifyActionToJSON(value.modify),
        'route': TetrateApiTccCoreV1RouteToJSON(value.route),
        'redirect': TetrateApiTccCoreV1RedirectToJSON(value.redirect),
    };
}


