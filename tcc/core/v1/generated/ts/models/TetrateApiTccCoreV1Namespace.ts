// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1ClientSettings,
    TetrateApiTccCoreV1ClientSettingsFromJSON,
    TetrateApiTccCoreV1ClientSettingsToJSON,
    TetrateApiTccCoreV1Permissions,
    TetrateApiTccCoreV1PermissionsFromJSON,
    TetrateApiTccCoreV1PermissionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1Namespace
 */
export interface TetrateApiTccCoreV1Namespace {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    cluster?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    tenant?: string;
    /**
     * The services (or namespaces) that endpoints in this namespace depend upon for proper operation. Must be of the form ns1/foo.com, or ns1/. If omitted, its assumed that endpoints in this namespace depend only on other services in the same namespace as the endpoint.
     * @type {Array<string>}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    dependencies?: Array<string>;
    /**
     * 
     * @type {TetrateApiTccCoreV1ClientSettings}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    clientSettings?: TetrateApiTccCoreV1ClientSettings;
    /**
     * 
     * @type {TetrateApiTccCoreV1Permissions}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    permissions?: TetrateApiTccCoreV1Permissions;
}

export function TetrateApiTccCoreV1NamespaceFromJSON(json: any): TetrateApiTccCoreV1Namespace {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'dependencies': !exists(json, 'dependencies') ? undefined : json['dependencies'],
        'clientSettings': !exists(json, 'clientSettings') ? undefined : TetrateApiTccCoreV1ClientSettingsFromJSON(json['clientSettings']),
        'permissions': !exists(json, 'permissions') ? undefined : TetrateApiTccCoreV1PermissionsFromJSON(json['permissions']),
    };
}

export function TetrateApiTccCoreV1NamespaceToJSON(value?: TetrateApiTccCoreV1Namespace): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'cluster': value.cluster,
        'tenant': value.tenant,
        'dependencies': value.dependencies,
        'clientSettings': TetrateApiTccCoreV1ClientSettingsToJSON(value.clientSettings),
        'permissions': TetrateApiTccCoreV1PermissionsToJSON(value.permissions),
    };
}


