// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1ClientSettings,
    TetrateApiTccCoreV1ClientSettingsFromJSON,
    TetrateApiTccCoreV1ClientSettingsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1Namespace
 */
export interface TetrateApiTccCoreV1Namespace {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    environment?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    cluster?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    description?: string;
    /**
     * The deployments (or namespaces) that endpoints in this namespace depend upon for proper operation by name. If omitted, it\'s assumed that endpoints in this namespace depend only on other services in the same namespace as the endpoint.
     * @type {Array<string>}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    dependencies?: Array<string>;
    /**
     * 
     * @type {TetrateApiTccCoreV1ClientSettings}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    clientSettings?: TetrateApiTccCoreV1ClientSettings;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Namespace
     */
    etag?: string;
}

export function TetrateApiTccCoreV1NamespaceFromJSON(json: any): TetrateApiTccCoreV1Namespace {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dependencies': !exists(json, 'dependencies') ? undefined : json['dependencies'],
        'clientSettings': !exists(json, 'clientSettings') ? undefined : TetrateApiTccCoreV1ClientSettingsFromJSON(json['clientSettings']),
        'etag': !exists(json, 'etag') ? undefined : json['etag'],
    };
}

export function TetrateApiTccCoreV1NamespaceToJSON(value?: TetrateApiTccCoreV1Namespace): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'tenant': value.tenant,
        'environment': value.environment,
        'cluster': value.cluster,
        'id': value.id,
        'description': value.description,
        'dependencies': value.dependencies,
        'clientSettings': TetrateApiTccCoreV1ClientSettingsToJSON(value.clientSettings),
        'etag': value.etag,
    };
}


