// tslint:disable
/**
 * TCC Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1LBRouteSettingsLBRoute,
    TetrateApiTccCoreV1LBRouteSettingsLBRouteFromJSON,
    TetrateApiTccCoreV1LBRouteSettingsLBRouteToJSON,
    TetrateApiTccCoreV1LoadBalancerClass,
    TetrateApiTccCoreV1LoadBalancerClassFromJSON,
    TetrateApiTccCoreV1LoadBalancerClassToJSON,
} from './';

/**
 * HTTP/TCP routing settings for application exposed via a load balancer service. Enforced at load balancer only.
 * @export
 * @interface TetrateApiTccCoreV1LBRouteSettings
 */
export interface TetrateApiTccCoreV1LBRouteSettings {
    /**
     * 
     * @type {boolean}
     * @memberof TetrateApiTccCoreV1LBRouteSettings
     */
    enableWorkflows?: boolean;
    /**
     * 
     * @type {TetrateApiTccCoreV1LoadBalancerClass}
     * @memberof TetrateApiTccCoreV1LBRouteSettings
     */
    loadBalancerClass?: TetrateApiTccCoreV1LoadBalancerClass;
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1LBRouteSettingsLBRoute>}
     * @memberof TetrateApiTccCoreV1LBRouteSettings
     */
    routes?: Array<TetrateApiTccCoreV1LBRouteSettingsLBRoute>;
}

export function TetrateApiTccCoreV1LBRouteSettingsFromJSON(json: any): TetrateApiTccCoreV1LBRouteSettings {
    return {
        'enableWorkflows': !exists(json, 'enableWorkflows') ? undefined : json['enableWorkflows'],
        'loadBalancerClass': !exists(json, 'loadBalancerClass') ? undefined : TetrateApiTccCoreV1LoadBalancerClassFromJSON(json['loadBalancerClass']),
        'routes': !exists(json, 'routes') ? undefined : (json['routes'] as Array<any>).map(TetrateApiTccCoreV1LBRouteSettingsLBRouteFromJSON),
    };
}

export function TetrateApiTccCoreV1LBRouteSettingsToJSON(value?: TetrateApiTccCoreV1LBRouteSettings): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'enableWorkflows': value.enableWorkflows,
        'loadBalancerClass': TetrateApiTccCoreV1LoadBalancerClassToJSON(value.loadBalancerClass),
        'routes': value.routes === undefined ? undefined : (value.routes as Array<any>).map(TetrateApiTccCoreV1LBRouteSettingsLBRouteToJSON),
    };
}


