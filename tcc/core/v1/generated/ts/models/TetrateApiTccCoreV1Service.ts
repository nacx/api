// tslint:disable
/**
 * TCC Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1Port,
    TetrateApiTccCoreV1PortFromJSON,
    TetrateApiTccCoreV1PortToJSON,
    TetrateApiTccCoreV1RoutingInfo,
    TetrateApiTccCoreV1RoutingInfoFromJSON,
    TetrateApiTccCoreV1RoutingInfoToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1Service
 */
export interface TetrateApiTccCoreV1Service {
    /**
     * Internal use only. Auto populated field.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    name?: string;
    /**
     * Tenant.Id.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    tenant?: string;
    /**
     * Environment.Id.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    environment?: string;
    /**
     * Application.Id.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    application?: string;
    /**
     * Short name for the service. Clusters are expected to have namespaces that match the application, and services that match the Id, especially on Kubernetes.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    description?: string;
    /**
     * FQDN hostname of the service.
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    hostname?: string;
    /**
     * User identifiable tags associated with this service.
     * @type {{ [key: string]: string; }}
     * @memberof TetrateApiTccCoreV1Service
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1Port>}
     * @memberof TetrateApiTccCoreV1Service
     */
    ports?: Array<TetrateApiTccCoreV1Port>;
    /**
     * 
     * @type {TetrateApiTccCoreV1RoutingInfo}
     * @memberof TetrateApiTccCoreV1Service
     */
    routingInfo?: TetrateApiTccCoreV1RoutingInfo;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1Service
     */
    etag?: string;
}

export function TetrateApiTccCoreV1ServiceFromJSON(json: any): TetrateApiTccCoreV1Service {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'application': !exists(json, 'application') ? undefined : json['application'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'hostname': !exists(json, 'hostname') ? undefined : json['hostname'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'ports': !exists(json, 'ports') ? undefined : (json['ports'] as Array<any>).map(TetrateApiTccCoreV1PortFromJSON),
        'routingInfo': !exists(json, 'routingInfo') ? undefined : TetrateApiTccCoreV1RoutingInfoFromJSON(json['routingInfo']),
        'etag': !exists(json, 'etag') ? undefined : json['etag'],
    };
}

export function TetrateApiTccCoreV1ServiceToJSON(value?: TetrateApiTccCoreV1Service): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'tenant': value.tenant,
        'environment': value.environment,
        'application': value.application,
        'id': value.id,
        'description': value.description,
        'hostname': value.hostname,
        'labels': value.labels,
        'ports': value.ports === undefined ? undefined : (value.ports as Array<any>).map(TetrateApiTccCoreV1PortToJSON),
        'routingInfo': TetrateApiTccCoreV1RoutingInfoToJSON(value.routingInfo),
        'etag': value.etag,
    };
}


