// tslint:disable
/**
 * TCC Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespaces,
    TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesFromJSON,
    TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesToJSON,
} from './';

/**
 * Cluster, Namespaces, deployments, and endpoints in this request will replace the existing contents of a cluster.
 * @export
 * @interface TetrateApiTccCoreV1BulkLoadClusterRequest
 */
export interface TetrateApiTccCoreV1BulkLoadClusterRequest {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    parent?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    environment?: string;
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespaces>}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    clusters?: Array<TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespaces>;
    /**
     * 
     * @type {TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespaces}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    clusterWithNamespaces?: TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespaces;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequest
     */
    name?: string;
}

export function TetrateApiTccCoreV1BulkLoadClusterRequestFromJSON(json: any): TetrateApiTccCoreV1BulkLoadClusterRequest {
    return {
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'clusters': !exists(json, 'clusters') ? undefined : (json['clusters'] as Array<any>).map(TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesFromJSON),
        'clusterWithNamespaces': !exists(json, 'clusterWithNamespaces') ? undefined : TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesFromJSON(json['clusterWithNamespaces']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function TetrateApiTccCoreV1BulkLoadClusterRequestToJSON(value?: TetrateApiTccCoreV1BulkLoadClusterRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'parent': value.parent,
        'tenant': value.tenant,
        'environment': value.environment,
        'clusters': value.clusters === undefined ? undefined : (value.clusters as Array<any>).map(TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesToJSON),
        'clusterWithNamespaces': TetrateApiTccCoreV1BulkLoadClusterRequestClusterWithNamespacesToJSON(value.clusterWithNamespaces),
        'id': value.id,
        'name': value.name,
    };
}


