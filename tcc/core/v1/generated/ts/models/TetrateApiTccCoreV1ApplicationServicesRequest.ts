// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1ApplicationServicesRequestServiceId,
    TetrateApiTccCoreV1ApplicationServicesRequestServiceIdFromJSON,
    TetrateApiTccCoreV1ApplicationServicesRequestServiceIdToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1ApplicationServicesRequest
 */
export interface TetrateApiTccCoreV1ApplicationServicesRequest {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1ApplicationServicesRequest
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1ApplicationServicesRequest
     */
    workspace?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1ApplicationServicesRequest
     */
    application?: string;
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1ApplicationServicesRequestServiceId>}
     * @memberof TetrateApiTccCoreV1ApplicationServicesRequest
     */
    services?: Array<TetrateApiTccCoreV1ApplicationServicesRequestServiceId>;
}

export function TetrateApiTccCoreV1ApplicationServicesRequestFromJSON(json: any): TetrateApiTccCoreV1ApplicationServicesRequest {
    return {
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'workspace': !exists(json, 'workspace') ? undefined : json['workspace'],
        'application': !exists(json, 'application') ? undefined : json['application'],
        'services': !exists(json, 'services') ? undefined : (json['services'] as Array<any>).map(TetrateApiTccCoreV1ApplicationServicesRequestServiceIdFromJSON),
    };
}

export function TetrateApiTccCoreV1ApplicationServicesRequestToJSON(value?: TetrateApiTccCoreV1ApplicationServicesRequest): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'tenant': value.tenant,
        'workspace': value.workspace,
        'application': value.application,
        'services': value.services === undefined ? undefined : (value.services as Array<any>).map(TetrateApiTccCoreV1ApplicationServicesRequestServiceIdToJSON),
    };
}


