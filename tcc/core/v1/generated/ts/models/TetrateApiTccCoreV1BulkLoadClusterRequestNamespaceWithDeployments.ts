// tslint:disable
/**
 * TCC Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpoints,
    TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpointsFromJSON,
    TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpointsToJSON,
    TetrateApiTccCoreV1Namespace,
    TetrateApiTccCoreV1NamespaceFromJSON,
    TetrateApiTccCoreV1NamespaceToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments
 */
export interface TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments {
    /**
     * 
     * @type {TetrateApiTccCoreV1Namespace}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments
     */
    namespace?: TetrateApiTccCoreV1Namespace;
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpoints>}
     * @memberof TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments
     */
    deployments?: Array<TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpoints>;
}

export function TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeploymentsFromJSON(json: any): TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments {
    return {
        'namespace': !exists(json, 'namespace') ? undefined : TetrateApiTccCoreV1NamespaceFromJSON(json['namespace']),
        'deployments': !exists(json, 'deployments') ? undefined : (json['deployments'] as Array<any>).map(TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpointsFromJSON),
    };
}

export function TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeploymentsToJSON(value?: TetrateApiTccCoreV1BulkLoadClusterRequestNamespaceWithDeployments): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'namespace': TetrateApiTccCoreV1NamespaceToJSON(value.namespace),
        'deployments': value.deployments === undefined ? undefined : (value.deployments as Array<any>).map(TetrateApiTccCoreV1BulkLoadClusterRequestDeploymentWithEndpointsToJSON),
    };
}


