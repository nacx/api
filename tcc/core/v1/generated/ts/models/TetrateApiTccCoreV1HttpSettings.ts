// tslint:disable
/**
 * TCC Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1CorsPolicy,
    TetrateApiTccCoreV1CorsPolicyFromJSON,
    TetrateApiTccCoreV1CorsPolicyToJSON,
    TetrateApiTccCoreV1HttpRule,
    TetrateApiTccCoreV1HttpRuleFromJSON,
    TetrateApiTccCoreV1HttpRuleToJSON,
    TetrateApiTccCoreV1HttpSettingsStickySession,
    TetrateApiTccCoreV1HttpSettingsStickySessionFromJSON,
    TetrateApiTccCoreV1HttpSettingsStickySessionToJSON,
} from './';

/**
 * HTTP settings for a service. Applicable to ports receiving HTTP traffic.
 * @export
 * @interface TetrateApiTccCoreV1HttpSettings
 */
export interface TetrateApiTccCoreV1HttpSettings {
    /**
     * 
     * @type {TetrateApiTccCoreV1HttpSettingsStickySession}
     * @memberof TetrateApiTccCoreV1HttpSettings
     */
    stickySession?: TetrateApiTccCoreV1HttpSettingsStickySession;
    /**
     * 
     * @type {TetrateApiTccCoreV1CorsPolicy}
     * @memberof TetrateApiTccCoreV1HttpSettings
     */
    corsPolicy?: TetrateApiTccCoreV1CorsPolicy;
    /**
     * 
     * @type {Array<TetrateApiTccCoreV1HttpRule>}
     * @memberof TetrateApiTccCoreV1HttpSettings
     */
    routeRules?: Array<TetrateApiTccCoreV1HttpRule>;
}

export function TetrateApiTccCoreV1HttpSettingsFromJSON(json: any): TetrateApiTccCoreV1HttpSettings {
    return {
        'stickySession': !exists(json, 'stickySession') ? undefined : TetrateApiTccCoreV1HttpSettingsStickySessionFromJSON(json['stickySession']),
        'corsPolicy': !exists(json, 'corsPolicy') ? undefined : TetrateApiTccCoreV1CorsPolicyFromJSON(json['corsPolicy']),
        'routeRules': !exists(json, 'routeRules') ? undefined : (json['routeRules'] as Array<any>).map(TetrateApiTccCoreV1HttpRuleFromJSON),
    };
}

export function TetrateApiTccCoreV1HttpSettingsToJSON(value?: TetrateApiTccCoreV1HttpSettings): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'stickySession': TetrateApiTccCoreV1HttpSettingsStickySessionToJSON(value.stickySession),
        'corsPolicy': TetrateApiTccCoreV1CorsPolicyToJSON(value.corsPolicy),
        'routeRules': value.routeRules === undefined ? undefined : (value.routeRules as Array<any>).map(TetrateApiTccCoreV1HttpRuleToJSON),
    };
}


