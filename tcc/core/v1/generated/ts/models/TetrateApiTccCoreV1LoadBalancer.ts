// tslint:disable
/**
 * TCC Core API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * Contact: info@tetrate.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TetrateApiTccCoreV1LBClass,
    TetrateApiTccCoreV1LBClassFromJSON,
    TetrateApiTccCoreV1LBClassToJSON,
    TetrateApiTccCoreV1TLSSettings,
    TetrateApiTccCoreV1TLSSettingsFromJSON,
    TetrateApiTccCoreV1TLSSettingsToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccCoreV1LoadBalancer
 */
export interface TetrateApiTccCoreV1LoadBalancer {
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    namespace?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    cluster?: string;
    /**
     * 
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    tenant?: string;
    /**
     * 
     * @type {TetrateApiTccCoreV1LBClass}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    _class?: TetrateApiTccCoreV1LBClass;
    /**
     * If its a hardware load balancer like F5, we need its management IP to talk to it.
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    managementIp?: string;
    /**
     * The namespace/hostname of the service in this cluster that implements this load balancer.
     * @type {string}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    serviceName?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    labels?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: TetrateApiTccCoreV1TLSSettings; }}
     * @memberof TetrateApiTccCoreV1LoadBalancer
     */
    services?: { [key: string]: TetrateApiTccCoreV1TLSSettings; };
}

export function TetrateApiTccCoreV1LoadBalancerFromJSON(json: any): TetrateApiTccCoreV1LoadBalancer {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'namespace': !exists(json, 'namespace') ? undefined : json['namespace'],
        'cluster': !exists(json, 'cluster') ? undefined : json['cluster'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        '_class': !exists(json, 'class') ? undefined : TetrateApiTccCoreV1LBClassFromJSON(json['class']),
        'managementIp': !exists(json, 'managementIp') ? undefined : json['managementIp'],
        'serviceName': !exists(json, 'serviceName') ? undefined : json['serviceName'],
        'labels': !exists(json, 'labels') ? undefined : json['labels'],
        'services': !exists(json, 'services') ? undefined : mapValues(json['services'], TetrateApiTccCoreV1TLSSettingsFromJSON),
    };
}

export function TetrateApiTccCoreV1LoadBalancerToJSON(value?: TetrateApiTccCoreV1LoadBalancer): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'namespace': value.namespace,
        'cluster': value.cluster,
        'tenant': value.tenant,
        'class': TetrateApiTccCoreV1LBClassToJSON(value._class),
        'managementIp': value.managementIp,
        'serviceName': value.serviceName,
        'labels': value.labels,
        'services': value.services === undefined ? undefined : mapValues(value.services, TetrateApiTccCoreV1TLSSettingsToJSON),
    };
}


