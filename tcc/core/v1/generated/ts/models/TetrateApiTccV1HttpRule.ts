// tslint:disable
/**
 * configproducer.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
    TetrateApiTccV1HttpMatchCondition,
    TetrateApiTccV1HttpMatchConditionFromJSON,
    TetrateApiTccV1HttpMatchConditionToJSON,
    TetrateApiTccV1HttpModifyAction,
    TetrateApiTccV1HttpModifyActionFromJSON,
    TetrateApiTccV1HttpModifyActionToJSON,
    TetrateApiTccV1Redirect,
    TetrateApiTccV1RedirectFromJSON,
    TetrateApiTccV1RedirectToJSON,
    TetrateApiTccV1Route,
    TetrateApiTccV1RouteFromJSON,
    TetrateApiTccV1RouteToJSON,
} from './';

/**
 * 
 * @export
 * @interface TetrateApiTccV1HttpRule
 */
export interface TetrateApiTccV1HttpRule {
    /**
     * 
     * @type {Array<TetrateApiTccV1HttpMatchCondition>}
     * @memberof TetrateApiTccV1HttpRule
     */
    matchConditions?: Array<TetrateApiTccV1HttpMatchCondition>;
    /**
     * 
     * @type {Array<TetrateApiTccV1HttpModifyAction>}
     * @memberof TetrateApiTccV1HttpRule
     */
    modifyActions?: Array<TetrateApiTccV1HttpModifyAction>;
    /**
     * 
     * @type {TetrateApiTccV1Route}
     * @memberof TetrateApiTccV1HttpRule
     */
    route?: TetrateApiTccV1Route;
    /**
     * 
     * @type {TetrateApiTccV1Redirect}
     * @memberof TetrateApiTccV1HttpRule
     */
    redirect?: TetrateApiTccV1Redirect;
}

export function TetrateApiTccV1HttpRuleFromJSON(json: any): TetrateApiTccV1HttpRule {
    return {
        'matchConditions': !exists(json, 'matchConditions') ? undefined : (json['matchConditions'] as Array<any>).map(TetrateApiTccV1HttpMatchConditionFromJSON),
        'modifyActions': !exists(json, 'modifyActions') ? undefined : (json['modifyActions'] as Array<any>).map(TetrateApiTccV1HttpModifyActionFromJSON),
        'route': !exists(json, 'route') ? undefined : TetrateApiTccV1RouteFromJSON(json['route']),
        'redirect': !exists(json, 'redirect') ? undefined : TetrateApiTccV1RedirectFromJSON(json['redirect']),
    };
}

export function TetrateApiTccV1HttpRuleToJSON(value?: TetrateApiTccV1HttpRule): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'matchConditions': value.matchConditions === undefined ? undefined : (value.matchConditions as Array<any>).map(TetrateApiTccV1HttpMatchConditionToJSON),
        'modifyActions': value.modifyActions === undefined ? undefined : (value.modifyActions as Array<any>).map(TetrateApiTccV1HttpModifyActionToJSON),
        'route': TetrateApiTccV1RouteToJSON(value.route),
        'redirect': TetrateApiTccV1RedirectToJSON(value.redirect),
    };
}


