// tslint:disable
/**
 * configproducer.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import {
    TetrateApiTccV1CorsPolicy,
    TetrateApiTccV1CorsPolicyFromJSON,
    TetrateApiTccV1CorsPolicyToJSON,
    TetrateApiTccV1HttpRule,
    TetrateApiTccV1HttpRuleFromJSON,
    TetrateApiTccV1HttpRuleToJSON,
    TetrateApiTccV1HttpSettingsStickySession,
    TetrateApiTccV1HttpSettingsStickySessionFromJSON,
    TetrateApiTccV1HttpSettingsStickySessionToJSON,
} from './';

/**
 * HTTP settings for a service. Applicable to ports receiving HTTP traffic.
 * @export
 * @interface TetrateApiTccV1HttpSettings
 */
export interface TetrateApiTccV1HttpSettings {
    /**
     * 
     * @type {TetrateApiTccV1HttpSettingsStickySession}
     * @memberof TetrateApiTccV1HttpSettings
     */
    stickySession?: TetrateApiTccV1HttpSettingsStickySession;
    /**
     * 
     * @type {TetrateApiTccV1CorsPolicy}
     * @memberof TetrateApiTccV1HttpSettings
     */
    corsPolicy?: TetrateApiTccV1CorsPolicy;
    /**
     * 
     * @type {Array<TetrateApiTccV1HttpRule>}
     * @memberof TetrateApiTccV1HttpSettings
     */
    routeRules?: Array<TetrateApiTccV1HttpRule>;
}

export function TetrateApiTccV1HttpSettingsFromJSON(json: any): TetrateApiTccV1HttpSettings {
    return {
        'stickySession': !exists(json, 'stickySession') ? undefined : TetrateApiTccV1HttpSettingsStickySessionFromJSON(json['stickySession']),
        'corsPolicy': !exists(json, 'corsPolicy') ? undefined : TetrateApiTccV1CorsPolicyFromJSON(json['corsPolicy']),
        'routeRules': !exists(json, 'routeRules') ? undefined : (json['routeRules'] as Array<any>).map(TetrateApiTccV1HttpRuleFromJSON),
    };
}

export function TetrateApiTccV1HttpSettingsToJSON(value?: TetrateApiTccV1HttpSettings): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'stickySession': TetrateApiTccV1HttpSettingsStickySessionToJSON(value.stickySession),
        'corsPolicy': TetrateApiTccV1CorsPolicyToJSON(value.corsPolicy),
        'routeRules': value.routeRules === undefined ? undefined : (value.routeRules as Array<any>).map(TetrateApiTccV1HttpRuleToJSON),
    };
}


