{
  "swagger": "2.0",
  "info": {
    "title": "TCC Core API",
    "version": "v1",
    "contact": {
      "name": "Tetrate.io, Inc.",
      "url": "https://www.tetrate.io",
      "email": "info@tetrate.io"
    }
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tenants": {
      "get": {
        "operationId": "ListTenants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListTenantsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateTenantRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{id}": {
      "get": {
        "operationId": "GetTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters": {
      "get": {
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListClustersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateClusterRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces": {
      "get": {
        "operationId": "ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListNamespacesResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateNamespaceRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces/{id}": {
      "get": {
        "operationId": "GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces/{namespace}/deployments": {
      "get": {
        "operationId": "ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListDeploymentsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateDeploymentRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}/endpoints": {
      "get": {
        "operationId": "ListEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListEndpointsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateEndpointRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}/endpoints/{id}": {
      "get": {
        "operationId": "GetEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{cluster}/namespaces/{namespace}/deployments/{id}": {
      "get": {
        "operationId": "GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/clusters/{id}": {
      "get": {
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/configproducer/{configtype}/{cluster}": {
      "get": {
        "operationId": "Download",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ConfigData"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "configtype",
            "description": "currently accepted values are istio or f5",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "A unique identifier for the k8s cluster or VM cluster\nTypically we have multiple k8s clusters and one big giant VM cluster\nin a DC.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigProducer"
        ]
      }
    },
    "/v1/tenants/{tenant}/registryconsumer/{registrytype}/{cluster}": {
      "post": {
        "operationId": "Upload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrytype",
            "description": "currently accepted values are kubernetes or f5",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "A unique identifier for the k8s/f5 cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.RegistryData"
            }
          }
        ],
        "tags": [
          "RegistryConsumer"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams": {
      "get": {
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListTeamsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateTeamRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams/{id}": {
      "get": {
        "operationId": "GetTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams/{id}/members": {
      "get": {
        "operationId": "ListTeamMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListTeamMembersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/users": {
      "get": {
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListUsersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/users/{id}": {
      "get": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces": {
      "get": {
        "operationId": "ListWorkspaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListWorkspacesResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateWorkspaceRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{id}": {
      "get": {
        "operationId": "GetWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/applications": {
      "get": {
        "operationId": "ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListApplicationsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateApplicationRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/applications/{application}/services": {
      "get": {
        "operationId": "ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListServicesResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateServiceRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/applications/{application}/services/{id}": {
      "get": {
        "operationId": "GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/applications/{id}": {
      "get": {
        "operationId": "GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/loadbalancers": {
      "get": {
        "operationId": "ListLoadBalancers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListLoadBalancersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateLoadBalancerRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/workspaces/{workspace}/loadbalancers/{id}": {
      "get": {
        "operationId": "GetLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    }
  },
  "definitions": {
    "tetrate.api.tcc.core.v1.Application": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Permissions"
        }
      }
    },
    "tetrate.api.tcc.core.v1.ClientSettings": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string",
          "title": "empty if this is applicable to entire cluster"
        },
        "namespace": {
          "type": "string",
          "title": "empty if this is applicable to entire namespace"
        },
        "deployment": {
          "type": "string"
        },
        "httpRequestTimeout": {
          "type": "string",
          "description": "Timeout for HTTP requests."
        },
        "httpRetries": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HTTPRetry",
          "description": "Retry policy for HTTP requests."
        },
        "tcpConnectTimeout": {
          "type": "string",
          "description": "These two settings will go to dest rule\nTCP connection timeout."
        },
        "tcpKeepalive": {
          "type": "boolean",
          "format": "boolean",
          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives."
        },
        "circuitBreakerSensitivity": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings.Sensitivity",
          "description": "the sensitivity levels will translate to specific values of\ndest rule outlier detection."
        }
      },
      "description": "All the timeouts, retries, circuit breakers etc. that consumers\nwant to set to gaurd against failures of their dependencies. These\nroughly translate to pieces of istio virtual service, destination\nrules, etc. At runtime, for a given namespace, for the namespace's\ndependencies, we combine the client specified reliability settings\nwith the virtual service/dest rule for the dependencies to produce\nan updated virtual service/dest rule per dependent service. All\nthese client customized virtual services/dest rules will be private\nto the namespace i.e. will have an exportTo setting '.' . Doing so\nwill make Pilot apply these customizations only to the namespace\nconcerned without leaking it to all other namespaces."
    },
    "tetrate.api.tcc.core.v1.ClientSettings.Sensitivity": {
      "type": "string",
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "default": "LOW"
    },
    "tetrate.api.tcc.core.v1.Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Registry"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Information like datacenter where the cluster is present"
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings"
        },
        "permissions": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Permissions"
        }
      }
    },
    "tetrate.api.tcc.core.v1.ConfigData": {
      "type": "object",
      "properties": {
        "configtype": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "payload": {
          "type": "string",
          "description": "For istio, this is a huge YAML dump of all Istio artifacts like\nvirtual services, destination rules, service entries, gateways,\netc. in YAML form. For F5, its all f5 config artifacts."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CorsPolicy": {
      "type": "object",
      "properties": {
        "allowOrigin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of origins that are allowed to perform CORS requests. The\ncontent will be serialized into the Access-Control-Allow-Origin\nheader. Wildcard * will allow all origins."
        },
        "allowMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of HTTP methods allowed to access the resource. The content will\nbe serialized into the Access-Control-Allow-Methods header."
        },
        "allowHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of HTTP headers that can be used when requesting the\nresource. Serialized to Access-Control-Allow-Headers header."
        },
        "exposeHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A white list of HTTP headers that the browsers are allowed to\naccess. Serialized into Access-Control-Expose-Headers header."
        },
        "maxAge": {
          "type": "string",
          "description": "Specifies how long the results of a preflight request can be\ncached. Translates to the `Access-Control-Max-Age` header."
        },
        "allowCredentials": {
          "type": "boolean",
          "format": "boolean",
          "description": "Indicates whether the caller is allowed to send the actual request\n(not the preflight) using credentials. Translates to\n`Access-Control-Allow-Credentials` header."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateApplicationRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "application": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateClusterRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateDeploymentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateEndpointRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "deployment": {
          "type": "string"
        },
        "endpoint": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateLoadBalancerRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "loadbalancer": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateNamespaceRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateServiceRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateTeamRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "team": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateTenantRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateUserRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateWorkspaceRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Deployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loadBalancer": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancerInfo"
        },
        "service": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Endpoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "deployment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "Address associated with the network endpoint without the port.\nDomain names can be used and must be fully-qualified without\nwildcards."
        },
        "ports": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Set of inbound traffic ports associated with the endpoint. The\nports must be associated with a port number that was declared\nas part of the service."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "One or more labels associated with the endpoint."
        },
        "locality": {
          "type": "string",
          "description": "The locality associated with the endpoint, in the form\ncountry/region/zone. A locality corresponds to a failure domain\n(country/region/zone)."
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "description": "The load balancing weight associated with the endpoint. Endpoints\nwith higher weights in a pool will receive proportionally higher\ntraffic."
        }
      },
      "description": "Endpoint defines a network address (IP or hostname) associated with\nthe service."
    },
    "tetrate.api.tcc.core.v1.HTTPRetry": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer",
          "format": "int32",
          "description": "REQUIRED. Number of retries for a given request. The interval\nbetween retries will be determined automatically (25ms+). Actual\nnumber of retries attempted depends on the httpReqTimeout."
        },
        "perTryTimeout": {
          "type": "string",
          "description": "Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE \u003e=1ms."
        },
        "retryOn": {
          "type": "string",
          "description": "Specifies the conditions under which retry takes place.\nOne or more policies can be specified using a ‘,’ delimited list.\nSee the [supported\npolicies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-on)\nand\n[here](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-grpc-on)\nfor more details."
        }
      }
    },
    "tetrate.api.tcc.core.v1.HttpMatchCondition": {
      "type": "object",
      "properties": {
        "uri": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "title": "URI to match"
        },
        "scheme": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "title": "URI Scheme"
        },
        "method": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "title": "HTTP Method"
        },
        "authority": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "title": "HTTP Authority"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch"
          },
          "description": "The header keys must be lowercase and use hyphen as the separator,\ne.g. _x-request-id_."
        }
      },
      "title": "A single match clause to match all aspects of a request"
    },
    "tetrate.api.tcc.core.v1.HttpModifyAction": {
      "type": "object",
      "properties": {
        "what": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpModifyAction.What"
        },
        "how": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpModifyAction.How"
        },
        "headerName": {
          "type": "string",
          "title": "used only if what is a Header"
        },
        "value": {
          "type": "string",
          "title": "string to use as replacement for url rewrite/host rewrite or setting headers\nno value is necessary when deleting the header"
        }
      },
      "title": "A single modification for a part of a request"
    },
    "tetrate.api.tcc.core.v1.HttpModifyAction.How": {
      "type": "string",
      "enum": [
        "SET",
        "APPEND",
        "DELETE"
      ],
      "default": "SET",
      "title": "- SET: this is the only value allowed for uri and authority rewrite\n - APPEND: append and delete are applicable only for headers"
    },
    "tetrate.api.tcc.core.v1.HttpModifyAction.What": {
      "type": "string",
      "enum": [
        "URI",
        "AUTHORITY",
        "HEADER"
      ],
      "default": "URI"
    },
    "tetrate.api.tcc.core.v1.HttpRule": {
      "type": "object",
      "properties": {
        "matchConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpMatchCondition"
          },
          "title": "one or more match conditions (OR-ed)"
        },
        "modifyActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpModifyAction"
          },
          "title": "one or more mutations to be performed before forwarding.\nIncludes typical modifications to be done on a single request\nlike URL rewrite, host rewrite, headers to add/remove/append"
        },
        "route": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route"
        },
        "redirect": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Redirect"
        }
      },
      "title": "A single HTTP rule"
    },
    "tetrate.api.tcc.core.v1.HttpSettings": {
      "type": "object",
      "properties": {
        "stickySession": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings.StickySession"
        },
        "corsPolicy": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.CorsPolicy"
        },
        "routeRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpRule"
          }
        }
      },
      "description": "HTTP settings for a service. Applicable to ports receiving HTTP traffic."
    },
    "tetrate.api.tcc.core.v1.HttpSettings.HTTPCookie": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "REQUIRED. Name of the cookie."
        },
        "path": {
          "type": "string",
          "description": "Path to set for the cookie."
        },
        "ttl": {
          "type": "string",
          "description": "REQUIRED. Lifetime of the cookie."
        }
      },
      "description": "Describes a HTTP cookie that will be used for sticky sessions. If\nthe cookie is not present, it will be generated."
    },
    "tetrate.api.tcc.core.v1.HttpSettings.StickySession": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "description": "Hash based on a specific HTTP header."
        },
        "cookie": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings.HTTPCookie",
          "description": "Hash based on HTTP cookie."
        },
        "useSourceIp": {
          "type": "boolean",
          "format": "boolean",
          "description": "Hash based on the source IP address."
        }
      },
      "title": "If set, the load balancer will route all requests from a\nparticular client to the same backend of the service.\nTODO (@lizan): this is incomplete in envoy. It still uses ketama hash\nwhich changes the mapping when more endpoints are added to LB pool"
    },
    "tetrate.api.tcc.core.v1.ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListLoadBalancersResponse": {
      "type": "object",
      "properties": {
        "loadbalancers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListTeamMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListTeamsResponse": {
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListTenantsResponse": {
      "type": "object",
      "properties": {
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListWorkspacesResponse": {
      "type": "object",
      "properties": {
        "workspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Workspace"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.LoadBalancer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "services": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSSettings"
          },
          "title": "Map of services attached to this loadbalancer in the form\nworkspaces/\u003cworkspace\u003e/applications/\u003capplication\u003e/services/\u003cservice\u003e: TLS credential information\nor clusters/\u003ccluster\u003e/namespaces/\u003cnamespace\u003e/deployments/\u003cdeployment\u003e: TLS credential information"
        },
        "loadbalancerDeployments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of physical load balancer deployments attached to this logical load balancer"
        }
      }
    },
    "tetrate.api.tcc.core.v1.LoadBalancerInfo": {
      "type": "object",
      "properties": {
        "loadBalancerClass": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancerInfo.Class"
        },
        "services": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSSettings"
          },
          "title": "Map of service deployments (in the cluster) attached to this loadbalancer deployment\nwith their TLS credential information in the form:\nclusters/\u003ccluster\u003e/namespaces/\u003cnamespace\u003e/deployments/\u003cdeployment\u003e: TLS settings"
        },
        "managementIp": {
          "type": "string",
          "title": "information specific to F5 load balancers if load balancer class is F5"
        }
      }
    },
    "tetrate.api.tcc.core.v1.LoadBalancerInfo.Class": {
      "type": "string",
      "enum": [
        "NONE",
        "ENVOY",
        "F5"
      ],
      "default": "NONE",
      "description": "If Class is NONE, none of the information in this message will be populated."
    },
    "tetrate.api.tcc.core.v1.Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The deployments (or namespaces) that endpoints in this namespace depend upon\nfor proper operation by name. If omitted, it's assumed that endpoints in\nthis namespace depend only on other services in the same namespace as the\nendpoint."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings"
        },
        "permissions": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Permissions"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Permissions": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Permissions.Operation"
          },
          "title": "team : operation"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Permissions.Operation": {
      "type": "string",
      "enum": [
        "READ",
        "WRITE"
      ],
      "default": "READ"
    },
    "tetrate.api.tcc.core.v1.Port": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "REQUIRED: A valid non-negative integer port number."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol exposed on the port.\nMUST BE one of HTTP|GRPC|HTTP2|TCP|TLS.\nTLS implies the connection will be routed based on the SNI header to\nthe destination without terminating the TLS connection."
        },
        "name": {
          "type": "string",
          "description": "Label assigned to the port."
        },
        "endpointPort": {
          "type": "integer",
          "format": "int64",
          "description": "The endpoint port to which this service port maps to. For example, service port 80\nexposed on the load balancer could map to an endpoint port 9080 on a VM."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Redirect": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "On a redirect, overwrite the Path portion of the URL with this\nvalue."
        },
        "authority": {
          "type": "string",
          "description": "On a redirect, overwrite the Authority/Host portion of the URL with\nthis value."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Registry": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "KUBERNETES",
        "F5"
      ],
      "default": "UNKNOWN"
    },
    "tetrate.api.tcc.core.v1.RegistryData": {
      "type": "object",
      "properties": {
        "registrytype": {
          "type": "string",
          "title": "currently accepted values are kubernetes or f5"
        },
        "tenant": {
          "type": "string"
        },
        "cluster": {
          "type": "string",
          "title": "A unique identifier for the k8s/f5 cluster"
        },
        "payload": {
          "type": "string",
          "title": "A huge json dump of all services, endpoints.\nFor k8s, its literally kubectl get services --all-namespaces -o json\nand kubectl get po --all-namespaces -o json"
        }
      },
      "description": "Please do not over engineer this anything beyond a glorified\nfile copy."
    },
    "tetrate.api.tcc.core.v1.Route": {
      "type": "object",
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route.Destination"
          }
        }
      },
      "title": "One or more destinations for the given request"
    },
    "tetrate.api.tcc.core.v1.Route.Destination": {
      "type": "object",
      "properties": {
        "subset": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "title": "100 if omitted. sum of all weights should add up to 100"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "Optional:"
        },
        "svc": {
          "type": "string",
          "description": "Must be of form cluster/123/namespace/456/service/blah.com. If specified, incoming traffic\nfor the service will be forwarded to the service\nspecified. Typically used on ingress gateways on kubernetes\nclusters."
        }
      }
    },
    "tetrate.api.tcc.core.v1.RoutingInfo": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User identifiable tags associated with this service."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Port"
          }
        },
        "subsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Subset"
          }
        },
        "httpSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings",
          "description": "HTTP specific settings, transformations and routing rules\nassociated with HTTP traffic to this service."
        },
        "tcpSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TcpSettings",
          "description": "TCP specific settings, transformations and routing rules\nassociated with non-HTTP traffic to this service."
        }
      },
      "title": "Part of the Deployment type_info oneof"
    },
    "tetrate.api.tcc.core.v1.Service": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "workspace": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "routingInfo": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo"
        },
        "serviceDeployments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.StringMatch": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "string",
          "title": "exact string match"
        },
        "prefix": {
          "type": "string",
          "title": "prefix-based match"
        },
        "regex": {
          "type": "string",
          "title": "ECMAscript style regex-based match"
        }
      },
      "description": "Describes how to match a given string in HTTP headers. Match is\ncase-sensitive."
    },
    "tetrate.api.tcc.core.v1.Subset": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels apply a filter over the endpoints of a service in the\nservice registry."
        }
      }
    },
    "tetrate.api.tcc.core.v1.TLSSettings": {
      "type": "object",
      "properties": {
        "sni": {
          "type": "string",
          "description": "If specified, only allow requests that match the SNI value."
        },
        "serverCertificate": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the\nserver-side TLS certificate to use."
        },
        "privateKey": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the\nserver's private key."
        },
        "caCertificates": {
          "type": "string",
          "description": "For proxies running on VMs, the path to a file containing\ncertificate authority certificates to use in verifying a\npresented client side certificate for mutual TLS connections."
        },
        "secretName": {
          "type": "string",
          "description": "For proxies running on Kubernetes, the name of the secret that\nholds the TLS certs. Currently applicable only on Kubernetes.\nThe secret should contain the server certificate and the private\nkey. If mutual TLS is being used, an additional secret with name\nsecretName-cacert should be created with the CaCertificates that\nthe server will use to verify client side certificates. If the\nservice is exposed via a load balancer, the secret must be\naccessible to it."
        }
      },
      "title": "TODO: This must become some form of a meta API such that it can be reused across LBs"
    },
    "tetrate.api.tcc.core.v1.TcpSettings": {
      "type": "object",
      "properties": {
        "route": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route",
          "description": "The destination to which the connection should be forwarded to."
        }
      },
      "description": "TCP settings for a service. Applicable to ports receiving non-HTTP traffic."
    },
    "tetrate.api.tcc.core.v1.Team": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.Tenant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Workspace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Permissions"
        }
      }
    }
  }
}
