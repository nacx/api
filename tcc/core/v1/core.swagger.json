{
  "swagger": "2.0",
  "info": {
    "title": "TCC Configuration API",
    "version": "v1",
    "contact": {
      "name": "Tetrate.io, Inc.",
      "url": "https://www.tetrate.io",
      "email": "info@tetrate.io"
    }
  },
  "host": "TCCHOST",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/tenants": {
      "get": {
        "operationId": "ListTenants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListTenantsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateTenantRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{id}": {
      "get": {
        "operationId": "GetTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{id}/policy": {
      "get": {
        "operationId": "GetTenantPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "SetTenantPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments": {
      "get": {
        "operationId": "ListEnvironments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListEnvironmentsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateEnvironment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Environment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateEnvironmentRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications": {
      "get": {
        "operationId": "ListApplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListApplicationsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "Environment.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateApplicationRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications/{application}/services": {
      "get": {
        "operationId": "ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListServicesResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "Environment.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "description": "Application.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateServiceRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications/{application}/services/{id}": {
      "get": {
        "operationId": "GetService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "Environment.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "description": "Application.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Short name for the service. Clusters are expected to have namespaces that match the application, and services that match the Id, especially on Kubernetes.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications/{application}/services/{id}/policy": {
      "get": {
        "operationId": "GetServicePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetServicePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications/{id}": {
      "get": {
        "operationId": "GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "Environment.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "short name for the application.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/applications/{id}/policy": {
      "get": {
        "operationId": "GetApplicationPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetApplicationPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/bulkloadcluster": {
      "post": {
        "operationId": "BulkLoadCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.BulkLoadClusterRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters": {
      "get": {
        "operationId": "ListClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListClustersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateClusterRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/configproducer/{configtype}": {
      "get": {
        "operationId": "Download",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ConfigData"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "configtype",
            "description": "Currently accepted values are istio or f5.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConfigProducer"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces": {
      "get": {
        "operationId": "ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListNamespacesResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateNamespaceRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{id}": {
      "get": {
        "operationId": "GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{id}/policy": {
      "get": {
        "operationId": "GetNamespacePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetNamespacePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments": {
      "get": {
        "operationId": "ListDeployments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListDeploymentsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateDeploymentRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}/endpoints": {
      "get": {
        "operationId": "ListEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListEndpointsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateEndpointRequest"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}/endpoints/{id}": {
      "get": {
        "operationId": "GetEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments/{deployment}/endpoints/{id}/policy": {
      "get": {
        "operationId": "GetEndpointPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetEndpointPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments/{id}": {
      "get": {
        "operationId": "GetDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateDeployment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/namespaces/{namespace}/deployments/{id}/policy": {
      "get": {
        "operationId": "GetDeploymentPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetDeploymentPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{cluster}/registryconsumer/{registrytype}": {
      "post": {
        "operationId": "UpdateResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.RegistryConsumerResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant where this service is residing e.g Tetrate.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "environment are higher-level isolations e.g. prod, staging, development, etc.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "description": "Unique cluster acting as a source.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrytype",
            "description": "registrytype indicates source of entry. Currently accepted values \"kubernetes\", \"f5\".",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.RegistryUpdateResourcesRequest"
            }
          }
        ],
        "tags": [
          "RegistryConsumer"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{id}": {
      "get": {
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/clusters/{id}/policy": {
      "get": {
        "operationId": "GetClusterPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetClusterPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "PhysicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/loadbalancers": {
      "get": {
        "operationId": "ListLoadBalancers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListLoadBalancersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "post": {
        "operationId": "CreateLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "description": "Environment.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateLoadBalancerRequest"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/loadbalancers/{id}": {
      "get": {
        "operationId": "GetLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateLoadBalancer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{environment}/loadbalancers/{id}/policy": {
      "get": {
        "operationId": "GetLoadBalancerPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetLoadBalancerPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{id}": {
      "get": {
        "operationId": "GetEnvironment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Environment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "delete": {
        "operationId": "DeleteEnvironment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "UpdateEnvironment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Environment"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "A short name for the environment (e.g,, dev, stage, us-1, etc.).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Environment"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/environments/{id}/policy": {
      "get": {
        "operationId": "GetEnvironmentPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      },
      "put": {
        "operationId": "SetEnvironmentPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "LogicalResourceModel"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams": {
      "get": {
        "operationId": "ListTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListTeamsResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateTeamRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams/{id}": {
      "get": {
        "operationId": "GetTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/teams/{id}/policy": {
      "get": {
        "operationId": "GetTeamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "SetTeamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/users": {
      "get": {
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListUsersResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant.Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/users/{id}": {
      "get": {
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1/tenants/{tenant}/users/{id}/policy": {
      "get": {
        "operationId": "GetUserPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Internal use only. Auto populated field.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "operationId": "SetUserPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tetrate.api.tcc.core.v1.Policy"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    }
  },
  "definitions": {
    "tetrate.api.tcc.core.v1.Application": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "environment": {
          "type": "string",
          "description": "Environment.Id."
        },
        "id": {
          "type": "string",
          "description": "short name for the application."
        },
        "description": {
          "type": "string",
          "description": "Additional information."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Resilience settings that apply to all services within the application, for outbound calls from the application's services to other services."
        },
        "appLbs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.ApplicationSpecificLB"
          },
          "description": "An application can be exposed on a shared load balancer in the cluster or a dedicated load balancer in one of the application's namespaces. Set app_lbs to indicate that the application should be exposed on the dedicated load balancers. Namespace where each of the dedicated load balancer is scoped should be unique."
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of namespaces where the application services (or components) are scoped within. If omitted, the application is assumed to be scoped in a namespace matching the Id field."
        }
      },
      "description": "An Application is a collection of services. Each application typically corresponds to one or more kubernetes namespace or an application deployment on VMs.",
      "title": "Application"
    },
    "tetrate.api.tcc.core.v1.ApplicationSpecificLB": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Load balancer deployment labels (Kubernetes only for now). If gateway was created using TCC helm charts, use app: {namespace}-tcclb for kubernetes. The gateway will expose the application on ports 80 and 443 (if tls is configured)."
        },
        "tls": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSSettings",
          "description": "TLS certificate info for the application. If nil, the gateway will expose the application on port 80 only. Internal use only. Auto populated."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where this dedicated load balancer of the application is scoped. It should be one of application namespaces. This field cannot be omitted if the application has more than one namespace. If there is only one dedicated load balancer and application has only one  namespace and if this namespace field is omitted, then this field would default to the application namespace."
        },
        "hostname": {
          "type": "string",
          "description": "Hostname with which the application is exposed on this load balancer."
        },
        "routingInfo": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo",
          "description": "HTTP Routing settings for the hostname. Note that subsets should not be defined at LB hostname level."
        },
        "isPrimary": {
          "type": "boolean",
          "format": "boolean",
          "description": "Indicator whether to use this LB as primary. This is used for Metrics reporting at the App level. If there are multiple dedicated load balancers in an App, only one and mandatorily one has to be marked primary. If there is only one dedicated load balancer in an app, it will be marked as primary by default."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Binding": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role that defines the permissions that will be granted to the target resource."
        },
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of subjects that will be allowed to access the target resource with the permissions defined by the role."
        }
      },
      "description": "A binding associates a role with a set of subjects. Bindings are used to configure policies, where different roles can be assigned to different sets of subjects to configure a fine-grained access control to the resource protected by the policy.",
      "title": "Binding"
    },
    "tetrate.api.tcc.core.v1.BulkLoadClusterRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.BulkLoadClusterRequest.ClusterWithNamespaces"
          }
        }
      },
      "title": "Cluster, Namespaces, deployments, and endpoints in this request will replace the existing contents of a cluster"
    },
    "tetrate.api.tcc.core.v1.BulkLoadClusterRequest.ClusterWithNamespaces": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.BulkLoadClusterRequest.NamespaceWithDeployments"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.BulkLoadClusterRequest.DeploymentWithEndpoints": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.BulkLoadClusterRequest.NamespaceWithDeployments": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.BulkLoadClusterRequest.DeploymentWithEndpoints"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ClientSettings": {
      "type": "object",
      "properties": {
        "httpRequestTimeout": {
          "type": "string",
          "description": "Timeout for HTTP requests."
        },
        "httpRetries": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HTTPRetry",
          "description": "Retry policy for HTTP requests."
        },
        "tcpConnectTimeout": {
          "type": "string",
          "description": "TCP connection timeout."
        },
        "tcpKeepalive": {
          "type": "boolean",
          "format": "boolean",
          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives."
        },
        "circuitBreakerSensitivity": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings.Sensitivity",
          "description": "The sensitivity levels will translate to specific values of dest rule outlier detection."
        }
      },
      "description": "All the timeouts, retries, circuit breakers etc. that consumers want to set to gaurd against failures of their dependencies. These roughly translate to pieces of istio virtual service, destination rules, etc. At runtime, for a given namespace, for the namespace's dependencies, we combine the client specified reliability settings with the virtual service/dest rule for the dependencies to produce an updated virtual service/dest rule per dependent service. All these client customized virtual services/dest rules will be private to the namespace i.e. will have an exportTo setting '.' . Doing so will make Pilot apply these customizations only to the namespace concerned without leaking it to all other namespaces.",
      "title": "ClientSettings"
    },
    "tetrate.api.tcc.core.v1.ClientSettings.Sensitivity": {
      "type": "string",
      "enum": [
        "UNSET",
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "default": "UNSET"
    },
    "tetrate.api.tcc.core.v1.Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Registry"
        },
        "country": {
          "type": "string",
          "title": "Information like datacenter where the cluster is present"
        },
        "datacenter": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.ConfigData": {
      "type": "object",
      "properties": {
        "configtype": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "payload": {
          "type": "string",
          "description": "For istio, this is a huge YAML dump of all Istio artifacts like virtual services, destination rules, service entries, gateways, etc. in YAML form. For F5, its all f5 config artifacts."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CorsPolicy": {
      "type": "object",
      "properties": {
        "allowOrigin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of origins that are allowed to perform CORS requests. The content will be serialized into the Access-Control-Allow-Origin header. Wildcard * will allow all origins."
        },
        "allowMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of HTTP methods allowed to access the resource. The content will be serialized into the Access-Control-Allow-Methods header."
        },
        "allowHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of HTTP headers that can be used when requesting the resource. Serialized to Access-Control-Allow-Headers header."
        },
        "exposeHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A white list of HTTP headers that the browsers are allowed to access. Serialized into Access-Control-Expose-Headers header."
        },
        "maxAge": {
          "type": "string",
          "description": "Specifies how long the results of a preflight request can be cached. Translates to the Access-Control-Max-Age header."
        },
        "allowCredentials": {
          "type": "boolean",
          "format": "boolean",
          "description": "Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials. Translates to Access-Control-Allow-Credentials header."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateApplicationRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "environment": {
          "type": "string",
          "description": "Environment.Id."
        },
        "id": {
          "type": "string",
          "description": "short name for the application."
        },
        "description": {
          "type": "string",
          "description": "Additional information."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Resilience settings that apply to all services within the application, for outbound calls from the application's services to other services."
        },
        "appLbs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.ApplicationSpecificLB"
          },
          "description": "An application can be exposed on a shared load balancer in the cluster or a dedicated load balancer in one of the application's namespaces. Set app_lbs to indicate that the application should be exposed on the dedicated load balancers. Namespace where each of the dedicated load balancer is scoped should be unique."
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of namespaces where the application services (or components) are scoped within. If omitted, the application is assumed to be scoped in a namespace matching the Id field."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateClusterRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "description": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Registry"
        },
        "country": {
          "type": "string",
          "title": "Information like datacenter where the cluster is present"
        },
        "datacenter": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateDeploymentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "hostname": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Port"
          }
        },
        "lbManagementIp": {
          "type": "string",
          "title": "information specific to F5 load balancers if deployment refers to F5"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateEndpointRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "deployment": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "address": {
          "type": "string",
          "description": "Address associated with the network endpoint without the port. Domain names can be used and must be fully-qualified without wildcards."
        },
        "ports": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Set of inbound traffic ports associated with the endpoint. The ports must be associated with a port name that was declared as part of the deployment."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "One or more labels associated with the endpoint."
        },
        "locality": {
          "type": "string",
          "description": "The locality associated with the endpoint, in the form country/region/zone. A locality corresponds to a failure domain (country/region/zone)."
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "description": "The load balancing weight associated with the endpoint. Endpoints with higher weights in a pool will receive proportionally higher traffic."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateEnvironmentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "If present, this will be used as the id for the created object."
        },
        "description": {
          "type": "string",
          "description": "Additional information for readability."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Resilience settings that apply to all clusters in the environment."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateLoadBalancerRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "environment": {
          "type": "string",
          "description": "Environment.Id."
        },
        "id": {
          "type": "string",
          "description": "If present, this will be used as the id for the created object."
        },
        "description": {
          "type": "string"
        },
        "enableWorkflows": {
          "type": "boolean",
          "format": "boolean"
        },
        "loadBalancerClass": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancerClass"
        },
        "registry": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Registry"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where the load balancer is/will be scoped (deployed in a given cluster)."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels that uniquely identify the cluster loadbalancer. If gateway was created using TCC helm charts, use app: {namespace}-tcclb."
        },
        "applications": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListOfLBRoutingInfo"
          },
          "description": "Map of applications attached to this loadbalancer in the form applicationId: ListOfLBRoutingInfo."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Client settings are applicable for traffic from the load balancer's cluster namespace to the application's namespaces."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateNamespaceRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "title": "if present, this will be used as the id for the created object"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateServiceRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "environment": {
          "type": "string",
          "description": "Environment.Id."
        },
        "application": {
          "type": "string",
          "description": "Application.Id."
        },
        "id": {
          "type": "string",
          "description": "If present, this will be used as the id for the created object."
        },
        "description": {
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "FQDN hostname of the service."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User identifiable tags associated with this service."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Port"
          }
        },
        "routingInfo": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo",
          "description": "HTTP Routing settings for the service. Note that subsets (versions of the service) if any should be defined here."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace where the service is scoped. It should be one of application namespaces. If the application has only one namespace and if this field is omitted, this filed would default to the application namespace. This field cannot be omitted if the application has more than one namespace."
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateTeamRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "id": {
          "type": "string",
          "description": "If present, this will be used as the id for the created object."
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateTenantRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.CreateUserRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "id": {
          "type": "string",
          "description": "If present, this will be used as the id for the created object."
        },
        "description": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Deployment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Port"
          }
        },
        "lbManagementIp": {
          "type": "string",
          "title": "information specific to F5 load balancers if deployment refers to F5"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Endpoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "deployment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "Address associated with the network endpoint without the port. Domain names can be used and must be fully-qualified without wildcards."
        },
        "ports": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "Set of inbound traffic ports associated with the endpoint. The ports must be associated with a port name that was declared as part of the deployment."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "One or more labels associated with the endpoint."
        },
        "locality": {
          "type": "string",
          "description": "The locality associated with the endpoint, in the form country/region/zone. A locality corresponds to a failure domain (country/region/zone)."
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "description": "The load balancing weight associated with the endpoint. Endpoints with higher weights in a pool will receive proportionally higher traffic."
        },
        "etag": {
          "type": "string"
        }
      },
      "description": "Endpoint defines a network address (IP or hostname) associated with the service."
    },
    "tetrate.api.tcc.core.v1.Environment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "id": {
          "type": "string",
          "description": "A short name for the environment (e.g,, dev, stage, us-1, etc.)."
        },
        "description": {
          "type": "string",
          "description": "Additional information for readability."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Resilience settings that apply to all clusters in the environment."
        }
      },
      "description": "Environment is a collection of applications, services, load balancers, and clusters where they are deployed.",
      "title": "Environment"
    },
    "tetrate.api.tcc.core.v1.HTTPRetry": {
      "type": "object",
      "properties": {
        "attempts": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retries for a given request. The interval between retries will be determined automatically (25ms+). Actual number of retries attempted depends on the httpReqTimeout."
        },
        "perTryTimeout": {
          "type": "string",
          "description": "Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE \u003e=1ms."
        },
        "retryOn": {
          "type": "string",
          "description": "Specifies the conditions under which retry takes place. One or more policies can be specified using a ‘,’ delimited list. See the [supported policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-on) and [here](https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-grpc-on) for more details."
        }
      }
    },
    "tetrate.api.tcc.core.v1.HTTPRewrite": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Rewrite the path (or the prefix) portion of the URI with this value. If the original URI was matched based on prefix, the value provided in this field will replace the corresponding matched prefix."
        },
        "authority": {
          "type": "string",
          "description": "Rewrite the Authority/Host header with this value."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Headers": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Headers.HeaderOperations",
          "description": "Header manipulation rules to apply before forwarding a request to the destination service."
        },
        "response": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Headers.HeaderOperations",
          "description": "Header manipulation rules to apply before returning a response to the caller."
        }
      },
      "description": "Header manipulation rules."
    },
    "tetrate.api.tcc.core.v1.Headers.HeaderOperations": {
      "type": "object",
      "properties": {
        "set": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Overwrite the headers specified by key with the given values."
        },
        "add": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Append the given values to the headers specified by keys (will create a comma-separated list of values)."
        },
        "remove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Remove a the specified headers."
        }
      },
      "description": "HeaderOperations Describes the header manipulations to apply."
    },
    "tetrate.api.tcc.core.v1.HttpMatchCondition": {
      "type": "object",
      "properties": {
        "uri": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "description": "URI to match."
        },
        "scheme": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "title": "URI Scheme"
        },
        "method": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "description": "HTTP Method."
        },
        "authority": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch",
          "description": "HTTP Authority."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.StringMatch"
          },
          "description": "The header keys must be lowercase and use hyphen as the separator, e.g. x-request-id."
        }
      },
      "description": "A single match clause to match all aspects of a request."
    },
    "tetrate.api.tcc.core.v1.HttpModifyAction": {
      "type": "object",
      "properties": {
        "rewrite": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HTTPRewrite"
        },
        "headers": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Headers"
        }
      },
      "description": "HTTP path/url/header modification."
    },
    "tetrate.api.tcc.core.v1.HttpRule": {
      "type": "object",
      "properties": {
        "match": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpMatchCondition"
          },
          "description": "One or more match conditions (OR-ed)."
        },
        "modify": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpModifyAction",
          "description": "One or more mutations to be performed before forwarding. Includes typical modifications to be done on a single request like URL rewrite, host rewrite, headers to add/remove/append."
        },
        "route": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route"
        },
        "redirect": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Redirect"
        }
      },
      "description": "A single HTTP rule."
    },
    "tetrate.api.tcc.core.v1.HttpSettings": {
      "type": "object",
      "properties": {
        "stickySession": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings.StickySession"
        },
        "corsPolicy": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.CorsPolicy"
        },
        "routeRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpRule"
          }
        }
      },
      "description": "HTTP settings for a service. Applicable to ports receiving HTTP traffic.",
      "title": "HttpSettings"
    },
    "tetrate.api.tcc.core.v1.HttpSettings.HTTPCookie": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the cookie."
        },
        "path": {
          "type": "string",
          "description": "Path to set for the cookie."
        },
        "ttl": {
          "type": "string",
          "description": "Lifetime of the cookie."
        }
      },
      "description": "Describes a HTTP cookie that will be used for sticky sessions. If the cookie is not present, it will be generated."
    },
    "tetrate.api.tcc.core.v1.HttpSettings.StickySession": {
      "type": "object",
      "properties": {
        "header": {
          "type": "string",
          "description": "Hash based on a specific HTTP header."
        },
        "cookie": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings.HTTPCookie",
          "description": "Hash based on HTTP cookie."
        },
        "useSourceIp": {
          "type": "boolean",
          "format": "boolean",
          "description": "Hash based on the source IP address."
        }
      },
      "description": "If set, the load balancer will route all requests from a particular client to the same backend of the service."
    },
    "tetrate.api.tcc.core.v1.ListApplicationsResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Application"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListClustersResponse": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Cluster"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Deployment"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Endpoint"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListEnvironmentsResponse": {
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Environment"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListLoadBalancersResponse": {
      "type": "object",
      "properties": {
        "loadbalancers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancer"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Namespace"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListOfLBRoutingInfo": {
      "type": "object",
      "properties": {
        "lbSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListOfLBRoutingInfo.LBRoutingInfo"
          }
        }
      },
      "description": "Traffic routing settings for various hostnames exposed at the cluster load balancer."
    },
    "tetrate.api.tcc.core.v1.ListOfLBRoutingInfo.LBRoutingInfo": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname with which the application is exposed on this load balancer."
        },
        "tls": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TLSSettings",
          "description": "TLS certificate info for the application. If nil, the gateway will expose the application on port 80 only."
        },
        "routingInfo": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo",
          "description": "HTTP Routing settings for the hostname. Note that subsets should not be defined at LB hostname level."
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Service"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListTeamsResponse": {
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Team"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListTenantsResponse": {
      "type": "object",
      "properties": {
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Tenant"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.User"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.LoadBalancer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableWorkflows": {
          "type": "boolean",
          "format": "boolean"
        },
        "loadBalancerClass": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.LoadBalancerClass"
        },
        "registry": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Registry"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace where the load balancer is/will be scoped (deployed in a given cluster)."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels that uniquely identify the cluster loadbalancer. If gateway was created using TCC helm charts, use app: {namespace}-tcclb."
        },
        "applications": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.ListOfLBRoutingInfo"
          },
          "description": "Map of applications attached to this loadbalancer in the form applicationName: ListOfLBRoutingInfo."
        },
        "clientSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.ClientSettings",
          "description": "Client settings are applicable for traffic from this load balancer's namespace to the application's namespaces."
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.LoadBalancerClass": {
      "type": "string",
      "enum": [
        "NONE",
        "ENVOY",
        "F5"
      ],
      "default": "NONE"
    },
    "tetrate.api.tcc.core.v1.Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "tetrate.api.tcc.core.v1.Policy": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Binding"
          },
          "description": "The list of bindings configures the different access profiles that are allowed on the resource configured by the policy."
        }
      },
      "description": "A policy defines the set of subjects that can access a resource and under which conditions that access is granted.",
      "title": "Policy"
    },
    "tetrate.api.tcc.core.v1.Port": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int64",
          "description": "A valid non-negative integer port number."
        },
        "protocol": {
          "type": "string",
          "description": "The protocol exposed on the port. MUST BE one of HTTP|GRPC|HTTP2|HTTPS|TCP|TLS. TLS implies the connection will be routed based on the SNI header to the destination without terminating the TLS connection."
        },
        "name": {
          "type": "string",
          "description": "Name assigned to the port."
        },
        "endpointPort": {
          "type": "integer",
          "format": "int64",
          "description": "The endpoint port to which this service port maps to. For example, service port 80 exposed on the load balancer could map to an endpoint port 9080 on a VM."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Redirect": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "On a redirect, overwrite the Path portion of the URL with this value."
        },
        "authority": {
          "type": "string",
          "description": "On a redirect, overwrite the Authority/Host portion of the URL with this value."
        }
      }
    },
    "tetrate.api.tcc.core.v1.Registry": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "KUBERNETES",
        "VM"
      ],
      "default": "UNKNOWN"
    },
    "tetrate.api.tcc.core.v1.RegistryConsumerResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "description": "RegistryConsumerResponse response returned by server."
    },
    "tetrate.api.tcc.core.v1.RegistryUpdateResourcesRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "tenant": {
          "type": "string",
          "description": "Tenant where this service is residing e.g Tetrate."
        },
        "environment": {
          "type": "string",
          "description": "environment are higher-level isolations e.g. prod, staging, development, etc."
        },
        "cluster": {
          "type": "string",
          "description": "Unique cluster acting as a source."
        },
        "registrytype": {
          "type": "string",
          "description": "registrytype indicates source of entry. Currently accepted values \"kubernetes\", \"f5\"."
        },
        "payload": {
          "type": "string",
          "description": "JSON bulk payload of all physical resources."
        }
      },
      "description": "RegistryUpdateResourcesRequest request object."
    },
    "tetrate.api.tcc.core.v1.Route": {
      "type": "object",
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route.Destination"
          }
        }
      },
      "description": "One or more destinations for the given request."
    },
    "tetrate.api.tcc.core.v1.Route.Destination": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "If omitted, will route to same host as the service."
        },
        "subset": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "description": "100 if omitted. sum of all weights should add up to 100."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Optional."
        }
      }
    },
    "tetrate.api.tcc.core.v1.RoutingInfo": {
      "type": "object",
      "properties": {
        "subsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Subset"
          },
          "description": "One or more versions of the service. Each version has a distinct name and a set of labels that help uniquely identify the pods/VMs of that version."
        },
        "httpSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.HttpSettings",
          "description": "HTTP specific settings, transformations and routing rules associated with HTTP traffic to this service."
        },
        "tcpSettings": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.TcpSettings",
          "description": "TCP specific settings, transformations and routing rules associated with non-HTTP traffic to this service."
        }
      },
      "description": "HTTP routing settings for application or service. Subsets of a service should be declared here as well.",
      "title": "RoutingInfo"
    },
    "tetrate.api.tcc.core.v1.Service": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant.Id."
        },
        "environment": {
          "type": "string",
          "description": "Environment.Id."
        },
        "application": {
          "type": "string",
          "description": "Application.Id."
        },
        "id": {
          "type": "string",
          "description": "Short name for the service. Clusters are expected to have namespaces that match the application, and services that match the Id, especially on Kubernetes."
        },
        "description": {
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "FQDN hostname of the service."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User identifiable tags associated with this service."
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tetrate.api.tcc.core.v1.Port"
          }
        },
        "routingInfo": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.RoutingInfo",
          "description": "HTTP Routing settings for the service. Note that subsets (versions of the service) if any should be defined here."
        },
        "etag": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace where the service is scoped and should be one of application namespaces. If the application has only one namespace and if this field is omitted, this filed would default to the application namespace. This field cannot be omitted if the application has more than one namespace."
        }
      }
    },
    "tetrate.api.tcc.core.v1.StringMatch": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "string",
          "description": "Exact string match."
        },
        "prefix": {
          "type": "string",
          "description": "Prefix-based match."
        },
        "regex": {
          "type": "string",
          "description": "ECMAscript style regex-based match."
        }
      },
      "description": "Describes how to match a given string in HTTP headers. Match is case-sensitive."
    },
    "tetrate.api.tcc.core.v1.Subset": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels apply a filter over the endpoints of a service in the service registry."
        }
      }
    },
    "tetrate.api.tcc.core.v1.TLSSettings": {
      "type": "object",
      "properties": {
        "tlsEnabled": {
          "type": "boolean",
          "format": "boolean",
          "description": "enable TLS settings for the application."
        },
        "redirectToHttps": {
          "type": "boolean",
          "format": "boolean",
          "description": "If set, the load balancer will redirect HTTP connections on port 80 to HTTPS port 443."
        },
        "serverCertificate": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the server-side TLS certificate to use."
        },
        "privateKey": {
          "type": "string",
          "description": "For proxies running on VMs, the path to the file holding the server's private key."
        },
        "caCertificates": {
          "type": "string",
          "description": "For proxies running on VMs, the path to a file containing certificate authority certificates to use in verifying a presented client side certificate for mutual TLS connections."
        },
        "secretName": {
          "type": "string",
          "description": "For proxies running on Kubernetes, the name of the secret that holds the TLS certs. Currently applicable only on Kubernetes. The secret should contain the server certificate and the private key. If mutual TLS is being used, an additional secret with name secretName-cacert should be created with the CaCertificates that the server will use to verify client side certificates. If the service is exposed via a load balancer, the secret must be accessible to it."
        }
      }
    },
    "tetrate.api.tcc.core.v1.TcpSettings": {
      "type": "object",
      "properties": {
        "route": {
          "$ref": "#/definitions/tetrate.api.tcc.core.v1.Route",
          "description": "The destination to which the connection should be forwarded to."
        }
      },
      "description": "TCP settings for a service. Applicable to ports receiving non-HTTP traffic."
    },
    "tetrate.api.tcc.core.v1.Team": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.Tenant": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "tetrate.api.tcc.core.v1.User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Internal use only. Auto populated field."
        },
        "tenant": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    }
  }
}
