// Code generated by protoc-gen-go. DO NOT EDIT.
// source: organization.proto

package v1 // import "github.com/tetrateio/tetrate/api/tcc/core/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Tenant struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tenant) Reset()         { *m = Tenant{} }
func (m *Tenant) String() string { return proto.CompactTextString(m) }
func (*Tenant) ProtoMessage()    {}
func (*Tenant) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{0}
}
func (m *Tenant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tenant.Unmarshal(m, b)
}
func (m *Tenant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tenant.Marshal(b, m, deterministic)
}
func (dst *Tenant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tenant.Merge(dst, src)
}
func (m *Tenant) XXX_Size() int {
	return xxx_messageInfo_Tenant.Size(m)
}
func (m *Tenant) XXX_DiscardUnknown() {
	xxx_messageInfo_Tenant.DiscardUnknown(m)
}

var xxx_messageInfo_Tenant proto.InternalMessageInfo

func (m *Tenant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tenant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tenant) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateTenantRequest struct {
	// if present, this will be used as the id for the created object
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tenant               *Tenant  `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTenantRequest) Reset()         { *m = CreateTenantRequest{} }
func (m *CreateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTenantRequest) ProtoMessage()    {}
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{1}
}
func (m *CreateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantRequest.Unmarshal(m, b)
}
func (m *CreateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantRequest.Marshal(b, m, deterministic)
}
func (dst *CreateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantRequest.Merge(dst, src)
}
func (m *CreateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTenantRequest.Size(m)
}
func (m *CreateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantRequest proto.InternalMessageInfo

func (m *CreateTenantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateTenantRequest) GetTenant() *Tenant {
	if m != nil {
		return m.Tenant
	}
	return nil
}

type GetTenantRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTenantRequest) Reset()         { *m = GetTenantRequest{} }
func (m *GetTenantRequest) String() string { return proto.CompactTextString(m) }
func (*GetTenantRequest) ProtoMessage()    {}
func (*GetTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{2}
}
func (m *GetTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTenantRequest.Unmarshal(m, b)
}
func (m *GetTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTenantRequest.Marshal(b, m, deterministic)
}
func (dst *GetTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTenantRequest.Merge(dst, src)
}
func (m *GetTenantRequest) XXX_Size() int {
	return xxx_messageInfo_GetTenantRequest.Size(m)
}
func (m *GetTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTenantRequest proto.InternalMessageInfo

func (m *GetTenantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetTenantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListTenantsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTenantsRequest) Reset()         { *m = ListTenantsRequest{} }
func (m *ListTenantsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTenantsRequest) ProtoMessage()    {}
func (*ListTenantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{3}
}
func (m *ListTenantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTenantsRequest.Unmarshal(m, b)
}
func (m *ListTenantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTenantsRequest.Marshal(b, m, deterministic)
}
func (dst *ListTenantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTenantsRequest.Merge(dst, src)
}
func (m *ListTenantsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTenantsRequest.Size(m)
}
func (m *ListTenantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTenantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTenantsRequest proto.InternalMessageInfo

type ListTenantsResponse struct {
	Tenants              []*Tenant `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListTenantsResponse) Reset()         { *m = ListTenantsResponse{} }
func (m *ListTenantsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTenantsResponse) ProtoMessage()    {}
func (*ListTenantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{4}
}
func (m *ListTenantsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTenantsResponse.Unmarshal(m, b)
}
func (m *ListTenantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTenantsResponse.Marshal(b, m, deterministic)
}
func (dst *ListTenantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTenantsResponse.Merge(dst, src)
}
func (m *ListTenantsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTenantsResponse.Size(m)
}
func (m *ListTenantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTenantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTenantsResponse proto.InternalMessageInfo

func (m *ListTenantsResponse) GetTenants() []*Tenant {
	if m != nil {
		return m.Tenants
	}
	return nil
}

type DeleteTenantRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTenantRequest) Reset()         { *m = DeleteTenantRequest{} }
func (m *DeleteTenantRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTenantRequest) ProtoMessage()    {}
func (*DeleteTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{5}
}
func (m *DeleteTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTenantRequest.Unmarshal(m, b)
}
func (m *DeleteTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTenantRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTenantRequest.Merge(dst, src)
}
func (m *DeleteTenantRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTenantRequest.Size(m)
}
func (m *DeleteTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTenantRequest proto.InternalMessageInfo

func (m *DeleteTenantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteTenantRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Team struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Members              []string `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	Etag                 string   `protobuf:"bytes,6,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{6}
}
func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (dst *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(dst, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Team) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Team) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Team) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Team) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

type CreateTeamRequest struct {
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// if present, this will be used as the id for the created object
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Team                 *Team    `protobuf:"bytes,4,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTeamRequest) Reset()         { *m = CreateTeamRequest{} }
func (m *CreateTeamRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTeamRequest) ProtoMessage()    {}
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{7}
}
func (m *CreateTeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTeamRequest.Unmarshal(m, b)
}
func (m *CreateTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTeamRequest.Marshal(b, m, deterministic)
}
func (dst *CreateTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTeamRequest.Merge(dst, src)
}
func (m *CreateTeamRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTeamRequest.Size(m)
}
func (m *CreateTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTeamRequest proto.InternalMessageInfo

func (m *CreateTeamRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateTeamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateTeamRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateTeamRequest) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type GetTeamRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamRequest) Reset()         { *m = GetTeamRequest{} }
func (m *GetTeamRequest) String() string { return proto.CompactTextString(m) }
func (*GetTeamRequest) ProtoMessage()    {}
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{8}
}
func (m *GetTeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamRequest.Unmarshal(m, b)
}
func (m *GetTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamRequest.Marshal(b, m, deterministic)
}
func (dst *GetTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamRequest.Merge(dst, src)
}
func (m *GetTeamRequest) XXX_Size() int {
	return xxx_messageInfo_GetTeamRequest.Size(m)
}
func (m *GetTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamRequest proto.InternalMessageInfo

func (m *GetTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetTeamRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetTeamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListTeamsRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTeamsRequest) Reset()         { *m = ListTeamsRequest{} }
func (m *ListTeamsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTeamsRequest) ProtoMessage()    {}
func (*ListTeamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{9}
}
func (m *ListTeamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamsRequest.Unmarshal(m, b)
}
func (m *ListTeamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamsRequest.Marshal(b, m, deterministic)
}
func (dst *ListTeamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamsRequest.Merge(dst, src)
}
func (m *ListTeamsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTeamsRequest.Size(m)
}
func (m *ListTeamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamsRequest proto.InternalMessageInfo

func (m *ListTeamsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListTeamsRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListTeamsResponse struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTeamsResponse) Reset()         { *m = ListTeamsResponse{} }
func (m *ListTeamsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTeamsResponse) ProtoMessage()    {}
func (*ListTeamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{10}
}
func (m *ListTeamsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamsResponse.Unmarshal(m, b)
}
func (m *ListTeamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamsResponse.Marshal(b, m, deterministic)
}
func (dst *ListTeamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamsResponse.Merge(dst, src)
}
func (m *ListTeamsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTeamsResponse.Size(m)
}
func (m *ListTeamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamsResponse proto.InternalMessageInfo

func (m *ListTeamsResponse) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type DeleteTeamRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTeamRequest) Reset()         { *m = DeleteTeamRequest{} }
func (m *DeleteTeamRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTeamRequest) ProtoMessage()    {}
func (*DeleteTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{11}
}
func (m *DeleteTeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTeamRequest.Unmarshal(m, b)
}
func (m *DeleteTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTeamRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTeamRequest.Merge(dst, src)
}
func (m *DeleteTeamRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTeamRequest.Size(m)
}
func (m *DeleteTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTeamRequest proto.InternalMessageInfo

func (m *DeleteTeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteTeamRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteTeamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{12}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateUserRequest struct {
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// if present, this will be used as the id for the created object
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	User                 *User    `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{13}
}
func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (dst *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(dst, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateUserRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{14}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(dst, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetUserRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListUsersRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{15}
}
func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (dst *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(dst, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListUsersRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListUsersResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{16}
}
func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (dst *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(dst, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type DeleteUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserRequest) Reset()         { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()    {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_organization_e9a419e4f9cfc5de, []int{17}
}
func (m *DeleteUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserRequest.Unmarshal(m, b)
}
func (m *DeleteUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserRequest.Merge(dst, src)
}
func (m *DeleteUserRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserRequest.Size(m)
}
func (m *DeleteUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserRequest proto.InternalMessageInfo

func (m *DeleteUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteUserRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Tenant)(nil), "tetrate.api.tcc.core.v1.Tenant")
	proto.RegisterType((*CreateTenantRequest)(nil), "tetrate.api.tcc.core.v1.CreateTenantRequest")
	proto.RegisterType((*GetTenantRequest)(nil), "tetrate.api.tcc.core.v1.GetTenantRequest")
	proto.RegisterType((*ListTenantsRequest)(nil), "tetrate.api.tcc.core.v1.ListTenantsRequest")
	proto.RegisterType((*ListTenantsResponse)(nil), "tetrate.api.tcc.core.v1.ListTenantsResponse")
	proto.RegisterType((*DeleteTenantRequest)(nil), "tetrate.api.tcc.core.v1.DeleteTenantRequest")
	proto.RegisterType((*Team)(nil), "tetrate.api.tcc.core.v1.Team")
	proto.RegisterType((*CreateTeamRequest)(nil), "tetrate.api.tcc.core.v1.CreateTeamRequest")
	proto.RegisterType((*GetTeamRequest)(nil), "tetrate.api.tcc.core.v1.GetTeamRequest")
	proto.RegisterType((*ListTeamsRequest)(nil), "tetrate.api.tcc.core.v1.ListTeamsRequest")
	proto.RegisterType((*ListTeamsResponse)(nil), "tetrate.api.tcc.core.v1.ListTeamsResponse")
	proto.RegisterType((*DeleteTeamRequest)(nil), "tetrate.api.tcc.core.v1.DeleteTeamRequest")
	proto.RegisterType((*User)(nil), "tetrate.api.tcc.core.v1.User")
	proto.RegisterType((*CreateUserRequest)(nil), "tetrate.api.tcc.core.v1.CreateUserRequest")
	proto.RegisterType((*GetUserRequest)(nil), "tetrate.api.tcc.core.v1.GetUserRequest")
	proto.RegisterType((*ListUsersRequest)(nil), "tetrate.api.tcc.core.v1.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "tetrate.api.tcc.core.v1.ListUsersResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "tetrate.api.tcc.core.v1.DeleteUserRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrganizationClient is the client API for Organization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrganizationClient interface {
	CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	UpdateTenant(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error)
	ListTenants(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*ListTenantsResponse, error)
	DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateTeam(ctx context.Context, in *CreateTeamRequest, opts ...grpc.CallOption) (*Team, error)
	UpdateTeam(ctx context.Context, in *Team, opts ...grpc.CallOption) (*Team, error)
	GetTeam(ctx context.Context, in *GetTeamRequest, opts ...grpc.CallOption) (*Team, error)
	ListTeams(ctx context.Context, in *ListTeamsRequest, opts ...grpc.CallOption) (*ListTeamsResponse, error)
	DeleteTeam(ctx context.Context, in *DeleteTeamRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
}

type organizationClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationClient(cc *grpc.ClientConn) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetTenant(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/GetTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateTenant(ctx context.Context, in *Tenant, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/UpdateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) ListTenants(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*ListTenantsResponse, error) {
	out := new(ListTenantsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/ListTenants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/DeleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateTeam(ctx context.Context, in *CreateTeamRequest, opts ...grpc.CallOption) (*Team, error) {
	out := new(Team)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/CreateTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateTeam(ctx context.Context, in *Team, opts ...grpc.CallOption) (*Team, error) {
	out := new(Team)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/UpdateTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetTeam(ctx context.Context, in *GetTeamRequest, opts ...grpc.CallOption) (*Team, error) {
	out := new(Team)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/GetTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) ListTeams(ctx context.Context, in *ListTeamsRequest, opts ...grpc.CallOption) (*ListTeamsResponse, error) {
	out := new(ListTeamsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/ListTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteTeam(ctx context.Context, in *DeleteTeamRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/DeleteTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.Organization/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrganizationServer is the server API for Organization service.
type OrganizationServer interface {
	CreateTenant(context.Context, *CreateTenantRequest) (*Tenant, error)
	GetTenant(context.Context, *GetTenantRequest) (*Tenant, error)
	UpdateTenant(context.Context, *Tenant) (*Tenant, error)
	ListTenants(context.Context, *ListTenantsRequest) (*ListTenantsResponse, error)
	DeleteTenant(context.Context, *DeleteTenantRequest) (*empty.Empty, error)
	CreateTeam(context.Context, *CreateTeamRequest) (*Team, error)
	UpdateTeam(context.Context, *Team) (*Team, error)
	GetTeam(context.Context, *GetTeamRequest) (*Team, error)
	ListTeams(context.Context, *ListTeamsRequest) (*ListTeamsResponse, error)
	DeleteTeam(context.Context, *DeleteTeamRequest) (*empty.Empty, error)
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	GetUser(context.Context, *GetUserRequest) (*User, error)
	UpdateUser(context.Context, *User) (*User, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*empty.Empty, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateTenant(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/GetTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetTenant(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tenant)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/UpdateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateTenant(ctx, req.(*Tenant))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_ListTenants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTenantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).ListTenants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/ListTenants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).ListTenants(ctx, req.(*ListTenantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteTenant(ctx, req.(*DeleteTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/CreateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateTeam(ctx, req.(*CreateTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Team)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/UpdateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateTeam(ctx, req.(*Team))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/GetTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetTeam(ctx, req.(*GetTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_ListTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTeamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).ListTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/ListTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).ListTeams(ctx, req.(*ListTeamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteTeam(ctx, req.(*DeleteTeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.Organization/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.tcc.core.v1.Organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTenant",
			Handler:    _Organization_CreateTenant_Handler,
		},
		{
			MethodName: "GetTenant",
			Handler:    _Organization_GetTenant_Handler,
		},
		{
			MethodName: "UpdateTenant",
			Handler:    _Organization_UpdateTenant_Handler,
		},
		{
			MethodName: "ListTenants",
			Handler:    _Organization_ListTenants_Handler,
		},
		{
			MethodName: "DeleteTenant",
			Handler:    _Organization_DeleteTenant_Handler,
		},
		{
			MethodName: "CreateTeam",
			Handler:    _Organization_CreateTeam_Handler,
		},
		{
			MethodName: "UpdateTeam",
			Handler:    _Organization_UpdateTeam_Handler,
		},
		{
			MethodName: "GetTeam",
			Handler:    _Organization_GetTeam_Handler,
		},
		{
			MethodName: "ListTeams",
			Handler:    _Organization_ListTeams_Handler,
		},
		{
			MethodName: "DeleteTeam",
			Handler:    _Organization_DeleteTeam_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Organization_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Organization_GetUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Organization_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Organization_DeleteUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _Organization_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization.proto",
}

func init() { proto.RegisterFile("organization.proto", fileDescriptor_organization_e9a419e4f9cfc5de) }

var fileDescriptor_organization_e9a419e4f9cfc5de = []byte{
	// 902 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x97, 0x4d, 0x4f, 0x1b, 0x47,
	0x18, 0xc7, 0xb5, 0xb6, 0x31, 0xf2, 0x63, 0x17, 0x99, 0x71, 0x0b, 0xdb, 0x05, 0x84, 0x19, 0xb5,
	0x82, 0xba, 0x68, 0x57, 0xc0, 0xa9, 0x95, 0x7a, 0x28, 0x50, 0xb5, 0x87, 0x56, 0x8d, 0x2c, 0x38,
	0x24, 0xb7, 0xb1, 0x3d, 0x71, 0x36, 0x62, 0x5f, 0xd8, 0x1d, 0x5b, 0x82, 0x88, 0x1c, 0x72, 0xc8,
	0x21, 0xd7, 0x9c, 0xf3, 0x29, 0x72, 0xcb, 0x29, 0xa7, 0x7c, 0x81, 0x7c, 0x85, 0x5c, 0xf2, 0x2d,
	0xa2, 0x99, 0x9d, 0x7d, 0xb3, 0xf1, 0x8e, 0x89, 0xb0, 0x72, 0xdb, 0x97, 0x99, 0xe7, 0xff, 0xbc,
	0xfc, 0x3c, 0xff, 0x35, 0x20, 0x2f, 0x18, 0x12, 0xd7, 0xbe, 0x26, 0xcc, 0xf6, 0x5c, 0xd3, 0x0f,
	0x3c, 0xe6, 0xa1, 0x75, 0x46, 0x59, 0x40, 0x18, 0x35, 0x89, 0x6f, 0x9b, 0xac, 0xdf, 0x37, 0xfb,
	0x5e, 0x40, 0xcd, 0xf1, 0x81, 0xb1, 0x39, 0xf4, 0xbc, 0xe1, 0x05, 0xb5, 0x88, 0x6f, 0x5b, 0xc4,
	0x75, 0x3d, 0x26, 0x76, 0x85, 0xd1, 0x36, 0x63, 0x43, 0xbe, 0x15, 0x77, 0xbd, 0xd1, 0x63, 0x8b,
	0x3a, 0x3e, 0xbb, 0x92, 0x2f, 0xd7, 0xc7, 0xe4, 0xc2, 0x1e, 0x10, 0x46, 0xad, 0xf8, 0x22, 0x7a,
	0x81, 0x1f, 0x42, 0xf5, 0x8c, 0xba, 0xc4, 0x65, 0x08, 0x41, 0xc5, 0x25, 0x0e, 0xd5, 0xb5, 0xb6,
	0xb6, 0x57, 0xeb, 0x8a, 0x6b, 0xf4, 0x23, 0x94, 0xec, 0x81, 0x5e, 0xe2, 0x4f, 0x8e, 0x6b, 0xef,
	0x3e, 0xbf, 0x2f, 0x57, 0x82, 0x52, 0x53, 0xeb, 0x96, 0xec, 0x01, 0x6a, 0x43, 0x7d, 0x40, 0xc3,
	0x7e, 0x60, 0xfb, 0x3c, 0x09, 0xbd, 0x2c, 0x76, 0x65, 0x1f, 0xe1, 0xa7, 0xd0, 0x3a, 0x09, 0x28,
	0x61, 0x34, 0x12, 0xe8, 0xd2, 0xcb, 0x11, 0x0d, 0x19, 0x5a, 0x11, 0x31, 0x23, 0x15, 0x1e, 0xe8,
	0x04, 0xaa, 0x4c, 0x2c, 0x10, 0x3a, 0xf5, 0xc3, 0x6d, 0x73, 0x46, 0xfd, 0x66, 0x14, 0xe7, 0x18,
	0x78, 0x22, 0x4b, 0xaf, 0x34, 0x9e, 0x89, 0xdc, 0x8a, 0xff, 0x84, 0xe6, 0xdf, 0x94, 0xe5, 0x85,
	0xee, 0x56, 0x10, 0xfe, 0x1e, 0xd0, 0xbf, 0x76, 0x28, 0x63, 0x84, 0x32, 0x08, 0x7e, 0x00, 0xad,
	0xdc, 0xd3, 0xd0, 0xf7, 0xdc, 0x90, 0xa2, 0xdf, 0x60, 0x39, 0x52, 0x0e, 0x75, 0xad, 0x5d, 0x9e,
	0x23, 0xeb, 0x6e, 0xbc, 0x1e, 0x9f, 0x42, 0xeb, 0x94, 0x5e, 0xd0, 0xc9, 0xb6, 0xdc, 0x31, 0xdb,
	0xb7, 0x1a, 0x54, 0xce, 0x28, 0x71, 0x6e, 0xdd, 0xb7, 0x93, 0x6b, 0x69, 0x6e, 0xaf, 0x7c, 0x21,
	0x43, 0x97, 0xe7, 0x98, 0x6c, 0x65, 0x6a, 0xb2, 0x48, 0x87, 0x65, 0x87, 0x3a, 0x3d, 0x1a, 0x84,
	0xfa, 0x52, 0xbb, 0xbc, 0x57, 0xeb, 0xc6, 0xb7, 0x68, 0x0b, 0x2a, 0x94, 0x91, 0xa1, 0x5e, 0x9d,
	0x0c, 0x2c, 0x1e, 0xe3, 0x37, 0x1a, 0xac, 0xc6, 0x4c, 0x10, 0x27, 0x2e, 0x7d, 0x0d, 0xaa, 0x3e,
	0x09, 0xa8, 0xcb, 0x64, 0x11, 0xf2, 0x4e, 0x92, 0x52, 0x4a, 0x48, 0x49, 0xcb, 0x2a, 0xcf, 0x2a,
	0xeb, 0x0f, 0xa8, 0x30, 0x4a, 0x1c, 0x91, 0x74, 0xfd, 0x70, 0xab, 0x60, 0x28, 0xc4, 0xc9, 0x81,
	0x24, 0xb6, 0xe1, 0x1e, 0xac, 0x08, 0x8c, 0xd2, 0xdc, 0xee, 0xbd, 0xbd, 0xf8, 0x3f, 0x68, 0x46,
	0x44, 0x11, 0x27, 0x54, 0x75, 0x40, 0xad, 0x84, 0xff, 0x81, 0xd5, 0x4c, 0x38, 0x89, 0xe7, 0x11,
	0x2c, 0xf1, 0x7a, 0x62, 0x38, 0x8b, 0xfb, 0xd0, 0x8d, 0xd6, 0x62, 0x0a, 0xab, 0x31, 0x98, 0x8b,
	0xac, 0xff, 0x1a, 0x2a, 0xe7, 0x21, 0x0d, 0xbe, 0x05, 0xb8, 0x19, 0xfe, 0x78, 0x0a, 0x8b, 0xe1,
	0x6f, 0x14, 0xd2, 0x40, 0xc9, 0x1f, 0x97, 0xcf, 0xf3, 0xc7, 0xb7, 0x49, 0xfe, 0xb2, 0xb9, 0x2d,
	0x8c, 0x3f, 0x2e, 0x72, 0x8f, 0xfc, 0xc9, 0x70, 0x29, 0x7f, 0xbc, 0x1e, 0x35, 0x7f, 0xa2, 0xd4,
	0x68, 0x6d, 0xca, 0xdf, 0x42, 0xeb, 0x3f, 0xfc, 0xb0, 0x02, 0x8d, 0xff, 0x33, 0xae, 0x8b, 0x46,
	0xd0, 0xc8, 0xfa, 0x14, 0xda, 0x9f, 0x99, 0xed, 0x2d, 0x76, 0x66, 0xa8, 0x0e, 0x7e, 0xbc, 0xf6,
	0xe2, 0xe3, 0xa7, 0xd7, 0xa5, 0x26, 0xae, 0x5b, 0xe3, 0x03, 0x4b, 0x9a, 0xc0, 0xef, 0x5a, 0x07,
	0x5d, 0x42, 0x2d, 0xb1, 0x2c, 0xf4, 0xcb, 0xcc, 0x28, 0x93, 0xb6, 0xa6, 0x16, 0xd4, 0x85, 0x20,
	0x42, 0xcd, 0x8c, 0xa0, 0xf5, 0xcc, 0x1e, 0xdc, 0x20, 0x07, 0x1a, 0xe7, 0xfe, 0x20, 0xad, 0x54,
	0x15, 0x4a, 0xad, 0xb5, 0x21, 0xb4, 0x7e, 0x30, 0xa6, 0xb4, 0x78, 0x85, 0x37, 0x50, 0xcf, 0x78,
	0x27, 0xfa, 0x75, 0x66, 0xb0, 0x69, 0xdf, 0x35, 0xf6, 0xe7, 0x5b, 0x1c, 0xf1, 0x86, 0x5b, 0x22,
	0x8d, 0xef, 0x50, 0xb6, 0xc7, 0xc8, 0x85, 0x46, 0xd6, 0x68, 0x0b, 0xe6, 0x7a, 0x8b, 0x1f, 0x1b,
	0x6b, 0x66, 0xf4, 0x3d, 0x65, 0xc6, 0xdf, 0x53, 0xe6, 0x5f, 0xfc, 0x7b, 0x2a, 0xee, 0x6e, 0x67,
	0xba, 0xbb, 0xcf, 0x01, 0x52, 0x6f, 0x43, 0x1d, 0x25, 0x45, 0xc9, 0x21, 0x6b, 0x14, 0x9f, 0xcf,
	0xf8, 0x67, 0x21, 0xb9, 0x8d, 0x8d, 0x9c, 0x64, 0x74, 0x71, 0x63, 0x89, 0xc3, 0x9b, 0xb7, 0x7b,
	0x0c, 0x10, 0x4f, 0x97, 0x38, 0xa8, 0x38, 0xa6, 0x4a, 0xb2, 0x23, 0x24, 0x7f, 0x32, 0xb6, 0x67,
	0x4b, 0x26, 0x63, 0xbe, 0x86, 0x65, 0x69, 0x9a, 0x68, 0xb7, 0x18, 0xe3, 0xb9, 0x2b, 0xde, 0x15,
	0xf2, 0x3b, 0x48, 0x25, 0x8f, 0x5e, 0x6a, 0x50, 0x4b, 0xec, 0xaf, 0xe0, 0x57, 0x34, 0xe9, 0xb8,
	0x46, 0x67, 0x9e, 0xa5, 0x92, 0x2e, 0x2c, 0xb2, 0xd9, 0x44, 0x05, 0xfd, 0x47, 0x57, 0x00, 0xa9,
	0x79, 0x16, 0x0c, 0x7f, 0xca, 0x61, 0x67, 0x82, 0x26, 0x7b, 0xd0, 0x51, 0xf6, 0x20, 0xe1, 0x4e,
	0xd8, 0xaa, 0x8a, 0xbb, 0xcc, 0xe1, 0x6a, 0x14, 0x9f, 0xcb, 0x0a, 0xee, 0xc4, 0xa1, 0x9d, 0xce,
	0x5f, 0x88, 0x17, 0xce, 0xff, 0x0e, 0xca, 0xc5, 0xf3, 0x17, 0xca, 0x51, 0xed, 0x09, 0xf3, 0x42,
	0xbe, 0x38, 0xaa, 0x4a, 0xb4, 0x98, 0xf9, 0x54, 0x94, 0xd7, 0x9c, 0x8c, 0x5b, 0xd1, 0xf3, 0x29,
	0x43, 0xfb, 0xca, 0x71, 0x67, 0x4a, 0x8e, 0x91, 0x17, 0x8e, 0xab, 0x40, 0x3e, 0x6b, 0xf2, 0x0a,
	0xe4, 0x73, 0x06, 0xae, 0x40, 0x5e, 0x64, 0x73, 0x6c, 0x3e, 0xda, 0x1f, 0xda, 0xec, 0xc9, 0xa8,
	0x67, 0xf6, 0x3d, 0xc7, 0x92, 0xb1, 0x6d, 0x2f, 0xbe, 0x12, 0x7f, 0x53, 0x59, 0xbf, 0x6f, 0x71,
	0x15, 0x6b, 0x7c, 0xd0, 0xab, 0x8a, 0x8a, 0x8f, 0xbe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x49, 0xab,
	0x62, 0xb6, 0xf4, 0x0e, 0x00, 0x00,
}
