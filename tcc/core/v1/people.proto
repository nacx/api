syntax = "proto3";

package tetrate.api.tcc.core.v1;
option go_package = "github.com/tetrateio/tetrate/api/tcc/core/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// People are organized into Tenants (OUs), teams, and users. Teams
// are given access rights to logical resources (workspaces) or
// physical resources such as load balancers on a cluster.
service People {
  rpc CreateTenant(CreateTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      post: "/v1/tenants/{name}"
      body: "*"
    };
  };

  rpc GetTenant(GetTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      get: "/v1/tenants/{name}"
    };
  };

  rpc UpdateTenant(UpdateTenantRequest) returns (Tenant) {
    option (google.api.http) = {
      put: "/v1/tenants/{name}"
      body: "*"
    };
  };

  // Tetrate internal only
  rpc ListTenants(ListTenantsRequest) returns (ListTenantsResponse) {
    option (google.api.http) = {
      get: "/v1/tenants"
    };
  }

  rpc DeleteTenant(DeleteTenantRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/tenants/{name}"
    };
  };

  rpc CreateTeam(CreateTeamRequest) returns (Team) {
    option (google.api.http) = {
      post: "/v1/tenants/{tenant}/teams/{name}"
      body: "*"
    };
  };

  rpc UpdateTeam(UpdateTeamRequest) returns (Team) {
    option (google.api.http) = {
      put: "/v1/tenants/{tenant}/teams/{name}"
      body: "*"
    };
  };

  rpc GetTeam(GetTeamRequest) returns (Team) {
    option (google.api.http) = {
      get: "/v1/tenants/{tenant}/teams/{name}"
    };
  };

  rpc ListTeams(ListTeamsRequest) returns (ListTeamsResponse) {
    option (google.api.http) = {
      get: "/v1/tenants/{tenant}/teams"
    };
  }

  rpc DeleteTeam(DeleteTeamRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/tenants/{tenant}/teams/{name}"
    };
  };

  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/tenants/{tenant}/users/{name}"
      body: "*"
    };
  };

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/tenants/{tenant}/users/{name}"
    };
  };

  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      put: "/v1/tenants/{tenant}/users/{name}"
      body: "*"
    };
  };

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/tenants/{tenant}/users/{name}"
    };
  };

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/tenants/{tenant}/users"
    };
  };

  rpc ListTeamUsers(ListTeamUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/tenants/{tenant}/teams/{team}/users"
    };
  };

  rpc AddUsersToTeam(TeamMembershipRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/tenants/{tenant}/teams/{team}/users/add"
      body: "*"
    };
  }

  rpc RemoveUsersFromTeam(TeamMembershipRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/tenants/{tenant}/teams/{team}/users/remove"
      body: "*"
    };
  }
}

message Tenant {
  string name = 1;
  string display_name = 2;
}

message CreateTenantRequest {
  string name = 1;
  string display_name = 2;
}

message UpdateTenantRequest {
  string name = 1;
  string display_name = 2;
}

message GetTenantRequest {
  string name = 1;
}

message ListTenantsRequest {}

message ListTenantsResponse {
  repeated Tenant tenants = 1;
}

message DeleteTenantRequest {
  string name = 1;
}

message Team {
  string tenant = 1;
  string name = 2;
  string display_name = 3;
}

message CreateTeamRequest {
  string tenant = 1;
  string name = 2;
  string display_name = 3;
}

message UpdateTeamRequest {
  string tenant = 1;
  string name = 2;
  string display_name = 3;
}

message GetTeamRequest {
  string tenant = 1;
  string name = 2;
}

message ListTeamsRequest {
  string tenant = 1;
}

message ListTeamsResponse {
  repeated Team teams = 1;
}

message DeleteTeamRequest {
  string tenant = 1;
  string name = 2;
}

message User {
  string name = 1;
  string display_name = 2;
  string tenant = 3;
}

message CreateUserRequest {
  string name = 1;
  string display_name = 2;
  string tenant = 3;
}

message GetUserRequest {
  string name = 1;
  string tenant = 2;
}

message UpdateUserRequest {
  string name = 1;
  string display_name = 2;
  string tenant = 3;
}

message DeleteUserRequest {
  string name = 1;
  string tenant = 2;
}

message ListUsersRequest {
  string tenant = 1;
}

message ListTeamUsersRequest {
  string tenant = 1;
  string team = 2;
}

message ListUsersResponse {
  repeated User users = 1;
}

message TeamMembershipRequest {
  string tenant = 1;
  string team = 2;
  repeated string users = 3;
}
