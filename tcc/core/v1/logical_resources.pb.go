// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logical_resources.proto

package v1 // import "github.com/tetrateio/tetrate/api/tcc/core/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoadBalancerClass int32

const (
	LoadBalancerClass_NONE  LoadBalancerClass = 0
	LoadBalancerClass_ENVOY LoadBalancerClass = 1
	LoadBalancerClass_F5    LoadBalancerClass = 2
)

var LoadBalancerClass_name = map[int32]string{
	0: "NONE",
	1: "ENVOY",
	2: "F5",
}
var LoadBalancerClass_value = map[string]int32{
	"NONE":  0,
	"ENVOY": 1,
	"F5":    2,
}

func (x LoadBalancerClass) String() string {
	return proto.EnumName(LoadBalancerClass_name, int32(x))
}
func (LoadBalancerClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{0}
}

// Environment
//
// Environment is a collection of applications, services, load balancers, and clusters where they are deployed.
type Environment struct {
	// Internal use only. Auto populated field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// A short name for the environment (e.g,, dev, stage, us-1, etc.).
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Additional information for readability.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resilience settings that apply to all clusters in the environment.
	ClientSettings       *ClientSettings `protobuf:"bytes,5,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{0}
}
func (m *Environment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environment.Unmarshal(m, b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
}
func (dst *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(dst, src)
}
func (m *Environment) XXX_Size() int {
	return xxx_messageInfo_Environment.Size(m)
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Environment) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Environment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Environment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Environment) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

type CreateEnvironmentRequest struct {
	// Internal use only. Auto populated field.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// If present, this will be used as the id for the created object.
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Additional information for readability.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Resilience settings that apply to all clusters in the environment.
	ClientSettings       *ClientSettings `protobuf:"bytes,5,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateEnvironmentRequest) Reset()         { *m = CreateEnvironmentRequest{} }
func (m *CreateEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEnvironmentRequest) ProtoMessage()    {}
func (*CreateEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{1}
}
func (m *CreateEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEnvironmentRequest.Unmarshal(m, b)
}
func (m *CreateEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEnvironmentRequest.Marshal(b, m, deterministic)
}
func (dst *CreateEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEnvironmentRequest.Merge(dst, src)
}
func (m *CreateEnvironmentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEnvironmentRequest.Size(m)
}
func (m *CreateEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEnvironmentRequest proto.InternalMessageInfo

func (m *CreateEnvironmentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateEnvironmentRequest) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

type GetEnvironmentRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentRequest) Reset()         { *m = GetEnvironmentRequest{} }
func (m *GetEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentRequest) ProtoMessage()    {}
func (*GetEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{2}
}
func (m *GetEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEnvironmentRequest.Unmarshal(m, b)
}
func (m *GetEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEnvironmentRequest.Marshal(b, m, deterministic)
}
func (dst *GetEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentRequest.Merge(dst, src)
}
func (m *GetEnvironmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetEnvironmentRequest.Size(m)
}
func (m *GetEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentRequest proto.InternalMessageInfo

func (m *GetEnvironmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetEnvironmentRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListEnvironmentsRequest struct {
	// Internal use only. Auto populated field.
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEnvironmentsRequest) Reset()         { *m = ListEnvironmentsRequest{} }
func (m *ListEnvironmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEnvironmentsRequest) ProtoMessage()    {}
func (*ListEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{3}
}
func (m *ListEnvironmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEnvironmentsRequest.Unmarshal(m, b)
}
func (m *ListEnvironmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEnvironmentsRequest.Marshal(b, m, deterministic)
}
func (dst *ListEnvironmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEnvironmentsRequest.Merge(dst, src)
}
func (m *ListEnvironmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEnvironmentsRequest.Size(m)
}
func (m *ListEnvironmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEnvironmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEnvironmentsRequest proto.InternalMessageInfo

func (m *ListEnvironmentsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListEnvironmentsRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListEnvironmentsResponse struct {
	Environments         []*Environment `protobuf:"bytes,1,rep,name=environments,proto3" json:"environments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListEnvironmentsResponse) Reset()         { *m = ListEnvironmentsResponse{} }
func (m *ListEnvironmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListEnvironmentsResponse) ProtoMessage()    {}
func (*ListEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{4}
}
func (m *ListEnvironmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEnvironmentsResponse.Unmarshal(m, b)
}
func (m *ListEnvironmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEnvironmentsResponse.Marshal(b, m, deterministic)
}
func (dst *ListEnvironmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEnvironmentsResponse.Merge(dst, src)
}
func (m *ListEnvironmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListEnvironmentsResponse.Size(m)
}
func (m *ListEnvironmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEnvironmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEnvironmentsResponse proto.InternalMessageInfo

func (m *ListEnvironmentsResponse) GetEnvironments() []*Environment {
	if m != nil {
		return m.Environments
	}
	return nil
}

type DeleteEnvironmentRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEnvironmentRequest) Reset()         { *m = DeleteEnvironmentRequest{} }
func (m *DeleteEnvironmentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEnvironmentRequest) ProtoMessage()    {}
func (*DeleteEnvironmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{5}
}
func (m *DeleteEnvironmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEnvironmentRequest.Unmarshal(m, b)
}
func (m *DeleteEnvironmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEnvironmentRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteEnvironmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEnvironmentRequest.Merge(dst, src)
}
func (m *DeleteEnvironmentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEnvironmentRequest.Size(m)
}
func (m *DeleteEnvironmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEnvironmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEnvironmentRequest proto.InternalMessageInfo

func (m *DeleteEnvironmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteEnvironmentRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteEnvironmentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Application
//
// An Application is a collection of services. Each application corresponds to a kubernetes namespace or an application
// deployment on VMs. The hostname of the application is exposed via the load balancer (either shared or dedicated).
type Application struct {
	// Internal use only. Auto populated field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// Environment.Id.
	Environment string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	// short name for the application. Clusters are expected to have namespaces that match the application Id, especially
	// on Kubernetes.
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// Additional information.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Hostname with which the application is exposed on a Gateway.
	Hostname string `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// HTTP Routing settings for the applications. Note that subsets should not be defined at application level.
	RoutingInfo *RoutingInfo `protobuf:"bytes,7,opt,name=routing_info,json=routingInfo,proto3" json:"routing_info,omitempty"`
	// Resilience settings that apply to all services within the application, for outbound calls from the application's
	// services to other services.
	ClientSettings *ClientSettings `protobuf:"bytes,8,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	// An application can be exposed on a shared gateway in the cluster or a dedicated gateway in the app's namespace.
	// Set app_lb to indicate that the application should be exposed on the dedicated load balancer deployed in the app
	// namespace. It is assumed that the gateway service is deployed in the app's namespace.
	AppLb                *Application_ApplicationSpecificLB `protobuf:"bytes,9,opt,name=app_lb,json=appLb,proto3" json:"app_lb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{6}
}
func (m *Application) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application.Unmarshal(m, b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application.Marshal(b, m, deterministic)
}
func (dst *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(dst, src)
}
func (m *Application) XXX_Size() int {
	return xxx_messageInfo_Application.Size(m)
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Application) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Application) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Application) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Application) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Application) GetRoutingInfo() *RoutingInfo {
	if m != nil {
		return m.RoutingInfo
	}
	return nil
}

func (m *Application) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

func (m *Application) GetAppLb() *Application_ApplicationSpecificLB {
	if m != nil {
		return m.AppLb
	}
	return nil
}

type Application_ApplicationSpecificLB struct {
	// Load balancer deployment labels (Kubernetes only for now). If gateway was created using TCC helm charts, use tcc:
	// appgateway for kubernetes. The gateway will expose the application on ports 80 and 443 (if tls is configured).
	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// TLS certificate info for the application. If nil, the gateway will expose the application on port 80 only.
	// Internal use only. Auto populated.
	Tls                  *TLSSettings `protobuf:"bytes,2,opt,name=tls,proto3" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Application_ApplicationSpecificLB) Reset()         { *m = Application_ApplicationSpecificLB{} }
func (m *Application_ApplicationSpecificLB) String() string { return proto.CompactTextString(m) }
func (*Application_ApplicationSpecificLB) ProtoMessage()    {}
func (*Application_ApplicationSpecificLB) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{6, 0}
}
func (m *Application_ApplicationSpecificLB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Application_ApplicationSpecificLB.Unmarshal(m, b)
}
func (m *Application_ApplicationSpecificLB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Application_ApplicationSpecificLB.Marshal(b, m, deterministic)
}
func (dst *Application_ApplicationSpecificLB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application_ApplicationSpecificLB.Merge(dst, src)
}
func (m *Application_ApplicationSpecificLB) XXX_Size() int {
	return xxx_messageInfo_Application_ApplicationSpecificLB.Size(m)
}
func (m *Application_ApplicationSpecificLB) XXX_DiscardUnknown() {
	xxx_messageInfo_Application_ApplicationSpecificLB.DiscardUnknown(m)
}

var xxx_messageInfo_Application_ApplicationSpecificLB proto.InternalMessageInfo

func (m *Application_ApplicationSpecificLB) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Application_ApplicationSpecificLB) GetTls() *TLSSettings {
	if m != nil {
		return m.Tls
	}
	return nil
}

type CreateApplicationRequest struct {
	// Internal use only. Auto populated field.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// Environment.Id.
	Environment string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	// short name for the application. Clusters are expected to have namespaces that match the application Id, especially
	// on Kubernetes. If present, this will be used as the id for the created object.
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// Additional information.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Hostname with which the application is exposed on a Gateway.
	Hostname string `protobuf:"bytes,6,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// HTTP Routing settings for the applications. Note that subsets should not be defined at application level.
	RoutingInfo *RoutingInfo `protobuf:"bytes,7,opt,name=routing_info,json=routingInfo,proto3" json:"routing_info,omitempty"`
	// Resilience settings that apply to all services within the application, for outbound calls from the application's
	// services to other services.
	ClientSettings *ClientSettings `protobuf:"bytes,8,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	// An application can be exposed on a shared gateway in the cluster or a dedicated gateway in the app's namespace. Set
	// app_lb to indicate that the application should be exposed on the dedicated load balancer deployed in the app
	// namespace. It is assumed that the gateway service is deployed in the app's namespace.
	AppLb                *CreateApplicationRequest_ApplicationSpecificLB `protobuf:"bytes,9,opt,name=app_lb,json=appLb,proto3" json:"app_lb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *CreateApplicationRequest) Reset()         { *m = CreateApplicationRequest{} }
func (m *CreateApplicationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationRequest) ProtoMessage()    {}
func (*CreateApplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{7}
}
func (m *CreateApplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateApplicationRequest.Unmarshal(m, b)
}
func (m *CreateApplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateApplicationRequest.Marshal(b, m, deterministic)
}
func (dst *CreateApplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationRequest.Merge(dst, src)
}
func (m *CreateApplicationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateApplicationRequest.Size(m)
}
func (m *CreateApplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationRequest proto.InternalMessageInfo

func (m *CreateApplicationRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateApplicationRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateApplicationRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateApplicationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateApplicationRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateApplicationRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateApplicationRequest) GetRoutingInfo() *RoutingInfo {
	if m != nil {
		return m.RoutingInfo
	}
	return nil
}

func (m *CreateApplicationRequest) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

func (m *CreateApplicationRequest) GetAppLb() *CreateApplicationRequest_ApplicationSpecificLB {
	if m != nil {
		return m.AppLb
	}
	return nil
}

type CreateApplicationRequest_ApplicationSpecificLB struct {
	// Load balancer deployment labels (Kubernetes only for now). If gateway was created using TCC helm charts, use tcc:
	// appgateway for kubernetes. The gateway will expose the application on ports 80 and 443 (if tls is configured).
	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// TLS certificate info for the application. If nil, the gateway will expose the application on port 80 only.
	// Internal use only. Auto populated.
	Tls                  *TLSSettings `protobuf:"bytes,2,opt,name=tls,proto3" json:"tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateApplicationRequest_ApplicationSpecificLB) Reset() {
	*m = CreateApplicationRequest_ApplicationSpecificLB{}
}
func (m *CreateApplicationRequest_ApplicationSpecificLB) String() string {
	return proto.CompactTextString(m)
}
func (*CreateApplicationRequest_ApplicationSpecificLB) ProtoMessage() {}
func (*CreateApplicationRequest_ApplicationSpecificLB) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{7, 0}
}
func (m *CreateApplicationRequest_ApplicationSpecificLB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB.Unmarshal(m, b)
}
func (m *CreateApplicationRequest_ApplicationSpecificLB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB.Marshal(b, m, deterministic)
}
func (dst *CreateApplicationRequest_ApplicationSpecificLB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB.Merge(dst, src)
}
func (m *CreateApplicationRequest_ApplicationSpecificLB) XXX_Size() int {
	return xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB.Size(m)
}
func (m *CreateApplicationRequest_ApplicationSpecificLB) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationRequest_ApplicationSpecificLB proto.InternalMessageInfo

func (m *CreateApplicationRequest_ApplicationSpecificLB) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateApplicationRequest_ApplicationSpecificLB) GetTls() *TLSSettings {
	if m != nil {
		return m.Tls
	}
	return nil
}

type GetApplicationRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetApplicationRequest) Reset()         { *m = GetApplicationRequest{} }
func (m *GetApplicationRequest) String() string { return proto.CompactTextString(m) }
func (*GetApplicationRequest) ProtoMessage()    {}
func (*GetApplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{8}
}
func (m *GetApplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetApplicationRequest.Unmarshal(m, b)
}
func (m *GetApplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetApplicationRequest.Marshal(b, m, deterministic)
}
func (dst *GetApplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationRequest.Merge(dst, src)
}
func (m *GetApplicationRequest) XXX_Size() int {
	return xxx_messageInfo_GetApplicationRequest.Size(m)
}
func (m *GetApplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationRequest proto.InternalMessageInfo

func (m *GetApplicationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetApplicationRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetApplicationRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *GetApplicationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListApplicationsRequest struct {
	// Internal use only. Auto populated field.
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListApplicationsRequest) Reset()         { *m = ListApplicationsRequest{} }
func (m *ListApplicationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListApplicationsRequest) ProtoMessage()    {}
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{9}
}
func (m *ListApplicationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApplicationsRequest.Unmarshal(m, b)
}
func (m *ListApplicationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApplicationsRequest.Marshal(b, m, deterministic)
}
func (dst *ListApplicationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApplicationsRequest.Merge(dst, src)
}
func (m *ListApplicationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListApplicationsRequest.Size(m)
}
func (m *ListApplicationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApplicationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListApplicationsRequest proto.InternalMessageInfo

func (m *ListApplicationsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListApplicationsRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListApplicationsRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type ListApplicationsResponse struct {
	Applications         []*Application `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListApplicationsResponse) Reset()         { *m = ListApplicationsResponse{} }
func (m *ListApplicationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListApplicationsResponse) ProtoMessage()    {}
func (*ListApplicationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{10}
}
func (m *ListApplicationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListApplicationsResponse.Unmarshal(m, b)
}
func (m *ListApplicationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListApplicationsResponse.Marshal(b, m, deterministic)
}
func (dst *ListApplicationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListApplicationsResponse.Merge(dst, src)
}
func (m *ListApplicationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListApplicationsResponse.Size(m)
}
func (m *ListApplicationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListApplicationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListApplicationsResponse proto.InternalMessageInfo

func (m *ListApplicationsResponse) GetApplications() []*Application {
	if m != nil {
		return m.Applications
	}
	return nil
}

type DeleteApplicationRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteApplicationRequest) Reset()         { *m = DeleteApplicationRequest{} }
func (m *DeleteApplicationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteApplicationRequest) ProtoMessage()    {}
func (*DeleteApplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{11}
}
func (m *DeleteApplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteApplicationRequest.Unmarshal(m, b)
}
func (m *DeleteApplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteApplicationRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteApplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteApplicationRequest.Merge(dst, src)
}
func (m *DeleteApplicationRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteApplicationRequest.Size(m)
}
func (m *DeleteApplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteApplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteApplicationRequest proto.InternalMessageInfo

func (m *DeleteApplicationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteApplicationRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteApplicationRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *DeleteApplicationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Service struct {
	// Internal use only. Auto populated field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// Environment.Id.
	Environment string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	// Application.Id.
	Application string `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	// Short name for the service. Clusters are expected to have namespaces that match the application, and services that
	// match the Id, especially on Kubernetes.
	Id          string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// FQDN hostname of the service.
	Hostname string `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// User identifiable tags associated with this service.
	Labels map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports  []*Port           `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	// HTTP Routing settings for the service. Note that subsets (versions of the service) if any should be defined here.
	RoutingInfo          *RoutingInfo `protobuf:"bytes,10,opt,name=routing_info,json=routingInfo,proto3" json:"routing_info,omitempty"`
	Etag                 string       `protobuf:"bytes,11,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{12}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *Service) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Service) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Service) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Service) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service) GetRoutingInfo() *RoutingInfo {
	if m != nil {
		return m.RoutingInfo
	}
	return nil
}

func (m *Service) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

type CreateServiceRequest struct {
	// Internal use only. Auto populated field.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// Environment.Id.
	Environment string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	// Application.Id.
	Application string `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	// If present, this will be used as the id for the created object.
	Id          string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// FQDN hostname of the service.
	Hostname string `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// User identifiable tags associated with this service.
	Labels map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports  []*Port           `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	// HTTP Routing settings for the service. Note that subsets (versions of the service) if any should be defined here.
	RoutingInfo          *RoutingInfo `protobuf:"bytes,10,opt,name=routing_info,json=routingInfo,proto3" json:"routing_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateServiceRequest) Reset()         { *m = CreateServiceRequest{} }
func (m *CreateServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceRequest) ProtoMessage()    {}
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{13}
}
func (m *CreateServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceRequest.Unmarshal(m, b)
}
func (m *CreateServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceRequest.Merge(dst, src)
}
func (m *CreateServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceRequest.Size(m)
}
func (m *CreateServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceRequest proto.InternalMessageInfo

func (m *CreateServiceRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateServiceRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateServiceRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *CreateServiceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateServiceRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateServiceRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateServiceRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateServiceRequest) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *CreateServiceRequest) GetRoutingInfo() *RoutingInfo {
	if m != nil {
		return m.RoutingInfo
	}
	return nil
}

type GetServiceRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Application          string   `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{14}
}
func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (dst *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(dst, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetServiceRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *GetServiceRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *GetServiceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListServicesRequest struct {
	// Internal use only. Auto populated field.
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Application          string   `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesRequest) Reset()         { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()    {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{15}
}
func (m *ListServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesRequest.Unmarshal(m, b)
}
func (m *ListServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesRequest.Marshal(b, m, deterministic)
}
func (dst *ListServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesRequest.Merge(dst, src)
}
func (m *ListServicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListServicesRequest.Size(m)
}
func (m *ListServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesRequest proto.InternalMessageInfo

func (m *ListServicesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListServicesRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListServicesRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ListServicesRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

type ListServicesResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{16}
}
func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesResponse.Unmarshal(m, b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
}
func (dst *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(dst, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListServicesResponse.Size(m)
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

func (m *ListServicesResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type DeleteServiceRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Application          string   `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceRequest) Reset()         { *m = DeleteServiceRequest{} }
func (m *DeleteServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceRequest) ProtoMessage()    {}
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{17}
}
func (m *DeleteServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceRequest.Unmarshal(m, b)
}
func (m *DeleteServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceRequest.Merge(dst, src)
}
func (m *DeleteServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceRequest.Size(m)
}
func (m *DeleteServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceRequest proto.InternalMessageInfo

func (m *DeleteServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteServiceRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *DeleteServiceRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *DeleteServiceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LoadBalancer struct {
	// Internal use only. Auto populated field.
	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant            string            `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment       string            `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Id                string            `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Description       string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	EnableWorkflows   bool              `protobuf:"varint,6,opt,name=enable_workflows,json=enableWorkflows,proto3" json:"enable_workflows,omitempty"`
	LoadBalancerClass LoadBalancerClass `protobuf:"varint,7,opt,name=load_balancer_class,json=loadBalancerClass,proto3,enum=tetrate.api.tcc.core.v1.LoadBalancerClass" json:"load_balancer_class,omitempty"`
	Registry          Registry          `protobuf:"varint,8,opt,name=registry,proto3,enum=tetrate.api.tcc.core.v1.Registry" json:"registry,omitempty"`
	// The namespace where the load balancer is/will be deployed in a given cluster.
	ClusterNamespace string `protobuf:"bytes,9,opt,name=cluster_namespace,json=clusterNamespace,proto3" json:"cluster_namespace,omitempty"`
	// Labels that uniquely identify the cluster loadbalancer. If cluster level gateway was deployed using TCC helm
	// charts, set this field to tcc: clustergateway.
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of applications attached to this loadbalancer in the form applicationId: TLS credential information.
	Applications map[string]*TLSSettings `protobuf:"bytes,11,rep,name=applications,proto3" json:"applications,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Client settings are applicable for traffic from the load balancer's cluster namespace to the application's
	// namespaces.
	ClientSettings       *ClientSettings `protobuf:"bytes,12,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	Etag                 string          `protobuf:"bytes,13,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoadBalancer) Reset()         { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()    {}
func (*LoadBalancer) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{18}
}
func (m *LoadBalancer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalancer.Unmarshal(m, b)
}
func (m *LoadBalancer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalancer.Marshal(b, m, deterministic)
}
func (dst *LoadBalancer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalancer.Merge(dst, src)
}
func (m *LoadBalancer) XXX_Size() int {
	return xxx_messageInfo_LoadBalancer.Size(m)
}
func (m *LoadBalancer) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalancer.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalancer proto.InternalMessageInfo

func (m *LoadBalancer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoadBalancer) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *LoadBalancer) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *LoadBalancer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LoadBalancer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *LoadBalancer) GetEnableWorkflows() bool {
	if m != nil {
		return m.EnableWorkflows
	}
	return false
}

func (m *LoadBalancer) GetLoadBalancerClass() LoadBalancerClass {
	if m != nil {
		return m.LoadBalancerClass
	}
	return LoadBalancerClass_NONE
}

func (m *LoadBalancer) GetRegistry() Registry {
	if m != nil {
		return m.Registry
	}
	return Registry_UNKNOWN
}

func (m *LoadBalancer) GetClusterNamespace() string {
	if m != nil {
		return m.ClusterNamespace
	}
	return ""
}

func (m *LoadBalancer) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *LoadBalancer) GetApplications() map[string]*TLSSettings {
	if m != nil {
		return m.Applications
	}
	return nil
}

func (m *LoadBalancer) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

func (m *LoadBalancer) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

type CreateLoadBalancerRequest struct {
	// Internal use only. Auto populated field.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Tenant.Id.
	Tenant string `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// Environment.Id.
	Environment string `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	// If present, this will be used as the id for the created object.
	Id                string            `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Description       string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	EnableWorkflows   bool              `protobuf:"varint,6,opt,name=enable_workflows,json=enableWorkflows,proto3" json:"enable_workflows,omitempty"`
	LoadBalancerClass LoadBalancerClass `protobuf:"varint,7,opt,name=load_balancer_class,json=loadBalancerClass,proto3,enum=tetrate.api.tcc.core.v1.LoadBalancerClass" json:"load_balancer_class,omitempty"`
	Registry          Registry          `protobuf:"varint,8,opt,name=registry,proto3,enum=tetrate.api.tcc.core.v1.Registry" json:"registry,omitempty"`
	// The namespace where the load balancer is/will be deployed in a given cluster.
	ClusterNamespace string `protobuf:"bytes,9,opt,name=cluster_namespace,json=clusterNamespace,proto3" json:"cluster_namespace,omitempty"`
	// Labels that uniquely identify the cluster loadbalancer. If cluster level gateway was deployed using TCC helm
	// charts, set this field to tcc: clustergateway.
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of applications attached to this loadbalancer in the form applicationId: TLS credential information.
	Applications map[string]*TLSSettings `protobuf:"bytes,11,rep,name=applications,proto3" json:"applications,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Client settings are applicable for traffic from the load balancer's cluster namespace to the application's
	// namespaces.
	ClientSettings       *ClientSettings `protobuf:"bytes,12,opt,name=client_settings,json=clientSettings,proto3" json:"client_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateLoadBalancerRequest) Reset()         { *m = CreateLoadBalancerRequest{} }
func (m *CreateLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLoadBalancerRequest) ProtoMessage()    {}
func (*CreateLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{19}
}
func (m *CreateLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLoadBalancerRequest.Unmarshal(m, b)
}
func (m *CreateLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *CreateLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLoadBalancerRequest.Merge(dst, src)
}
func (m *CreateLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLoadBalancerRequest.Size(m)
}
func (m *CreateLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLoadBalancerRequest proto.InternalMessageInfo

func (m *CreateLoadBalancerRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetEnableWorkflows() bool {
	if m != nil {
		return m.EnableWorkflows
	}
	return false
}

func (m *CreateLoadBalancerRequest) GetLoadBalancerClass() LoadBalancerClass {
	if m != nil {
		return m.LoadBalancerClass
	}
	return LoadBalancerClass_NONE
}

func (m *CreateLoadBalancerRequest) GetRegistry() Registry {
	if m != nil {
		return m.Registry
	}
	return Registry_UNKNOWN
}

func (m *CreateLoadBalancerRequest) GetClusterNamespace() string {
	if m != nil {
		return m.ClusterNamespace
	}
	return ""
}

func (m *CreateLoadBalancerRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateLoadBalancerRequest) GetApplications() map[string]*TLSSettings {
	if m != nil {
		return m.Applications
	}
	return nil
}

func (m *CreateLoadBalancerRequest) GetClientSettings() *ClientSettings {
	if m != nil {
		return m.ClientSettings
	}
	return nil
}

type GetLoadBalancerRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLoadBalancerRequest) Reset()         { *m = GetLoadBalancerRequest{} }
func (m *GetLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*GetLoadBalancerRequest) ProtoMessage()    {}
func (*GetLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{20}
}
func (m *GetLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLoadBalancerRequest.Unmarshal(m, b)
}
func (m *GetLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *GetLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLoadBalancerRequest.Merge(dst, src)
}
func (m *GetLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_GetLoadBalancerRequest.Size(m)
}
func (m *GetLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLoadBalancerRequest proto.InternalMessageInfo

func (m *GetLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *GetLoadBalancerRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *GetLoadBalancerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListLoadBalancersRequest struct {
	// Internal use only. Auto populated field.
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLoadBalancersRequest) Reset()         { *m = ListLoadBalancersRequest{} }
func (m *ListLoadBalancersRequest) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancersRequest) ProtoMessage()    {}
func (*ListLoadBalancersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{21}
}
func (m *ListLoadBalancersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancersRequest.Unmarshal(m, b)
}
func (m *ListLoadBalancersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancersRequest.Marshal(b, m, deterministic)
}
func (dst *ListLoadBalancersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancersRequest.Merge(dst, src)
}
func (m *ListLoadBalancersRequest) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancersRequest.Size(m)
}
func (m *ListLoadBalancersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancersRequest proto.InternalMessageInfo

func (m *ListLoadBalancersRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListLoadBalancersRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListLoadBalancersRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type ListLoadBalancersResponse struct {
	Loadbalancers        []*LoadBalancer `protobuf:"bytes,1,rep,name=loadbalancers,proto3" json:"loadbalancers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListLoadBalancersResponse) Reset()         { *m = ListLoadBalancersResponse{} }
func (m *ListLoadBalancersResponse) String() string { return proto.CompactTextString(m) }
func (*ListLoadBalancersResponse) ProtoMessage()    {}
func (*ListLoadBalancersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{22}
}
func (m *ListLoadBalancersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLoadBalancersResponse.Unmarshal(m, b)
}
func (m *ListLoadBalancersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLoadBalancersResponse.Marshal(b, m, deterministic)
}
func (dst *ListLoadBalancersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLoadBalancersResponse.Merge(dst, src)
}
func (m *ListLoadBalancersResponse) XXX_Size() int {
	return xxx_messageInfo_ListLoadBalancersResponse.Size(m)
}
func (m *ListLoadBalancersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLoadBalancersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLoadBalancersResponse proto.InternalMessageInfo

func (m *ListLoadBalancersResponse) GetLoadbalancers() []*LoadBalancer {
	if m != nil {
		return m.Loadbalancers
	}
	return nil
}

type DeleteLoadBalancerRequest struct {
	// Internal use only. Auto populated field.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLoadBalancerRequest) Reset()         { *m = DeleteLoadBalancerRequest{} }
func (m *DeleteLoadBalancerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLoadBalancerRequest) ProtoMessage()    {}
func (*DeleteLoadBalancerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_logical_resources_ce4a20628af2b9c7, []int{23}
}
func (m *DeleteLoadBalancerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Unmarshal(m, b)
}
func (m *DeleteLoadBalancerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteLoadBalancerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLoadBalancerRequest.Merge(dst, src)
}
func (m *DeleteLoadBalancerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLoadBalancerRequest.Size(m)
}
func (m *DeleteLoadBalancerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLoadBalancerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLoadBalancerRequest proto.InternalMessageInfo

func (m *DeleteLoadBalancerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteLoadBalancerRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *DeleteLoadBalancerRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *DeleteLoadBalancerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Environment)(nil), "tetrate.api.tcc.core.v1.Environment")
	proto.RegisterType((*CreateEnvironmentRequest)(nil), "tetrate.api.tcc.core.v1.CreateEnvironmentRequest")
	proto.RegisterType((*GetEnvironmentRequest)(nil), "tetrate.api.tcc.core.v1.GetEnvironmentRequest")
	proto.RegisterType((*ListEnvironmentsRequest)(nil), "tetrate.api.tcc.core.v1.ListEnvironmentsRequest")
	proto.RegisterType((*ListEnvironmentsResponse)(nil), "tetrate.api.tcc.core.v1.ListEnvironmentsResponse")
	proto.RegisterType((*DeleteEnvironmentRequest)(nil), "tetrate.api.tcc.core.v1.DeleteEnvironmentRequest")
	proto.RegisterType((*Application)(nil), "tetrate.api.tcc.core.v1.Application")
	proto.RegisterType((*Application_ApplicationSpecificLB)(nil), "tetrate.api.tcc.core.v1.Application.ApplicationSpecificLB")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.Application.ApplicationSpecificLB.LabelsEntry")
	proto.RegisterType((*CreateApplicationRequest)(nil), "tetrate.api.tcc.core.v1.CreateApplicationRequest")
	proto.RegisterType((*CreateApplicationRequest_ApplicationSpecificLB)(nil), "tetrate.api.tcc.core.v1.CreateApplicationRequest.ApplicationSpecificLB")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.CreateApplicationRequest.ApplicationSpecificLB.LabelsEntry")
	proto.RegisterType((*GetApplicationRequest)(nil), "tetrate.api.tcc.core.v1.GetApplicationRequest")
	proto.RegisterType((*ListApplicationsRequest)(nil), "tetrate.api.tcc.core.v1.ListApplicationsRequest")
	proto.RegisterType((*ListApplicationsResponse)(nil), "tetrate.api.tcc.core.v1.ListApplicationsResponse")
	proto.RegisterType((*DeleteApplicationRequest)(nil), "tetrate.api.tcc.core.v1.DeleteApplicationRequest")
	proto.RegisterType((*Service)(nil), "tetrate.api.tcc.core.v1.Service")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.Service.LabelsEntry")
	proto.RegisterType((*CreateServiceRequest)(nil), "tetrate.api.tcc.core.v1.CreateServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.CreateServiceRequest.LabelsEntry")
	proto.RegisterType((*GetServiceRequest)(nil), "tetrate.api.tcc.core.v1.GetServiceRequest")
	proto.RegisterType((*ListServicesRequest)(nil), "tetrate.api.tcc.core.v1.ListServicesRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "tetrate.api.tcc.core.v1.ListServicesResponse")
	proto.RegisterType((*DeleteServiceRequest)(nil), "tetrate.api.tcc.core.v1.DeleteServiceRequest")
	proto.RegisterType((*LoadBalancer)(nil), "tetrate.api.tcc.core.v1.LoadBalancer")
	proto.RegisterMapType((map[string]*TLSSettings)(nil), "tetrate.api.tcc.core.v1.LoadBalancer.ApplicationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.LoadBalancer.LabelsEntry")
	proto.RegisterType((*CreateLoadBalancerRequest)(nil), "tetrate.api.tcc.core.v1.CreateLoadBalancerRequest")
	proto.RegisterMapType((map[string]*TLSSettings)(nil), "tetrate.api.tcc.core.v1.CreateLoadBalancerRequest.ApplicationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.tcc.core.v1.CreateLoadBalancerRequest.LabelsEntry")
	proto.RegisterType((*GetLoadBalancerRequest)(nil), "tetrate.api.tcc.core.v1.GetLoadBalancerRequest")
	proto.RegisterType((*ListLoadBalancersRequest)(nil), "tetrate.api.tcc.core.v1.ListLoadBalancersRequest")
	proto.RegisterType((*ListLoadBalancersResponse)(nil), "tetrate.api.tcc.core.v1.ListLoadBalancersResponse")
	proto.RegisterType((*DeleteLoadBalancerRequest)(nil), "tetrate.api.tcc.core.v1.DeleteLoadBalancerRequest")
	proto.RegisterEnum("tetrate.api.tcc.core.v1.LoadBalancerClass", LoadBalancerClass_name, LoadBalancerClass_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogicalResourceModelClient is the client API for LogicalResourceModel service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicalResourceModelClient interface {
	CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*Environment, error)
	GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*Environment, error)
	UpdateEnvironment(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error)
	ListEnvironments(ctx context.Context, in *ListEnvironmentsRequest, opts ...grpc.CallOption) (*ListEnvironmentsResponse, error)
	DeleteEnvironment(ctx context.Context, in *DeleteEnvironmentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*Application, error)
	GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error)
	UpdateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error)
	ListApplications(ctx context.Context, in *ListApplicationsRequest, opts ...grpc.CallOption) (*ListApplicationsResponse, error)
	DeleteApplication(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*Service, error)
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error)
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	UpdateService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error)
	DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateLoadBalancer(ctx context.Context, in *CreateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error)
	GetLoadBalancer(ctx context.Context, in *GetLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error)
	ListLoadBalancers(ctx context.Context, in *ListLoadBalancersRequest, opts ...grpc.CallOption) (*ListLoadBalancersResponse, error)
	UpdateLoadBalancer(ctx context.Context, in *LoadBalancer, opts ...grpc.CallOption) (*LoadBalancer, error)
	DeleteLoadBalancer(ctx context.Context, in *DeleteLoadBalancerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type logicalResourceModelClient struct {
	cc *grpc.ClientConn
}

func NewLogicalResourceModelClient(cc *grpc.ClientConn) LogicalResourceModelClient {
	return &logicalResourceModelClient{cc}
}

func (c *logicalResourceModelClient) CreateEnvironment(ctx context.Context, in *CreateEnvironmentRequest, opts ...grpc.CallOption) (*Environment, error) {
	out := new(Environment)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) GetEnvironment(ctx context.Context, in *GetEnvironmentRequest, opts ...grpc.CallOption) (*Environment, error) {
	out := new(Environment)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) UpdateEnvironment(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error) {
	out := new(Environment)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) ListEnvironments(ctx context.Context, in *ListEnvironmentsRequest, opts ...grpc.CallOption) (*ListEnvironmentsResponse, error) {
	out := new(ListEnvironmentsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) DeleteEnvironment(ctx context.Context, in *DeleteEnvironmentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) CreateApplication(ctx context.Context, in *CreateApplicationRequest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) GetApplication(ctx context.Context, in *GetApplicationRequest, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) UpdateApplication(ctx context.Context, in *Application, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) ListApplications(ctx context.Context, in *ListApplicationsRequest, opts ...grpc.CallOption) (*ListApplicationsResponse, error) {
	out := new(ListApplicationsResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListApplications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) DeleteApplication(ctx context.Context, in *DeleteApplicationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) UpdateService(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) CreateLoadBalancer(ctx context.Context, in *CreateLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) GetLoadBalancer(ctx context.Context, in *GetLoadBalancerRequest, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) ListLoadBalancers(ctx context.Context, in *ListLoadBalancersRequest, opts ...grpc.CallOption) (*ListLoadBalancersResponse, error) {
	out := new(ListLoadBalancersResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListLoadBalancers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) UpdateLoadBalancer(ctx context.Context, in *LoadBalancer, opts ...grpc.CallOption) (*LoadBalancer, error) {
	out := new(LoadBalancer)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicalResourceModelClient) DeleteLoadBalancer(ctx context.Context, in *DeleteLoadBalancerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteLoadBalancer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicalResourceModelServer is the server API for LogicalResourceModel service.
type LogicalResourceModelServer interface {
	CreateEnvironment(context.Context, *CreateEnvironmentRequest) (*Environment, error)
	GetEnvironment(context.Context, *GetEnvironmentRequest) (*Environment, error)
	UpdateEnvironment(context.Context, *Environment) (*Environment, error)
	ListEnvironments(context.Context, *ListEnvironmentsRequest) (*ListEnvironmentsResponse, error)
	DeleteEnvironment(context.Context, *DeleteEnvironmentRequest) (*empty.Empty, error)
	CreateApplication(context.Context, *CreateApplicationRequest) (*Application, error)
	GetApplication(context.Context, *GetApplicationRequest) (*Application, error)
	UpdateApplication(context.Context, *Application) (*Application, error)
	ListApplications(context.Context, *ListApplicationsRequest) (*ListApplicationsResponse, error)
	DeleteApplication(context.Context, *DeleteApplicationRequest) (*empty.Empty, error)
	CreateService(context.Context, *CreateServiceRequest) (*Service, error)
	GetService(context.Context, *GetServiceRequest) (*Service, error)
	ListServices(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	UpdateService(context.Context, *Service) (*Service, error)
	DeleteService(context.Context, *DeleteServiceRequest) (*empty.Empty, error)
	CreateLoadBalancer(context.Context, *CreateLoadBalancerRequest) (*LoadBalancer, error)
	GetLoadBalancer(context.Context, *GetLoadBalancerRequest) (*LoadBalancer, error)
	ListLoadBalancers(context.Context, *ListLoadBalancersRequest) (*ListLoadBalancersResponse, error)
	UpdateLoadBalancer(context.Context, *LoadBalancer) (*LoadBalancer, error)
	DeleteLoadBalancer(context.Context, *DeleteLoadBalancerRequest) (*empty.Empty, error)
}

func RegisterLogicalResourceModelServer(s *grpc.Server, srv LogicalResourceModelServer) {
	s.RegisterService(&_LogicalResourceModel_serviceDesc, srv)
}

func _LogicalResourceModel_CreateEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).CreateEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).CreateEnvironment(ctx, req.(*CreateEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_GetEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).GetEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).GetEnvironment(ctx, req.(*GetEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_UpdateEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Environment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).UpdateEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).UpdateEnvironment(ctx, req.(*Environment))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_ListEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).ListEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).ListEnvironments(ctx, req.(*ListEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_DeleteEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEnvironmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).DeleteEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).DeleteEnvironment(ctx, req.(*DeleteEnvironmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).CreateApplication(ctx, req.(*CreateApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).GetApplication(ctx, req.(*GetApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_UpdateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Application)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).UpdateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).UpdateApplication(ctx, req.(*Application))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApplicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).ListApplications(ctx, req.(*ListApplicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_DeleteApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).DeleteApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).DeleteApplication(ctx, req.(*DeleteApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).CreateService(ctx, req.(*CreateServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_UpdateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).UpdateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).UpdateService(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).DeleteService(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_CreateLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).CreateLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/CreateLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).CreateLoadBalancer(ctx, req.(*CreateLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_GetLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).GetLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/GetLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).GetLoadBalancer(ctx, req.(*GetLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_ListLoadBalancers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLoadBalancersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).ListLoadBalancers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/ListLoadBalancers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).ListLoadBalancers(ctx, req.(*ListLoadBalancersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_UpdateLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadBalancer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).UpdateLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/UpdateLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).UpdateLoadBalancer(ctx, req.(*LoadBalancer))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicalResourceModel_DeleteLoadBalancer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLoadBalancerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicalResourceModelServer).DeleteLoadBalancer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.tcc.core.v1.LogicalResourceModel/DeleteLoadBalancer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicalResourceModelServer).DeleteLoadBalancer(ctx, req.(*DeleteLoadBalancerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogicalResourceModel_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.tcc.core.v1.LogicalResourceModel",
	HandlerType: (*LogicalResourceModelServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEnvironment",
			Handler:    _LogicalResourceModel_CreateEnvironment_Handler,
		},
		{
			MethodName: "GetEnvironment",
			Handler:    _LogicalResourceModel_GetEnvironment_Handler,
		},
		{
			MethodName: "UpdateEnvironment",
			Handler:    _LogicalResourceModel_UpdateEnvironment_Handler,
		},
		{
			MethodName: "ListEnvironments",
			Handler:    _LogicalResourceModel_ListEnvironments_Handler,
		},
		{
			MethodName: "DeleteEnvironment",
			Handler:    _LogicalResourceModel_DeleteEnvironment_Handler,
		},
		{
			MethodName: "CreateApplication",
			Handler:    _LogicalResourceModel_CreateApplication_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _LogicalResourceModel_GetApplication_Handler,
		},
		{
			MethodName: "UpdateApplication",
			Handler:    _LogicalResourceModel_UpdateApplication_Handler,
		},
		{
			MethodName: "ListApplications",
			Handler:    _LogicalResourceModel_ListApplications_Handler,
		},
		{
			MethodName: "DeleteApplication",
			Handler:    _LogicalResourceModel_DeleteApplication_Handler,
		},
		{
			MethodName: "CreateService",
			Handler:    _LogicalResourceModel_CreateService_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _LogicalResourceModel_GetService_Handler,
		},
		{
			MethodName: "ListServices",
			Handler:    _LogicalResourceModel_ListServices_Handler,
		},
		{
			MethodName: "UpdateService",
			Handler:    _LogicalResourceModel_UpdateService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _LogicalResourceModel_DeleteService_Handler,
		},
		{
			MethodName: "CreateLoadBalancer",
			Handler:    _LogicalResourceModel_CreateLoadBalancer_Handler,
		},
		{
			MethodName: "GetLoadBalancer",
			Handler:    _LogicalResourceModel_GetLoadBalancer_Handler,
		},
		{
			MethodName: "ListLoadBalancers",
			Handler:    _LogicalResourceModel_ListLoadBalancers_Handler,
		},
		{
			MethodName: "UpdateLoadBalancer",
			Handler:    _LogicalResourceModel_UpdateLoadBalancer_Handler,
		},
		{
			MethodName: "DeleteLoadBalancer",
			Handler:    _LogicalResourceModel_DeleteLoadBalancer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logical_resources.proto",
}

func init() {
	proto.RegisterFile("logical_resources.proto", fileDescriptor_logical_resources_ce4a20628af2b9c7)
}

var fileDescriptor_logical_resources_ce4a20628af2b9c7 = []byte{
	// 1799 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0xcf, 0x6f, 0x1b, 0x5b,
	0x15, 0x7e, 0xd7, 0xb1, 0x1d, 0xe7, 0x38, 0x49, 0xed, 0xfb, 0xd2, 0xc6, 0x99, 0xc7, 0x93, 0xd2,
	0x81, 0xf7, 0xc8, 0x73, 0x53, 0xbb, 0x4e, 0x45, 0xa1, 0x51, 0x29, 0xaa, 0x93, 0x34, 0x2d, 0x75,
	0xd3, 0xd6, 0x69, 0xa1, 0x14, 0x51, 0x33, 0x1e, 0xdf, 0x38, 0x43, 0x27, 0x33, 0xc3, 0xcc, 0x4d,
	0xaa, 0xa8, 0xca, 0x82, 0xb2, 0x47, 0x08, 0xa4, 0x22, 0xaa, 0xb2, 0x61, 0x07, 0x82, 0x05, 0x8b,
	0x4a, 0x80, 0x8a, 0x28, 0xac, 0xd8, 0x77, 0x85, 0xc4, 0x92, 0x0d, 0xff, 0x00, 0x3b, 0x24, 0x34,
	0x77, 0x66, 0x9c, 0xeb, 0xf1, 0x8c, 0x3d, 0x8e, 0x9d, 0x1f, 0x15, 0xec, 0x3c, 0x77, 0xee, 0xdc,
	0xfb, 0x9d, 0x73, 0xbe, 0xef, 0x9c, 0xfb, 0xc3, 0x30, 0xad, 0xea, 0x4d, 0x45, 0x96, 0xd4, 0x9a,
	0x49, 0x2c, 0x7d, 0xdb, 0x94, 0x89, 0x55, 0x30, 0x4c, 0x9d, 0xea, 0x78, 0x9a, 0x12, 0x6a, 0x4a,
	0x94, 0x14, 0x24, 0x43, 0x29, 0x50, 0x59, 0x2e, 0xc8, 0xba, 0x49, 0x0a, 0x3b, 0x25, 0xe1, 0x73,
	0x4d, 0x5d, 0x6f, 0xaa, 0xa4, 0x28, 0x19, 0x4a, 0x51, 0xd2, 0x34, 0x9d, 0x4a, 0x54, 0xd1, 0x35,
	0xf7, 0x33, 0xe1, 0x23, 0xf7, 0x2d, 0x7b, 0xaa, 0x6f, 0x6f, 0x14, 0xc9, 0x96, 0x41, 0x77, 0xdd,
	0x97, 0xd3, 0x3b, 0x92, 0xaa, 0x34, 0x24, 0x4a, 0x8a, 0xde, 0x0f, 0xf7, 0x05, 0x36, 0xf5, 0x6d,
	0xaa, 0x68, 0xcd, 0x9a, 0xa2, 0x6d, 0xe8, 0x6e, 0xdb, 0x69, 0x59, 0x55, 0x88, 0x46, 0x6b, 0x16,
	0xa1, 0xf6, 0x2b, 0x6f, 0x82, 0x2c, 0x55, 0xad, 0xf6, 0x26, 0xf1, 0x1d, 0x82, 0xf4, 0x8a, 0xb6,
	0xa3, 0x98, 0xba, 0xb6, 0x45, 0x34, 0x8a, 0x31, 0xc4, 0x35, 0x69, 0x8b, 0xe4, 0xd0, 0x2c, 0x9a,
	0x1b, 0xab, 0xb2, 0xdf, 0xf8, 0x2c, 0x24, 0x29, 0xd1, 0x24, 0x8d, 0xe6, 0x62, 0x76, 0x6b, 0x79,
	0xec, 0x8f, 0xff, 0x7a, 0x3b, 0x12, 0x37, 0x63, 0x19, 0x54, 0x75, 0x5f, 0xe0, 0x19, 0x88, 0x29,
	0x8d, 0xdc, 0x88, 0xff, 0x75, 0x4c, 0x69, 0xe0, 0x59, 0x48, 0x37, 0x88, 0x25, 0x9b, 0x8a, 0x61,
	0xdb, 0x9a, 0x8b, 0xb3, 0x81, 0xf9, 0x26, 0x7c, 0x17, 0x4e, 0xf9, 0xf0, 0xe6, 0x12, 0xb3, 0x68,
	0x2e, 0xbd, 0xf0, 0xc5, 0x42, 0x88, 0x23, 0x0b, 0x4b, 0xac, 0xff, 0xba, 0xdb, 0xbd, 0x3a, 0x29,
	0xb7, 0x3d, 0x8b, 0x7f, 0x47, 0x90, 0x5b, 0x32, 0x89, 0x44, 0x09, 0x67, 0x5b, 0x95, 0x7c, 0x7f,
	0x9b, 0x58, 0x14, 0x9f, 0x81, 0xa4, 0x21, 0x99, 0x44, 0xa3, 0xae, 0x91, 0xee, 0x53, 0x14, 0x33,
	0x27, 0xf7, 0xcd, 0x3c, 0x36, 0xdb, 0x14, 0x38, 0xbd, 0x4a, 0x68, 0x80, 0x5d, 0x43, 0x0f, 0x9d,
	0x78, 0x1f, 0xa6, 0x2b, 0x8a, 0xc5, 0xcf, 0x65, 0x0d, 0xee, 0x44, 0xb1, 0x01, 0xb9, 0xce, 0x51,
	0x2d, 0x43, 0xd7, 0x2c, 0x82, 0x6f, 0xc0, 0x38, 0xe1, 0xda, 0x73, 0x68, 0x76, 0x64, 0x2e, 0xbd,
	0xf0, 0x85, 0x50, 0x5f, 0xf1, 0x6e, 0x68, 0xfb, 0x52, 0x54, 0x21, 0xb7, 0x4c, 0x54, 0x12, 0xc8,
	0x80, 0xe1, 0x7b, 0xea, 0x4d, 0x02, 0xd2, 0xd7, 0x0c, 0x43, 0x55, 0x64, 0xa6, 0xe8, 0x83, 0xce,
	0x70, 0x0e, 0xd2, 0x9c, 0x11, 0x9d, 0x53, 0xf1, 0x6f, 0x5d, 0x38, 0xf1, 0x08, 0x9a, 0x4b, 0x74,
	0xf2, 0xf2, 0x13, 0x48, 0x6d, 0xea, 0x16, 0x65, 0x20, 0x93, 0xfe, 0x21, 0x5a, 0xaf, 0xf0, 0x2a,
	0x8c, 0xf3, 0xe9, 0x25, 0x37, 0xca, 0xb8, 0x1b, 0x1e, 0x8f, 0xaa, 0xd3, 0xf9, 0xa6, 0xb6, 0xa1,
	0x57, 0xd3, 0xe6, 0xfe, 0x43, 0x90, 0x0e, 0x52, 0x03, 0xe9, 0x00, 0xdf, 0x83, 0xa4, 0x64, 0x18,
	0x35, 0xb5, 0x9e, 0x1b, 0x63, 0x03, 0x2d, 0x86, 0x0e, 0xc4, 0x05, 0x86, 0xff, 0xbd, 0x6e, 0x10,
	0x59, 0xd9, 0x50, 0xe4, 0x4a, 0xb9, 0x9a, 0x90, 0x0c, 0xa3, 0x52, 0x17, 0xfe, 0x8d, 0xe0, 0x74,
	0x60, 0x07, 0xfc, 0x3d, 0x48, 0xaa, 0x52, 0x9d, 0xa8, 0x1e, 0x23, 0xaf, 0x1f, 0x7c, 0xb2, 0x42,
	0x85, 0x0d, 0xb4, 0xa2, 0x51, 0x73, 0xb7, 0x0c, 0xb6, 0xd3, 0x13, 0x2f, 0x51, 0x2c, 0x85, 0xaa,
	0xee, 0x0c, 0xf8, 0x12, 0x8c, 0x50, 0xd5, 0x62, 0x24, 0xe9, 0xe6, 0xea, 0xfb, 0x95, 0xf5, 0x96,
	0x6f, 0xec, 0x0f, 0x84, 0xcb, 0x90, 0xe6, 0x86, 0xc6, 0x19, 0x18, 0x79, 0x42, 0x76, 0x5d, 0x06,
	0xda, 0x3f, 0xf1, 0x14, 0x24, 0x76, 0x24, 0x75, 0x9b, 0x38, 0xfc, 0xab, 0x3a, 0x0f, 0x8b, 0xb1,
	0xaf, 0x20, 0xf1, 0x1f, 0x09, 0x2f, 0x5f, 0x72, 0x90, 0x87, 0x90, 0x2f, 0xfb, 0xe2, 0xf3, 0xe4,
	0x3e, 0x9f, 0xff, 0x67, 0x48, 0xfc, 0xd8, 0x47, 0xe2, 0xd5, 0xf0, 0x81, 0x42, 0xc2, 0xd3, 0x9d,
	0xd1, 0x3f, 0x8c, 0x85, 0x31, 0xfa, 0xa9, 0x8f, 0xd1, 0xeb, 0x43, 0x9a, 0xf9, 0x24, 0xd2, 0xfb,
	0x05, 0x62, 0x35, 0x33, 0x80, 0xdb, 0xc7, 0x9b, 0xa7, 0xc5, 0x1f, 0x20, 0xa7, 0xc2, 0x72, 0xc8,
	0xac, 0x23, 0x96, 0x9d, 0x57, 0x8e, 0xdb, 0x21, 0xec, 0x97, 0x63, 0x89, 0x6b, 0xef, 0x59, 0x8e,
	0x79, 0x0f, 0xb7, 0x7d, 0x29, 0xfe, 0x1c, 0x79, 0xf5, 0xf8, 0xe4, 0x45, 0xe1, 0x55, 0x1c, 0x46,
	0xd7, 0x89, 0xb9, 0xa3, 0xc8, 0xe4, 0x48, 0xa0, 0x9c, 0x83, 0x34, 0xe7, 0x9b, 0x4e, 0x4c, 0xfc,
	0x5b, 0x17, 0x77, 0x22, 0x42, 0x95, 0x4f, 0x76, 0x4f, 0x90, 0xa3, 0xe1, 0x09, 0x72, 0xb9, 0x95,
	0x0b, 0x52, 0x2c, 0xc0, 0xf3, 0xa1, 0x01, 0x76, 0xdd, 0xc4, 0x8b, 0xbc, 0x25, 0xec, 0x8b, 0x90,
	0x30, 0x74, 0x93, 0x5a, 0xb9, 0x31, 0x36, 0xc8, 0xc7, 0xa1, 0x83, 0xdc, 0xd5, 0x4d, 0x5a, 0x75,
	0xfa, 0x76, 0xe4, 0x66, 0x38, 0x68, 0x6e, 0xfe, 0x18, 0xe2, 0x84, 0x4a, 0xcd, 0x5c, 0xda, 0x6f,
	0x26, 0x6b, 0x1e, 0x24, 0x7b, 0xfc, 0x38, 0x0e, 0x53, 0x4e, 0x0e, 0x74, 0xad, 0x3f, 0xea, 0xc2,
	0xd8, 0x17, 0x5f, 0x26, 0xf7, 0xf9, 0x32, 0x5c, 0x92, 0xdc, 0xf3, 0x91, 0xe4, 0x72, 0x8f, 0x82,
	0xd1, 0xee, 0xac, 0x93, 0xc7, 0x98, 0x41, 0x28, 0xf1, 0x67, 0x04, 0xd9, 0x55, 0x42, 0x7d, 0x7c,
	0x78, 0x8f, 0x72, 0x87, 0xf8, 0x6b, 0x04, 0x1f, 0xda, 0x69, 0xdf, 0x35, 0xc1, 0x3a, 0xc9, 0x9c,
	0x16, 0xef, 0xc3, 0x54, 0x3b, 0x56, 0xb7, 0x3c, 0x5d, 0x81, 0x94, 0xe5, 0xb6, 0xb9, 0xa5, 0x69,
	0xb6, 0x57, 0xe6, 0xaa, 0xb6, 0xbe, 0x10, 0xff, 0x8a, 0x60, 0xca, 0x29, 0x49, 0xef, 0x71, 0x1c,
	0x5f, 0x8d, 0xc2, 0x78, 0x45, 0x97, 0x1a, 0x65, 0x49, 0x95, 0x34, 0x99, 0x98, 0x27, 0x7f, 0xe7,
	0xf9, 0x19, 0x64, 0x88, 0x26, 0xd5, 0x55, 0x52, 0x7b, 0xaa, 0x9b, 0x4f, 0x36, 0x54, 0xfd, 0xa9,
	0xc5, 0xb2, 0x52, 0xaa, 0x7a, 0xca, 0x69, 0xff, 0xa6, 0xd7, 0x8c, 0x37, 0xe1, 0x43, 0x55, 0x97,
	0x1a, 0xb5, 0xba, 0x6b, 0x5c, 0x4d, 0x56, 0x25, 0xcb, 0x62, 0x49, 0x6a, 0x72, 0x21, 0x1f, 0x1a,
	0x6a, 0xde, 0x1f, 0x4b, 0xf6, 0x17, 0xe5, 0x71, 0x1b, 0xe4, 0xe8, 0x73, 0x14, 0xcf, 0xa0, 0xd9,
	0x0f, 0xaa, 0x59, 0xd5, 0xdf, 0x01, 0xdf, 0x82, 0x94, 0x49, 0x9a, 0x8a, 0x45, 0xcd, 0x5d, 0xb6,
	0xa4, 0x9f, 0x5c, 0x38, 0x1b, 0x9e, 0x50, 0xdc, 0x8e, 0xbe, 0x51, 0x5b, 0x03, 0xe0, 0x4b, 0x90,
	0x95, 0xd5, 0x6d, 0x8b, 0x12, 0xb3, 0x66, 0xbb, 0xdf, 0x32, 0x24, 0x99, 0xb0, 0xf5, 0x7d, 0x9b,
	0xb7, 0x32, 0x6e, 0x9f, 0x35, 0xaf, 0x0b, 0x7e, 0xd0, 0xca, 0xb0, 0xc0, 0xc8, 0x5c, 0x8a, 0x64,
	0x61, 0xcf, 0x05, 0x77, 0xd3, 0xb7, 0x88, 0x4b, 0xb3, 0xc1, 0xbf, 0x1c, 0x6d, 0x70, 0x7e, 0x59,
	0xe8, 0x9b, 0x22, 0x87, 0xda, 0xd7, 0x78, 0x41, 0xdb, 0xa3, 0xf1, 0xc1, 0xb6, 0x47, 0x5e, 0x51,
	0x9f, 0x18, 0x76, 0x51, 0x17, 0x08, 0x64, 0x3b, 0x4c, 0x0b, 0x18, 0x60, 0x91, 0x1f, 0x20, 0xea,
	0x76, 0x85, 0x2b, 0x14, 0xbf, 0x18, 0x85, 0x19, 0xa7, 0x1c, 0xf2, 0x5e, 0x3d, 0xf9, 0x3b, 0xeb,
	0xff, 0x8b, 0x34, 0x4c, 0xa4, 0x75, 0x9f, 0x48, 0xaf, 0xf6, 0x58, 0x06, 0x05, 0xc4, 0xbd, 0xa7,
	0x62, 0x69, 0xa0, 0x62, 0x97, 0x0f, 0x30, 0xd3, 0xb1, 0xca, 0xf7, 0x3d, 0xd0, 0xe7, 0xcf, 0x10,
	0x9c, 0x59, 0x25, 0x34, 0x48, 0x9c, 0xc7, 0xbc, 0x29, 0x7d, 0x8e, 0x9c, 0x7d, 0x39, 0x0f, 0xed,
	0xc8, 0xcf, 0x06, 0x36, 0x61, 0x26, 0x00, 0x83, 0xbb, 0xfa, 0xba, 0x05, 0x13, 0xb6, 0x46, 0x3d,
	0xdd, 0x7b, 0x4b, 0xb0, 0x4f, 0x22, 0x49, 0xbe, 0xda, 0xfe, 0xad, 0xf8, 0x12, 0xc1, 0x8c, 0xb3,
	0x18, 0x3b, 0x79, 0xb1, 0xc8, 0x5f, 0x80, 0x6c, 0x47, 0xba, 0xc2, 0x29, 0x88, 0xaf, 0xdd, 0x59,
	0x5b, 0xc9, 0x7c, 0x80, 0xc7, 0x20, 0xb1, 0xb2, 0xf6, 0x8d, 0x3b, 0xdf, 0xca, 0x20, 0x9c, 0x84,
	0xd8, 0xf5, 0x2f, 0x65, 0x62, 0x0b, 0xff, 0xf9, 0x08, 0xa6, 0x2a, 0xce, 0xed, 0x60, 0xd5, 0xbd,
	0x1c, 0xbc, 0xad, 0x37, 0x88, 0x8a, 0x5f, 0x22, 0xc8, 0x76, 0xdc, 0x4c, 0xe1, 0x52, 0x0f, 0x69,
	0x77, 0xde, 0x61, 0x08, 0x91, 0xee, 0x44, 0xc4, 0xf9, 0xe7, 0xef, 0xfe, 0xf9, 0xd3, 0xd8, 0xa7,
	0xe2, 0xd9, 0xe2, 0x4e, 0xa9, 0xe8, 0x78, 0xc5, 0x2a, 0x3e, 0x73, 0x7e, 0xec, 0x15, 0xf9, 0x0b,
	0x93, 0x45, 0x94, 0xc7, 0x2f, 0x10, 0x4c, 0xb6, 0xdf, 0x2d, 0xe1, 0x42, 0xe8, 0x34, 0x81, 0x97,
	0x50, 0x11, 0x61, 0x15, 0x18, 0xac, 0x39, 0xfc, 0x69, 0x4f, 0x58, 0xc5, 0x67, 0x4a, 0x63, 0x0f,
	0xff, 0x04, 0x41, 0xf6, 0x81, 0xd1, 0xf0, 0x79, 0x2d, 0xd2, 0x5c, 0x11, 0x11, 0x95, 0x18, 0xa2,
	0x73, 0x42, 0x44, 0x44, 0xb6, 0xb7, 0x7e, 0x89, 0x20, 0xe3, 0xbf, 0xc8, 0xc2, 0x17, 0xc2, 0xd9,
	0x1f, 0x7c, 0x93, 0x26, 0x94, 0xfa, 0xf8, 0xc2, 0x51, 0x9e, 0xf8, 0x19, 0x03, 0xfb, 0x79, 0xdc,
	0x3b, 0xaa, 0xf8, 0x47, 0x08, 0xb2, 0x1d, 0xf7, 0x60, 0x5d, 0xf8, 0x16, 0x76, 0x67, 0x26, 0x9c,
	0x29, 0x38, 0xb7, 0xd3, 0x05, 0xef, 0x76, 0xba, 0xb0, 0xb2, 0x65, 0xd0, 0x5d, 0x2f, 0x94, 0xf9,
	0xa8, 0xa1, 0x7c, 0xdd, 0x12, 0x00, 0x7f, 0x5f, 0x56, 0xea, 0xfb, 0xf4, 0x59, 0x88, 0x74, 0x0a,
	0x29, 0xae, 0x32, 0x78, 0xd7, 0xc4, 0x2b, 0x11, 0xe0, 0x71, 0x4f, 0x7b, 0x45, 0xbe, 0x34, 0xda,
	0xd1, 0xfe, 0x9d, 0xa3, 0x0d, 0x1e, 0x74, 0x57, 0x6d, 0x1c, 0x18, 0xf1, 0x4d, 0x86, 0x78, 0x09,
	0x5f, 0x1b, 0x04, 0xb1, 0xe3, 0xeb, 0xdf, 0xb6, 0x64, 0xc3, 0xc3, 0x8e, 0x04, 0x23, 0x22, 0xd8,
	0x0a, 0x03, 0x7b, 0x5d, 0x18, 0x1c, 0xac, 0xed, 0xe3, 0x3f, 0xb9, 0x8a, 0xe2, 0x2b, 0x7f, 0x0f,
	0x45, 0x05, 0x9c, 0x9c, 0xf7, 0x50, 0x54, 0xd0, 0x41, 0xb7, 0xb8, 0xcc, 0xec, 0xb8, 0x8a, 0x07,
	0xa2, 0x09, 0xfe, 0x55, 0x4b, 0x6c, 0xd1, 0xb8, 0x1d, 0x76, 0x20, 0x1e, 0x2a, 0x36, 0x97, 0x1b,
	0xf9, 0x21, 0x70, 0xe3, 0x2d, 0x82, 0x89, 0xb6, 0x83, 0x3a, 0x7c, 0xbe, 0xaf, 0x03, 0x3d, 0xa1,
	0xe7, 0x51, 0x8b, 0xf8, 0x98, 0xa1, 0x7d, 0x28, 0xae, 0x0f, 0x86, 0x96, 0x7b, 0xda, 0x2b, 0x7a,
	0xa7, 0x37, 0x36, 0x5d, 0xde, 0x20, 0x80, 0xfd, 0x53, 0x38, 0x9c, 0xef, 0x26, 0xc7, 0xbe, 0xc1,
	0x7f, 0x97, 0x81, 0x7f, 0x84, 0x1f, 0x1e, 0x02, 0x78, 0x27, 0x02, 0x7f, 0x43, 0x30, 0xce, 0x1f,
	0x6b, 0xe1, 0xf9, 0xae, 0xbc, 0xf5, 0x9d, 0xd4, 0x09, 0xe7, 0x23, 0xf6, 0x76, 0x19, 0xfe, 0x6d,
	0x66, 0xcf, 0x03, 0x7c, 0x18, 0xc1, 0xc0, 0xbf, 0x47, 0x30, 0xe1, 0x24, 0x1a, 0x2f, 0x18, 0x3d,
	0x1d, 0x1c, 0x21, 0x04, 0x32, 0x83, 0xfc, 0x1d, 0xe1, 0xd0, 0x42, 0x60, 0x93, 0xc8, 0x86, 0xde,
	0x76, 0x0a, 0xd8, 0x45, 0x07, 0x41, 0xa7, 0x85, 0xa1, 0x5a, 0x75, 0x09, 0x94, 0x3f, 0x3c, 0x02,
	0xfd, 0x01, 0x01, 0xee, 0xdc, 0xfa, 0xe1, 0x85, 0xfe, 0xf7, 0x89, 0x42, 0xb4, 0x45, 0xbb, 0x78,
	0x83, 0xd9, 0x54, 0x16, 0xbf, 0xda, 0xaf, 0x4d, 0x6d, 0x8b, 0x7d, 0xdb, 0xed, 0xaf, 0x11, 0x9c,
	0xf2, 0x6d, 0xbc, 0x70, 0xb1, 0x9b, 0x80, 0x07, 0x40, 0xfd, 0x75, 0x86, 0x7a, 0x19, 0x97, 0x07,
	0x42, 0xed, 0xf8, 0xfc, 0x2f, 0x08, 0xb2, 0x1d, 0x5b, 0x22, 0xdc, 0xbd, 0xe2, 0x04, 0x6d, 0xe1,
	0x84, 0x85, 0x7e, 0x3e, 0x71, 0x35, 0xbc, 0xc2, 0x0c, 0xf9, 0x1a, 0x1e, 0xcc, 0xfd, 0xf6, 0x52,
	0x06, 0x3b, 0x6a, 0x6d, 0x73, 0x7f, 0x34, 0x6f, 0x46, 0x75, 0xfa, 0x6d, 0x86, 0x75, 0x55, 0x18,
	0x82, 0xd3, 0x6d, 0xbe, 0xfc, 0x06, 0x01, 0xee, 0xdc, 0x1f, 0x76, 0xe1, 0x7a, 0xe8, 0x66, 0x32,
	0x54, 0xb0, 0x2e, 0x4d, 0xf2, 0x43, 0x40, 0x5c, 0x2e, 0x3c, 0x9a, 0x6f, 0x2a, 0x74, 0x73, 0xbb,
	0x5e, 0x90, 0xf5, 0xad, 0xa2, 0x8b, 0x51, 0xd1, 0xbd, 0x5f, 0xec, 0x0f, 0xa0, 0x54, 0x96, 0x8b,
	0x36, 0xda, 0xe2, 0x4e, 0xa9, 0x9e, 0x64, 0x58, 0x2e, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x63,
	0x15, 0xa6, 0xb2, 0x53, 0x2a, 0x00, 0x00,
}
