syntax = "proto3";

package tetrate.api.tcc.core.v1;
option go_package = "github.com/tetrateio/tetrate/api/tcc/core/v1";

import "google/api/annotations.proto";

// API that returns all istio/f5 configs for a VM or k8s cluster.  The
// sync agent running next to a VM galley or k8s galley or f5 BIGIP
// LTM would call this periodically. For Istio, we return all the
// Istio YAMLs pertaining to that cluster. It should store the
// response in the file system path that is watched by Galley for
// configs. For F5, it would get all the F5 configs. It should then
// call F5 management IP, and update F5 configs using the iControl
// rest API.
service ConfigProducer {
  rpc Download(ConfigDownloadRequest) returns (ConfigData) {
    option (google.api.http) = {
      get: "/v1/configproducer/{configtype}/{cluster}"
    };
  };
}

message ConfigDownloadRequest {
  // currently accepted values are istio or f5
  string configtype = 1;
  // A unique identifier for the k8s cluster or VM cluster
  // Typically we have multiple k8s clusters and one big giant VM cluster
  // in a DC.
  string cluster = 2;
}

message ConfigData {
  string configtype = 1;
  string cluster = 2;
  // For istio, this is a huge YAML dump of all Istio artifacts like
  // virtual services, destination rules, service entries, gateways,
  // etc. in YAML form. For F5, its all f5 config artifacts.
  string payload = 3;
}
