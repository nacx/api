syntax = "proto3";

package tetrate.api.tcc.core.v1;
option go_package = "github.com/tetrateio/tetrate/api/tcc/core/v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Users {
  // namespace members & admins
  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/users/tenant/{tenant}/{name}"
      body: "*"
    };
  };

  // namespace members & admins
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/users/tenant/{tenant}/{name}"
    };
  };

  // namespace members & admins
  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      put: "/v1/users/tenant/{tenant}/{name}"
      body: "*"
    };
  };

  // namespace members & admins
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/users/tenant/{tenant}/{name}"
    };
  };

  // namespace members & admins
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users/tenant/{tenant}"
    };
  };
}

message User {
  string name = 1;
  string tenant = 2;
  // TODO(nacx): Ignasi already has a definition of user from the original APIs.
}

message CreateUserRequest {
  // this would be `bob`; the returned user resource would have name=`tenant/123/user/bob`
  string name = 1;
  string tenant = 2;
}

message GetUserRequest {
  string name = 1;
  string tenant = 2;
}

message UpdateUserRequest {
  // this would be `bob`; the returned user resource would have name=`tenant/123/user/bob`
  string name = 1;
  string tenant = 2;
}

message DeleteUserRequest {
  string name = 1;
  string tenant = 2;
}

message ListUsersRequest {
  string tenant = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}
