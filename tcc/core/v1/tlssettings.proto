syntax = "proto3";

package tetrate.api.tcc.core.v1;
option go_package = "github.com/tetrateio/tetrate/api/tcc/core/v1";

message TLSSettings {
  // For proxies running on VMs, the path to the file holding the server-side TLS certificate to use.
  string server_certificate = 1;

  // For proxies running on VMs, the path to the file holding the server's private key.
  string private_key = 2;

  // For proxies running on VMs, the path to a file containing certificate authority certificates to use in verifying a
  // presented client side certificate for mutual TLS connections.
  string ca_certificates = 3;

  // For proxies running on Kubernetes, the name of the secret that holds the TLS certs. Currently applicable only on
  // Kubernetes. The secret should contain the server certificate and the private key. If mutual TLS is being used, an
  // additional secret with name secretName-cacert should be created with the CaCertificates that the server will use to
  // verify client side certificates. If the service is exposed via a load balancer, the secret must be accessible to it.
  string secret_name = 4;
}
