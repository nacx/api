// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public.proto

package v1 // import "github.com/tetrateio/tetrate/api/liaison/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import v1alpha3 "istio.io/api/networking/v1alpha3"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TODO(dio): page and count, pagination.
type ListGatewaysRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGatewaysRequest) Reset()         { *m = ListGatewaysRequest{} }
func (m *ListGatewaysRequest) String() string { return proto.CompactTextString(m) }
func (*ListGatewaysRequest) ProtoMessage()    {}
func (*ListGatewaysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{0}
}
func (m *ListGatewaysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewaysRequest.Unmarshal(m, b)
}
func (m *ListGatewaysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewaysRequest.Marshal(b, m, deterministic)
}
func (dst *ListGatewaysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewaysRequest.Merge(dst, src)
}
func (m *ListGatewaysRequest) XXX_Size() int {
	return xxx_messageInfo_ListGatewaysRequest.Size(m)
}
func (m *ListGatewaysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewaysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewaysRequest proto.InternalMessageInfo

// TODO(dio): page and count, pagination.
type ListGatewaysResponse struct {
	Gateways             []*Gateway `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListGatewaysResponse) Reset()         { *m = ListGatewaysResponse{} }
func (m *ListGatewaysResponse) String() string { return proto.CompactTextString(m) }
func (*ListGatewaysResponse) ProtoMessage()    {}
func (*ListGatewaysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{1}
}
func (m *ListGatewaysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGatewaysResponse.Unmarshal(m, b)
}
func (m *ListGatewaysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGatewaysResponse.Marshal(b, m, deterministic)
}
func (dst *ListGatewaysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGatewaysResponse.Merge(dst, src)
}
func (m *ListGatewaysResponse) XXX_Size() int {
	return xxx_messageInfo_ListGatewaysResponse.Size(m)
}
func (m *ListGatewaysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGatewaysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGatewaysResponse proto.InternalMessageInfo

func (m *ListGatewaysResponse) GetGateways() []*Gateway {
	if m != nil {
		return m.Gateways
	}
	return nil
}

type GetGatewayRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayRequest) Reset()         { *m = GetGatewayRequest{} }
func (m *GetGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayRequest) ProtoMessage()    {}
func (*GetGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{2}
}
func (m *GetGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayRequest.Unmarshal(m, b)
}
func (m *GetGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *GetGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayRequest.Merge(dst, src)
}
func (m *GetGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayRequest.Size(m)
}
func (m *GetGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayRequest proto.InternalMessageInfo

func (m *GetGatewayRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// To get a config.
type GetGatewayConfigurationRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GatewayId            string   `protobuf:"bytes,2,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayConfigurationRequest) Reset()         { *m = GetGatewayConfigurationRequest{} }
func (m *GetGatewayConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayConfigurationRequest) ProtoMessage()    {}
func (*GetGatewayConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{3}
}
func (m *GetGatewayConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayConfigurationRequest.Unmarshal(m, b)
}
func (m *GetGatewayConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayConfigurationRequest.Marshal(b, m, deterministic)
}
func (dst *GetGatewayConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayConfigurationRequest.Merge(dst, src)
}
func (m *GetGatewayConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayConfigurationRequest.Size(m)
}
func (m *GetGatewayConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayConfigurationRequest proto.InternalMessageInfo

func (m *GetGatewayConfigurationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetGatewayConfigurationRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

// To configure a gateway.
type ConfigureGatewayRequest struct {
	GatewayId            string                `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Config               *GatewayConfiguration `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Activate             bool                  `protobuf:"varint,3,opt,name=activate,proto3" json:"activate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ConfigureGatewayRequest) Reset()         { *m = ConfigureGatewayRequest{} }
func (m *ConfigureGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigureGatewayRequest) ProtoMessage()    {}
func (*ConfigureGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{4}
}
func (m *ConfigureGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigureGatewayRequest.Unmarshal(m, b)
}
func (m *ConfigureGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigureGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *ConfigureGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigureGatewayRequest.Merge(dst, src)
}
func (m *ConfigureGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigureGatewayRequest.Size(m)
}
func (m *ConfigureGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigureGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigureGatewayRequest proto.InternalMessageInfo

func (m *ConfigureGatewayRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ConfigureGatewayRequest) GetConfig() *GatewayConfiguration {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ConfigureGatewayRequest) GetActivate() bool {
	if m != nil {
		return m.Activate
	}
	return false
}

type ActivateGatewayConfigurationRequest struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	GatewayConfigId      string   `protobuf:"bytes,2,opt,name=gateway_config_id,json=gatewayConfigId,proto3" json:"gateway_config_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateGatewayConfigurationRequest) Reset()         { *m = ActivateGatewayConfigurationRequest{} }
func (m *ActivateGatewayConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateGatewayConfigurationRequest) ProtoMessage()    {}
func (*ActivateGatewayConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{5}
}
func (m *ActivateGatewayConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateGatewayConfigurationRequest.Unmarshal(m, b)
}
func (m *ActivateGatewayConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateGatewayConfigurationRequest.Marshal(b, m, deterministic)
}
func (dst *ActivateGatewayConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateGatewayConfigurationRequest.Merge(dst, src)
}
func (m *ActivateGatewayConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateGatewayConfigurationRequest.Size(m)
}
func (m *ActivateGatewayConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateGatewayConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateGatewayConfigurationRequest proto.InternalMessageInfo

func (m *ActivateGatewayConfigurationRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ActivateGatewayConfigurationRequest) GetGatewayConfigId() string {
	if m != nil {
		return m.GatewayConfigId
	}
	return ""
}

// To apply a resource.
type ApplyRequest struct {
	// Types that are valid to be assigned to Config:
	//	*ApplyRequest_Yaml
	//	*ApplyRequest_Binding_
	Config               isApplyRequest_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ApplyRequest) Reset()         { *m = ApplyRequest{} }
func (m *ApplyRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyRequest) ProtoMessage()    {}
func (*ApplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{6}
}
func (m *ApplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyRequest.Unmarshal(m, b)
}
func (m *ApplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest.Merge(dst, src)
}
func (m *ApplyRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyRequest.Size(m)
}
func (m *ApplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest proto.InternalMessageInfo

type isApplyRequest_Config interface {
	isApplyRequest_Config()
}

type ApplyRequest_Yaml struct {
	Yaml []byte `protobuf:"bytes,1,opt,name=yaml,proto3,oneof"`
}

type ApplyRequest_Binding_ struct {
	Binding *ApplyRequest_Binding `protobuf:"bytes,2,opt,name=binding,proto3,oneof"`
}

func (*ApplyRequest_Yaml) isApplyRequest_Config() {}

func (*ApplyRequest_Binding_) isApplyRequest_Config() {}

func (m *ApplyRequest) GetConfig() isApplyRequest_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ApplyRequest) GetYaml() []byte {
	if x, ok := m.GetConfig().(*ApplyRequest_Yaml); ok {
		return x.Yaml
	}
	return nil
}

func (m *ApplyRequest) GetBinding() *ApplyRequest_Binding {
	if x, ok := m.GetConfig().(*ApplyRequest_Binding_); ok {
		return x.Binding
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ApplyRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ApplyRequest_OneofMarshaler, _ApplyRequest_OneofUnmarshaler, _ApplyRequest_OneofSizer, []interface{}{
		(*ApplyRequest_Yaml)(nil),
		(*ApplyRequest_Binding_)(nil),
	}
}

func _ApplyRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ApplyRequest)
	// config
	switch x := m.Config.(type) {
	case *ApplyRequest_Yaml:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Yaml)
	case *ApplyRequest_Binding_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Binding); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ApplyRequest.Config has unexpected type %T", x)
	}
	return nil
}

func _ApplyRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ApplyRequest)
	switch tag {
	case 1: // config.yaml
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Config = &ApplyRequest_Yaml{x}
		return true, err
	case 2: // config.binding
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ApplyRequest_Binding)
		err := b.DecodeMessage(msg)
		m.Config = &ApplyRequest_Binding_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ApplyRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ApplyRequest)
	// config
	switch x := m.Config.(type) {
	case *ApplyRequest_Yaml:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Yaml)))
		n += len(x.Yaml)
	case *ApplyRequest_Binding_:
		s := proto.Size(x.Binding)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ApplyRequest_Binding struct {
	GatewayId            string   `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	GatewayConfigId      string   `protobuf:"bytes,2,opt,name=gateway_config_id,json=gatewayConfigId,proto3" json:"gateway_config_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyRequest_Binding) Reset()         { *m = ApplyRequest_Binding{} }
func (m *ApplyRequest_Binding) String() string { return proto.CompactTextString(m) }
func (*ApplyRequest_Binding) ProtoMessage()    {}
func (*ApplyRequest_Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{6, 0}
}
func (m *ApplyRequest_Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyRequest_Binding.Unmarshal(m, b)
}
func (m *ApplyRequest_Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyRequest_Binding.Marshal(b, m, deterministic)
}
func (dst *ApplyRequest_Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRequest_Binding.Merge(dst, src)
}
func (m *ApplyRequest_Binding) XXX_Size() int {
	return xxx_messageInfo_ApplyRequest_Binding.Size(m)
}
func (m *ApplyRequest_Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRequest_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRequest_Binding proto.InternalMessageInfo

func (m *ApplyRequest_Binding) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ApplyRequest_Binding) GetGatewayConfigId() string {
	if m != nil {
		return m.GatewayConfigId
	}
	return ""
}

// Apply response.
type ApplyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyResponse) Reset()         { *m = ApplyResponse{} }
func (m *ApplyResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyResponse) ProtoMessage()    {}
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{7}
}
func (m *ApplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyResponse.Unmarshal(m, b)
}
func (m *ApplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyResponse.Marshal(b, m, deterministic)
}
func (dst *ApplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyResponse.Merge(dst, src)
}
func (m *ApplyResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyResponse.Size(m)
}
func (m *ApplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyResponse proto.InternalMessageInfo

// Gateway is a representation of installed istio-ingressgateway.
type Gateway struct {
	// This is the ID of an ingressgateway in our database, uuid.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the gateway. namespace/name, string.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This is the friendly name given by the user.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// This is the gateway description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// This is the zone where the gateway lives.
	Zone string `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	// Metadata of a gateway.
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The current config id.
	CurrentConfigId string `protobuf:"bytes,8,opt,name=current_config_id,json=currentConfigId,proto3" json:"current_config_id,omitempty"`
	// List of attached configs.
	ConfigIds            []string `protobuf:"bytes,9,rep,name=config_ids,json=configIds,proto3" json:"config_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gateway) Reset()         { *m = Gateway{} }
func (m *Gateway) String() string { return proto.CompactTextString(m) }
func (*Gateway) ProtoMessage()    {}
func (*Gateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{8}
}
func (m *Gateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gateway.Unmarshal(m, b)
}
func (m *Gateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gateway.Marshal(b, m, deterministic)
}
func (dst *Gateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gateway.Merge(dst, src)
}
func (m *Gateway) XXX_Size() int {
	return xxx_messageInfo_Gateway.Size(m)
}
func (m *Gateway) XXX_DiscardUnknown() {
	xxx_messageInfo_Gateway.DiscardUnknown(m)
}

var xxx_messageInfo_Gateway proto.InternalMessageInfo

func (m *Gateway) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Gateway) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Gateway) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Gateway) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Gateway) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Gateway) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Gateway) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Gateway) GetCurrentConfigId() string {
	if m != nil {
		return m.CurrentConfigId
	}
	return ""
}

func (m *Gateway) GetConfigIds() []string {
	if m != nil {
		return m.ConfigIds
	}
	return nil
}

// GatewayConfiguration describes configuration object for a Gateway.
type GatewayConfiguration struct {
	// This is the ID of a configuration.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the configuration. namespace/name, string.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This is the friendly name given by the user.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// This is the gateway description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// This is the metadata.
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// This tells where this configuration attached to. A configuration can be attached to multiple
	// gateways.
	GatewayIds []string `protobuf:"bytes,6,rep,name=gateway_ids,json=gatewayIds,proto3" json:"gateway_ids,omitempty"`
	// This is the entry.
	Entry                *GatewayConfigurationEntry `protobuf:"bytes,7,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GatewayConfiguration) Reset()         { *m = GatewayConfiguration{} }
func (m *GatewayConfiguration) String() string { return proto.CompactTextString(m) }
func (*GatewayConfiguration) ProtoMessage()    {}
func (*GatewayConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{9}
}
func (m *GatewayConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayConfiguration.Unmarshal(m, b)
}
func (m *GatewayConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayConfiguration.Marshal(b, m, deterministic)
}
func (dst *GatewayConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayConfiguration.Merge(dst, src)
}
func (m *GatewayConfiguration) XXX_Size() int {
	return xxx_messageInfo_GatewayConfiguration.Size(m)
}
func (m *GatewayConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayConfiguration proto.InternalMessageInfo

func (m *GatewayConfiguration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayConfiguration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayConfiguration) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GatewayConfiguration) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GatewayConfiguration) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GatewayConfiguration) GetGatewayIds() []string {
	if m != nil {
		return m.GatewayIds
	}
	return nil
}

func (m *GatewayConfiguration) GetEntry() *GatewayConfigurationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

// GatewayConfigurationEntry is a mashup of all entries for a gateway configuration.
type GatewayConfigurationEntry struct {
	Gateway              *GatewayEntry          `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Servers              []*ServerEntry         `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	VirtualServices      []*VirtualServiceEntry `protobuf:"bytes,3,rep,name=virtual_services,json=virtualServices,proto3" json:"virtual_services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GatewayConfigurationEntry) Reset()         { *m = GatewayConfigurationEntry{} }
func (m *GatewayConfigurationEntry) String() string { return proto.CompactTextString(m) }
func (*GatewayConfigurationEntry) ProtoMessage()    {}
func (*GatewayConfigurationEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{10}
}
func (m *GatewayConfigurationEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayConfigurationEntry.Unmarshal(m, b)
}
func (m *GatewayConfigurationEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayConfigurationEntry.Marshal(b, m, deterministic)
}
func (dst *GatewayConfigurationEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayConfigurationEntry.Merge(dst, src)
}
func (m *GatewayConfigurationEntry) XXX_Size() int {
	return xxx_messageInfo_GatewayConfigurationEntry.Size(m)
}
func (m *GatewayConfigurationEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayConfigurationEntry.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayConfigurationEntry proto.InternalMessageInfo

func (m *GatewayConfigurationEntry) GetGateway() *GatewayEntry {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *GatewayConfigurationEntry) GetServers() []*ServerEntry {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *GatewayConfigurationEntry) GetVirtualServices() []*VirtualServiceEntry {
	if m != nil {
		return m.VirtualServices
	}
	return nil
}

// GatewayEntry tells the definition of a gateway configuration entry.
type GatewayEntry struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the configuration. namespace/name, string.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This is the friendly name given by the user.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// This is the gateway description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// This is the metadata.
	Metadata             map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Selector             map[string]string `protobuf:"bytes,6,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GatewayEntry) Reset()         { *m = GatewayEntry{} }
func (m *GatewayEntry) String() string { return proto.CompactTextString(m) }
func (*GatewayEntry) ProtoMessage()    {}
func (*GatewayEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{11}
}
func (m *GatewayEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayEntry.Unmarshal(m, b)
}
func (m *GatewayEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayEntry.Marshal(b, m, deterministic)
}
func (dst *GatewayEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayEntry.Merge(dst, src)
}
func (m *GatewayEntry) XXX_Size() int {
	return xxx_messageInfo_GatewayEntry.Size(m)
}
func (m *GatewayEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayEntry.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayEntry proto.InternalMessageInfo

func (m *GatewayEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GatewayEntry) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *GatewayEntry) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GatewayEntry) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GatewayEntry) GetSelector() map[string]string {
	if m != nil {
		return m.Selector
	}
	return nil
}

// ServerEntry describes the entry for a server configuration entry.
type ServerEntry struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the configuration. namespace/name, string.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This is the friendly name given by the user.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// This is the gateway description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// This is the metadata.
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The entry value.
	Value                *v1alpha3.Server `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ServerEntry) Reset()         { *m = ServerEntry{} }
func (m *ServerEntry) String() string { return proto.CompactTextString(m) }
func (*ServerEntry) ProtoMessage()    {}
func (*ServerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{12}
}
func (m *ServerEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerEntry.Unmarshal(m, b)
}
func (m *ServerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerEntry.Marshal(b, m, deterministic)
}
func (dst *ServerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerEntry.Merge(dst, src)
}
func (m *ServerEntry) XXX_Size() int {
	return xxx_messageInfo_ServerEntry.Size(m)
}
func (m *ServerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ServerEntry proto.InternalMessageInfo

func (m *ServerEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ServerEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerEntry) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ServerEntry) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServerEntry) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ServerEntry) GetValue() *v1alpha3.Server {
	if m != nil {
		return m.Value
	}
	return nil
}

// VirtualServiceEntry describes the entry for a routing rule configuration entry.
type VirtualServiceEntry struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// This is the name of the configuration. namespace/name, string.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This is the friendly name given by the user.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// This is the gateway description.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// This is the metadata.
	Metadata map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The entry value.
	Value                *v1alpha3.VirtualService `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *VirtualServiceEntry) Reset()         { *m = VirtualServiceEntry{} }
func (m *VirtualServiceEntry) String() string { return proto.CompactTextString(m) }
func (*VirtualServiceEntry) ProtoMessage()    {}
func (*VirtualServiceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_public_2a1b9fa02879bef2, []int{13}
}
func (m *VirtualServiceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualServiceEntry.Unmarshal(m, b)
}
func (m *VirtualServiceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualServiceEntry.Marshal(b, m, deterministic)
}
func (dst *VirtualServiceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualServiceEntry.Merge(dst, src)
}
func (m *VirtualServiceEntry) XXX_Size() int {
	return xxx_messageInfo_VirtualServiceEntry.Size(m)
}
func (m *VirtualServiceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualServiceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualServiceEntry proto.InternalMessageInfo

func (m *VirtualServiceEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VirtualServiceEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualServiceEntry) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VirtualServiceEntry) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VirtualServiceEntry) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *VirtualServiceEntry) GetValue() *v1alpha3.VirtualService {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*ListGatewaysRequest)(nil), "tetrate.api.liaison.v1.ListGatewaysRequest")
	proto.RegisterType((*ListGatewaysResponse)(nil), "tetrate.api.liaison.v1.ListGatewaysResponse")
	proto.RegisterType((*GetGatewayRequest)(nil), "tetrate.api.liaison.v1.GetGatewayRequest")
	proto.RegisterType((*GetGatewayConfigurationRequest)(nil), "tetrate.api.liaison.v1.GetGatewayConfigurationRequest")
	proto.RegisterType((*ConfigureGatewayRequest)(nil), "tetrate.api.liaison.v1.ConfigureGatewayRequest")
	proto.RegisterType((*ActivateGatewayConfigurationRequest)(nil), "tetrate.api.liaison.v1.ActivateGatewayConfigurationRequest")
	proto.RegisterType((*ApplyRequest)(nil), "tetrate.api.liaison.v1.ApplyRequest")
	proto.RegisterType((*ApplyRequest_Binding)(nil), "tetrate.api.liaison.v1.ApplyRequest.Binding")
	proto.RegisterType((*ApplyResponse)(nil), "tetrate.api.liaison.v1.ApplyResponse")
	proto.RegisterType((*Gateway)(nil), "tetrate.api.liaison.v1.Gateway")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.Gateway.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.Gateway.LabelsEntry")
	proto.RegisterType((*GatewayConfiguration)(nil), "tetrate.api.liaison.v1.GatewayConfiguration")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.GatewayConfiguration.MetadataEntry")
	proto.RegisterType((*GatewayConfigurationEntry)(nil), "tetrate.api.liaison.v1.GatewayConfigurationEntry")
	proto.RegisterType((*GatewayEntry)(nil), "tetrate.api.liaison.v1.GatewayEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.GatewayEntry.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.GatewayEntry.SelectorEntry")
	proto.RegisterType((*ServerEntry)(nil), "tetrate.api.liaison.v1.ServerEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.ServerEntry.MetadataEntry")
	proto.RegisterType((*VirtualServiceEntry)(nil), "tetrate.api.liaison.v1.VirtualServiceEntry")
	proto.RegisterMapType((map[string]string)(nil), "tetrate.api.liaison.v1.VirtualServiceEntry.MetadataEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiClient is the client API for Api service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiClient interface {
	// To get ALL available gateways.
	ListGateways(ctx context.Context, in *ListGatewaysRequest, opts ...grpc.CallOption) (*ListGatewaysResponse, error)
	// To get a gateway.
	GetGateway(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*Gateway, error)
	// To get a configuration of a gateway configuration.
	GetGatewayConfiguration(ctx context.Context, in *GetGatewayConfigurationRequest, opts ...grpc.CallOption) (*GatewayConfiguration, error)
	// To configure a gateway.
	ConfigureGateway(ctx context.Context, in *ConfigureGatewayRequest, opts ...grpc.CallOption) (*Gateway, error)
	ActivateGatewayConfiguration(ctx context.Context, in *ActivateGatewayConfigurationRequest, opts ...grpc.CallOption) (*Gateway, error)
	// To apply a config from from frontend.
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) ListGateways(ctx context.Context, in *ListGatewaysRequest, opts ...grpc.CallOption) (*ListGatewaysResponse, error) {
	out := new(ListGatewaysResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/ListGateways", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetGateway(ctx context.Context, in *GetGatewayRequest, opts ...grpc.CallOption) (*Gateway, error) {
	out := new(Gateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/GetGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetGatewayConfiguration(ctx context.Context, in *GetGatewayConfigurationRequest, opts ...grpc.CallOption) (*GatewayConfiguration, error) {
	out := new(GatewayConfiguration)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/GetGatewayConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) ConfigureGateway(ctx context.Context, in *ConfigureGatewayRequest, opts ...grpc.CallOption) (*Gateway, error) {
	out := new(Gateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/ConfigureGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) ActivateGatewayConfiguration(ctx context.Context, in *ActivateGatewayConfigurationRequest, opts ...grpc.CallOption) (*Gateway, error) {
	out := new(Gateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/ActivateGatewayConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*ApplyResponse, error) {
	out := new(ApplyResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1.Api/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServer is the server API for Api service.
type ApiServer interface {
	// To get ALL available gateways.
	ListGateways(context.Context, *ListGatewaysRequest) (*ListGatewaysResponse, error)
	// To get a gateway.
	GetGateway(context.Context, *GetGatewayRequest) (*Gateway, error)
	// To get a configuration of a gateway configuration.
	GetGatewayConfiguration(context.Context, *GetGatewayConfigurationRequest) (*GatewayConfiguration, error)
	// To configure a gateway.
	ConfigureGateway(context.Context, *ConfigureGatewayRequest) (*Gateway, error)
	ActivateGatewayConfiguration(context.Context, *ActivateGatewayConfigurationRequest) (*Gateway, error)
	// To apply a config from from frontend.
	Apply(context.Context, *ApplyRequest) (*ApplyResponse, error)
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_ListGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGatewaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).ListGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/ListGateways",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).ListGateways(ctx, req.(*ListGatewaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/GetGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetGateway(ctx, req.(*GetGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetGatewayConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetGatewayConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/GetGatewayConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetGatewayConfiguration(ctx, req.(*GetGatewayConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_ConfigureGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).ConfigureGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/ConfigureGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).ConfigureGateway(ctx, req.(*ConfigureGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_ActivateGatewayConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateGatewayConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).ActivateGatewayConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/ActivateGatewayConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).ActivateGatewayConfiguration(ctx, req.(*ActivateGatewayConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1.Api/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.liaison.v1.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGateways",
			Handler:    _Api_ListGateways_Handler,
		},
		{
			MethodName: "GetGateway",
			Handler:    _Api_GetGateway_Handler,
		},
		{
			MethodName: "GetGatewayConfiguration",
			Handler:    _Api_GetGatewayConfiguration_Handler,
		},
		{
			MethodName: "ConfigureGateway",
			Handler:    _Api_ConfigureGateway_Handler,
		},
		{
			MethodName: "ActivateGatewayConfiguration",
			Handler:    _Api_ActivateGatewayConfiguration_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _Api_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "public.proto",
}

func init() { proto.RegisterFile("public.proto", fileDescriptor_public_2a1b9fa02879bef2) }

var fileDescriptor_public_2a1b9fa02879bef2 = []byte{
	// 1121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xcf, 0x6f, 0xdc, 0x44,
	0x14, 0xae, 0xd7, 0xd9, 0x1f, 0x79, 0xbb, 0x25, 0xdb, 0x69, 0x4a, 0x5c, 0xab, 0xa1, 0x1b, 0xb7,
	0xa0, 0xa4, 0x09, 0x5e, 0x36, 0x11, 0x94, 0x24, 0xa2, 0x28, 0xa9, 0x50, 0x53, 0xa9, 0x8d, 0xd0,
	0xa6, 0xe4, 0xc0, 0x25, 0x9a, 0xd8, 0xc3, 0x76, 0x54, 0xc7, 0x36, 0x9e, 0x59, 0x47, 0x01, 0xf5,
	0x02, 0x12, 0x07, 0xae, 0x88, 0x1b, 0xfc, 0x0d, 0x88, 0x6b, 0x4f, 0x9c, 0x38, 0x72, 0xe1, 0xce,
	0x09, 0x0e, 0xbd, 0xf2, 0x17, 0x54, 0x1e, 0x8f, 0x77, 0xbd, 0x3f, 0x1c, 0xef, 0xaa, 0x95, 0x72,
	0xb3, 0x3d, 0xef, 0xfb, 0xde, 0x9b, 0xef, 0xbd, 0x37, 0x9e, 0x07, 0x35, 0xbf, 0x7b, 0xec, 0x50,
	0xcb, 0xf4, 0x03, 0x8f, 0x7b, 0xe8, 0x6d, 0x4e, 0x78, 0x80, 0x39, 0x31, 0xb1, 0x4f, 0x4d, 0x87,
	0x62, 0xca, 0x3c, 0xd7, 0x0c, 0x5b, 0xfa, 0x8d, 0x8e, 0xe7, 0x75, 0x1c, 0xd2, 0xc4, 0x3e, 0x6d,
	0x62, 0xd7, 0xf5, 0x38, 0xe6, 0xd4, 0x73, 0x59, 0x8c, 0xd2, 0x17, 0x42, 0xec, 0x50, 0x1b, 0x73,
	0xd2, 0x4c, 0x1e, 0xe4, 0xc2, 0x92, 0x4b, 0xf8, 0xa9, 0x17, 0x3c, 0xa3, 0x6e, 0xa7, 0x19, 0xb6,
	0xb0, 0xe3, 0x3f, 0xc5, 0x1b, 0xcd, 0x0e, 0xe6, 0xe4, 0x14, 0x9f, 0x49, 0x93, 0x95, 0x71, 0x26,
	0x21, 0x0d, 0x78, 0x17, 0x3b, 0x47, 0x8c, 0x04, 0x21, 0xb5, 0x24, 0x9b, 0x71, 0x0d, 0xae, 0x3e,
	0xa2, 0x8c, 0x3f, 0x88, 0xf1, 0xac, 0x4d, 0xbe, 0xee, 0x12, 0xc6, 0x8d, 0x03, 0x98, 0x1f, 0xfc,
	0xcc, 0x7c, 0xcf, 0x65, 0x04, 0x6d, 0x43, 0x45, 0xba, 0x62, 0x9a, 0xd2, 0x50, 0x97, 0xab, 0xeb,
	0x37, 0xcd, 0xf1, 0xdb, 0x33, 0x25, 0xb6, 0xdd, 0x03, 0x18, 0x26, 0x5c, 0x79, 0x40, 0x12, 0x4e,
	0xe9, 0x09, 0x5d, 0x87, 0x02, 0xb5, 0x35, 0xa5, 0xa1, 0x2c, 0xcf, 0xee, 0xce, 0xbe, 0x78, 0xf9,
	0x87, 0x3a, 0x13, 0x14, 0x1a, 0x4a, 0xbb, 0x40, 0x6d, 0x83, 0xc0, 0x3b, 0x7d, 0xfb, 0xfb, 0x9e,
	0xfb, 0x15, 0xed, 0x74, 0x03, 0x21, 0x52, 0x3e, 0x18, 0x2d, 0x03, 0x48, 0xc7, 0x47, 0xd4, 0xd6,
	0x0a, 0xc3, 0x26, 0xb3, 0x72, 0xf1, 0xa1, 0x6d, 0xfc, 0xae, 0xc0, 0x42, 0xc2, 0x4e, 0x86, 0xa2,
	0x1b, 0x64, 0x51, 0xb2, 0x59, 0xd0, 0xe7, 0x50, 0xb2, 0x04, 0x89, 0xf0, 0x55, 0x5d, 0x5f, 0xcb,
	0xd1, 0x65, 0x60, 0x3f, 0xbb, 0x10, 0x71, 0x16, 0x7f, 0x54, 0x0a, 0x75, 0xa5, 0x2d, 0x79, 0x90,
	0x0e, 0x15, 0x6c, 0x71, 0x1a, 0x62, 0x4e, 0x34, 0xb5, 0xa1, 0x2c, 0x57, 0xda, 0xbd, 0x77, 0xe3,
	0x07, 0x05, 0x6e, 0xed, 0xc8, 0x97, 0xf3, 0x04, 0x9a, 0x3c, 0xfe, 0x0f, 0xe1, 0x4a, 0x62, 0x19,
	0xfb, 0x1f, 0x2b, 0xdb, 0x5c, 0x27, 0xed, 0xec, 0xa1, 0x6d, 0xfc, 0xa5, 0x40, 0x6d, 0xc7, 0xf7,
	0x9d, 0x9e, 0x62, 0xf3, 0x30, 0x73, 0x86, 0x4f, 0x1c, 0xe1, 0xab, 0xb6, 0x77, 0xa9, 0x2d, 0xde,
	0xd0, 0x1e, 0x94, 0x8f, 0xa9, 0x6b, 0x53, 0x37, 0x57, 0x9e, 0x34, 0x99, 0xb9, 0x1b, 0x63, 0xf6,
	0x2e, 0xb5, 0x13, 0xb8, 0xfe, 0x04, 0xca, 0xf2, 0x2b, 0x5a, 0x1c, 0xdd, 0x5c, 0x7a, 0x47, 0x77,
	0x32, 0x77, 0x34, 0xb2, 0x8d, 0xdd, 0x4a, 0x92, 0x3d, 0x63, 0x0e, 0x2e, 0xcb, 0x10, 0xe2, 0x92,
	0x37, 0xfe, 0x53, 0xa1, 0x2c, 0x25, 0x46, 0x6f, 0xf5, 0xeb, 0x4d, 0x14, 0x19, 0x82, 0x19, 0x17,
	0x9f, 0x10, 0xc9, 0x2a, 0x9e, 0xd1, 0x12, 0xd4, 0x6c, 0xca, 0x7c, 0x07, 0x9f, 0x1d, 0x89, 0x35,
	0x55, 0xac, 0x55, 0xe5, 0xb7, 0xfd, 0xc8, 0xa4, 0x01, 0x55, 0x9b, 0x30, 0x2b, 0xa0, 0x7e, 0x94,
	0x2b, 0x6d, 0x46, 0x5a, 0xf4, 0x3f, 0x45, 0xc4, 0xdf, 0x78, 0x2e, 0xd1, 0x8a, 0x31, 0x71, 0xf4,
	0x8c, 0xee, 0x43, 0xc9, 0xc1, 0xc7, 0xc4, 0x61, 0x5a, 0x49, 0x74, 0xde, 0x6a, 0x4e, 0x85, 0x99,
	0x8f, 0x84, 0xf5, 0x67, 0x2e, 0x0f, 0xce, 0xda, 0x12, 0x8a, 0xda, 0x50, 0x4d, 0x9d, 0x35, 0x5a,
	0x59, 0x30, 0x7d, 0x90, 0xc7, 0xb4, 0xd3, 0x87, 0xc4, 0x74, 0x69, 0x92, 0x48, 0x68, 0xab, 0x1b,
	0x04, 0xc4, 0xe5, 0x29, 0xa1, 0x2b, 0xb1, 0xd0, 0x72, 0x21, 0x11, 0x3a, 0xca, 0x59, 0xcf, 0x86,
	0x69, 0xb3, 0x0d, 0x35, 0xca, 0x99, 0x25, 0x57, 0x99, 0xbe, 0x09, 0xd5, 0x54, 0xd4, 0xa8, 0x0e,
	0xea, 0x33, 0x72, 0x26, 0x05, 0x8f, 0x1e, 0xd1, 0x3c, 0x14, 0x43, 0xec, 0x74, 0x13, 0xc9, 0xe3,
	0x97, 0xad, 0xc2, 0xc7, 0x8a, 0x7e, 0x0f, 0xea, 0xc3, 0x61, 0x4e, 0x83, 0x37, 0x7e, 0x56, 0x61,
	0x7e, 0x5c, 0x2b, 0x8d, 0x24, 0x7d, 0x31, 0x9d, 0xf4, 0x74, 0x73, 0xbc, 0xc1, 0xfc, 0x1f, 0x42,
	0xe5, 0x84, 0x70, 0x6c, 0x63, 0x8e, 0xb5, 0xa2, 0xc8, 0xd1, 0xd6, 0x34, 0xe7, 0x89, 0xf9, 0x58,
	0x82, 0xe3, 0x6c, 0xf5, 0xb8, 0xd0, 0x4d, 0xa8, 0xf6, 0x5b, 0x26, 0x2e, 0xa4, 0xd9, 0x36, 0xf4,
	0x7a, 0x86, 0xa1, 0x03, 0x28, 0x92, 0x08, 0xa3, 0x95, 0x45, 0x9b, 0xb6, 0xa6, 0xf1, 0x2a, 0x9c,
	0x0d, 0x1c, 0x65, 0x31, 0x97, 0xbe, 0x0d, 0x97, 0x07, 0x02, 0x9a, 0x2a, 0x2f, 0xff, 0x2b, 0x70,
	0x3d, 0xd3, 0x1b, 0xba, 0x07, 0x65, 0x19, 0xbd, 0x60, 0xab, 0xae, 0xdf, 0xce, 0x89, 0x38, 0x56,
	0x24, 0x01, 0xa1, 0x4f, 0xa0, 0x1c, 0xfd, 0x10, 0x49, 0xc0, 0xb4, 0x82, 0xd0, 0xf9, 0x56, 0x16,
	0xfe, 0x40, 0x98, 0x49, 0xb8, 0xc4, 0xa0, 0x43, 0xa8, 0x0f, 0xfd, 0x57, 0x99, 0xa6, 0x9e, 0xdf,
	0x9d, 0x87, 0xb1, 0xfd, 0x41, 0x6c, 0x1e, 0xf3, 0xcd, 0x85, 0x03, 0x1f, 0x99, 0xf1, 0x8b, 0x0a,
	0xb5, 0x74, 0xc0, 0x17, 0x52, 0x84, 0xfb, 0x23, 0x45, 0xb8, 0x3e, 0x89, 0xb8, 0x99, 0xc5, 0xb7,
	0x0f, 0x15, 0x46, 0x1c, 0x62, 0x71, 0x2f, 0x90, 0x47, 0xd8, 0x64, 0x7c, 0x07, 0x12, 0x24, 0xf9,
	0x12, 0x8e, 0xd7, 0x2a, 0xab, 0x08, 0x3c, 0xc0, 0x3b, 0x55, 0x4d, 0xfe, 0x59, 0x80, 0x6a, 0xaa,
	0x1e, 0x2e, 0x24, 0x3b, 0x8f, 0x47, 0xb2, 0xd3, 0x9a, 0xa0, 0x74, 0x33, 0x93, 0x73, 0x37, 0xd9,
	0x6c, 0x49, 0xb4, 0xd1, 0x92, 0x49, 0x19, 0xa7, 0x9e, 0xd9, 0xbf, 0x49, 0x9a, 0xc9, 0x4d, 0x52,
	0xd2, 0x49, 0x3d, 0x5e, 0xaf, 0xb9, 0xff, 0x29, 0xc0, 0xd5, 0x31, 0x0d, 0x71, 0x21, 0x82, 0x7e,
	0x31, 0x22, 0xe8, 0xe6, 0x14, 0x3d, 0x9c, 0x29, 0xec, 0xa7, 0x83, 0xc2, 0xae, 0x9c, 0x23, 0xec,
	0x20, 0xed, 0x9b, 0x10, 0x78, 0xfd, 0x65, 0x09, 0xd4, 0x1d, 0x9f, 0xa2, 0xef, 0x15, 0xa8, 0xa5,
	0x6f, 0xf4, 0x28, 0xf3, 0x7c, 0x1a, 0x33, 0x0e, 0xe8, 0x6b, 0x93, 0x19, 0xcb, 0x1b, 0x93, 0xf6,
	0xdd, 0xdf, 0xff, 0xfe, 0x54, 0x40, 0xa8, 0x2e, 0x46, 0x9b, 0xb0, 0x95, 0x4c, 0x27, 0x0c, 0x9d,
	0x02, 0xf4, 0x6f, 0xf4, 0x68, 0x25, 0xb3, 0xfb, 0x87, 0xa7, 0x04, 0x3d, 0x6f, 0xca, 0x30, 0x16,
	0x85, 0xcf, 0x05, 0x74, 0x6d, 0xd8, 0x67, 0xf3, 0x5b, 0x6a, 0x3f, 0x47, 0x2f, 0x14, 0x58, 0xc8,
	0x98, 0x25, 0xd0, 0x47, 0xf9, 0x61, 0x8c, 0xbb, 0x5b, 0xeb, 0x53, 0xdd, 0xf0, 0x8d, 0x4d, 0x11,
	0xe0, 0x06, 0x6a, 0x8d, 0x06, 0xd8, 0xff, 0x23, 0x3f, 0x6f, 0x5a, 0x69, 0x90, 0x0c, 0xfe, 0x57,
	0x05, 0xea, 0xc3, 0x03, 0x0a, 0x6a, 0x66, 0x79, 0xcf, 0x18, 0x65, 0xf2, 0x25, 0xbc, 0x2b, 0x22,
	0x6c, 0x19, 0x6b, 0xd3, 0x44, 0xb8, 0xa5, 0xdc, 0x41, 0xbf, 0x29, 0x70, 0xe3, 0xbc, 0x61, 0x04,
	0x6d, 0x67, 0x5e, 0xf6, 0xf3, 0x47, 0x98, 0xfc, 0xb8, 0x5b, 0x22, 0xee, 0x55, 0xe3, 0xbd, 0xf3,
	0xe3, 0x4e, 0x66, 0xa7, 0x28, 0xe2, 0x27, 0x50, 0x14, 0x97, 0x7c, 0x74, 0x7b, 0x92, 0x31, 0x44,
	0x7f, 0x37, 0xc7, 0x2a, 0xae, 0xfb, 0xdd, 0xf7, 0xbf, 0x5c, 0xed, 0x50, 0xfe, 0xb4, 0x7b, 0x6c,
	0x5a, 0xde, 0x49, 0x53, 0x42, 0xa8, 0x97, 0x3c, 0x89, 0xf0, 0x24, 0xb8, 0x19, 0xb6, 0x8e, 0x4b,
	0x62, 0x02, 0xdf, 0x78, 0x15, 0x00, 0x00, 0xff, 0xff, 0x11, 0x90, 0xb1, 0x52, 0x2e, 0x10, 0x00,
	0x00,
}
