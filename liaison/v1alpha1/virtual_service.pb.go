// Code generated by protoc-gen-go. DO NOT EDIT.
// source: virtual_service.proto

package v1alpha1 // import "github.com/tetrateio/tetrate/api/liaison/v1alpha1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import v1alpha3 "istio.io/api/networking/v1alpha3"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A Tetrate-specific wrapper for the Istio VirtualService and is a child of
// the IngressGateway.
type VirtualService struct {
	// Resource name with format:
	//   "ingressGateway/<service name>/virtualService"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name displayed to end users.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The Istio VirtualService config object specifying service routing rules
	// for this ingress Envoy.
	VirtualService       *v1alpha3.VirtualService `protobuf:"bytes,3,opt,name=virtual_service,json=virtualService,proto3" json:"virtual_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *VirtualService) Reset()         { *m = VirtualService{} }
func (m *VirtualService) String() string { return proto.CompactTextString(m) }
func (*VirtualService) ProtoMessage()    {}
func (*VirtualService) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_service_0d4d627cfb52f0f7, []int{0}
}
func (m *VirtualService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualService.Unmarshal(m, b)
}
func (m *VirtualService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualService.Marshal(b, m, deterministic)
}
func (dst *VirtualService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualService.Merge(dst, src)
}
func (m *VirtualService) XXX_Size() int {
	return xxx_messageInfo_VirtualService.Size(m)
}
func (m *VirtualService) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualService.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualService proto.InternalMessageInfo

func (m *VirtualService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VirtualService) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *VirtualService) GetVirtualService() *v1alpha3.VirtualService {
	if m != nil {
		return m.VirtualService
	}
	return nil
}

type GetVirtualServiceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVirtualServiceRequest) Reset()         { *m = GetVirtualServiceRequest{} }
func (m *GetVirtualServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetVirtualServiceRequest) ProtoMessage()    {}
func (*GetVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_service_0d4d627cfb52f0f7, []int{1}
}
func (m *GetVirtualServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVirtualServiceRequest.Unmarshal(m, b)
}
func (m *GetVirtualServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVirtualServiceRequest.Marshal(b, m, deterministic)
}
func (dst *GetVirtualServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVirtualServiceRequest.Merge(dst, src)
}
func (m *GetVirtualServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetVirtualServiceRequest.Size(m)
}
func (m *GetVirtualServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVirtualServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVirtualServiceRequest proto.InternalMessageInfo

func (m *GetVirtualServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateVirtualServiceRequest struct {
	VirtualService       *VirtualService `protobuf:"bytes,1,opt,name=virtual_service,json=virtualService,proto3" json:"virtual_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateVirtualServiceRequest) Reset()         { *m = UpdateVirtualServiceRequest{} }
func (m *UpdateVirtualServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVirtualServiceRequest) ProtoMessage()    {}
func (*UpdateVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_virtual_service_0d4d627cfb52f0f7, []int{2}
}
func (m *UpdateVirtualServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVirtualServiceRequest.Unmarshal(m, b)
}
func (m *UpdateVirtualServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVirtualServiceRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateVirtualServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVirtualServiceRequest.Merge(dst, src)
}
func (m *UpdateVirtualServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVirtualServiceRequest.Size(m)
}
func (m *UpdateVirtualServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVirtualServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVirtualServiceRequest proto.InternalMessageInfo

func (m *UpdateVirtualServiceRequest) GetVirtualService() *VirtualService {
	if m != nil {
		return m.VirtualService
	}
	return nil
}

func init() {
	proto.RegisterType((*VirtualService)(nil), "tetrate.api.liaison.v1alpha1.VirtualService")
	proto.RegisterType((*GetVirtualServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.GetVirtualServiceRequest")
	proto.RegisterType((*UpdateVirtualServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.UpdateVirtualServiceRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualServicesClient is the client API for VirtualServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualServicesClient interface {
	GetVirtualService(ctx context.Context, in *GetVirtualServiceRequest, opts ...grpc.CallOption) (*VirtualService, error)
	UpdateVirtualService(ctx context.Context, in *UpdateVirtualServiceRequest, opts ...grpc.CallOption) (*VirtualService, error)
}

type virtualServicesClient struct {
	cc *grpc.ClientConn
}

func NewVirtualServicesClient(cc *grpc.ClientConn) VirtualServicesClient {
	return &virtualServicesClient{cc}
}

func (c *virtualServicesClient) GetVirtualService(ctx context.Context, in *GetVirtualServiceRequest, opts ...grpc.CallOption) (*VirtualService, error) {
	out := new(VirtualService)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.VirtualServices/GetVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualServicesClient) UpdateVirtualService(ctx context.Context, in *UpdateVirtualServiceRequest, opts ...grpc.CallOption) (*VirtualService, error) {
	out := new(VirtualService)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.VirtualServices/UpdateVirtualService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualServicesServer is the server API for VirtualServices service.
type VirtualServicesServer interface {
	GetVirtualService(context.Context, *GetVirtualServiceRequest) (*VirtualService, error)
	UpdateVirtualService(context.Context, *UpdateVirtualServiceRequest) (*VirtualService, error)
}

func RegisterVirtualServicesServer(s *grpc.Server, srv VirtualServicesServer) {
	s.RegisterService(&_VirtualServices_serviceDesc, srv)
}

func _VirtualServices_GetVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVirtualServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServicesServer).GetVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.VirtualServices/GetVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServicesServer).GetVirtualService(ctx, req.(*GetVirtualServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualServices_UpdateVirtualService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVirtualServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualServicesServer).UpdateVirtualService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.VirtualServices/UpdateVirtualService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualServicesServer).UpdateVirtualService(ctx, req.(*UpdateVirtualServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.liaison.v1alpha1.VirtualServices",
	HandlerType: (*VirtualServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVirtualService",
			Handler:    _VirtualServices_GetVirtualService_Handler,
		},
		{
			MethodName: "UpdateVirtualService",
			Handler:    _VirtualServices_UpdateVirtualService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "virtual_service.proto",
}

func init() {
	proto.RegisterFile("virtual_service.proto", fileDescriptor_virtual_service_0d4d627cfb52f0f7)
}

var fileDescriptor_virtual_service_0d4d627cfb52f0f7 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0xcb, 0x2c, 0x2a,
	0x29, 0x4d, 0xcc, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x92, 0x29, 0x49, 0x2d, 0x29, 0x4a, 0x2c, 0x49, 0xd5, 0x4b, 0x2c, 0xc8, 0xd4, 0xcb,
	0xc9, 0x4c, 0xcc, 0x2c, 0xce, 0xcf, 0xd3, 0x2b, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0x34, 0x94,
	0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb,
	0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xe8, 0x95, 0xd2, 0xcc, 0x4b, 0x2d, 0x29, 0xcf,
	0x2f, 0xca, 0xce, 0xcc, 0x4b, 0xd7, 0x87, 0x6a, 0x31, 0xd6, 0xc7, 0x6a, 0x8d, 0x94, 0x78, 0x59,
	0x62, 0x4e, 0x66, 0x4a, 0x62, 0x49, 0xaa, 0x3e, 0x8c, 0x01, 0x91, 0x50, 0x3a, 0xce, 0xc8, 0xc5,
	0x17, 0x06, 0xd1, 0x12, 0x0c, 0xd1, 0x21, 0x64, 0xc7, 0xc5, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0xe9, 0xa4, 0xb5, 0xeb, 0xe5, 0x01, 0x66, 0xd5, 0x22, 0x65, 0x2b, 0x81,
	0xcc, 0xbc, 0xf4, 0xa2, 0xd4, 0xe2, 0x62, 0xf7, 0xc4, 0x92, 0xd4, 0xf2, 0xc4, 0xca, 0x62, 0x7d,
	0x27, 0x7e, 0x98, 0x65, 0x50, 0x9d, 0x41, 0x60, 0x7d, 0x42, 0x8a, 0x5c, 0x3c, 0x29, 0x99, 0xc5,
	0x05, 0x39, 0x89, 0x95, 0xf1, 0x60, 0x73, 0x98, 0x40, 0xe6, 0x04, 0x71, 0x43, 0xc5, 0xfc, 0x40,
	0x4a, 0x82, 0xb8, 0xf8, 0xd1, 0xdc, 0x29, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0xa4, 0xa9, 0x97,
	0x59, 0x5c, 0x92, 0x99, 0xaf, 0x87, 0xf0, 0x19, 0x2c, 0x30, 0x8c, 0xf5, 0x50, 0x9d, 0x19, 0xc4,
	0x87, 0x6a, 0xb9, 0x92, 0x1e, 0x97, 0x84, 0x7b, 0x6a, 0x09, 0x9a, 0xa2, 0xd4, 0xc2, 0xd2, 0xd4,
	0xe2, 0x12, 0x21, 0x21, 0x64, 0x2f, 0x41, 0x9c, 0xa9, 0x54, 0xc2, 0x25, 0x1d, 0x5a, 0x00, 0x0a,
	0x09, 0xec, 0x5a, 0x42, 0x31, 0x9d, 0xc8, 0x08, 0x76, 0xa2, 0x8e, 0x1e, 0xbe, 0x28, 0x23, 0xe0,
	0x4a, 0xa3, 0x65, 0xcc, 0x5c, 0xfc, 0xa8, 0x4a, 0x8a, 0x85, 0xb6, 0x30, 0x72, 0x09, 0x62, 0x38,
	0x5d, 0xc8, 0x0c, 0xbf, 0x3d, 0xb8, 0xfc, 0x2a, 0x45, 0x92, 0xfb, 0x94, 0x2c, 0x9b, 0x2e, 0x3f,
	0x99, 0xcc, 0x64, 0x2c, 0x64, 0x08, 0x4b, 0x41, 0x86, 0xfa, 0xd5, 0xa0, 0xe0, 0xb1, 0x45, 0x8f,
	0x6d, 0x2d, 0xb4, 0xc8, 0xae, 0x15, 0xba, 0xcd, 0xc8, 0x25, 0x82, 0x2d, 0x04, 0x85, 0x2c, 0xf1,
	0xbb, 0x00, 0x4f, 0xa8, 0x93, 0xe8, 0xf8, 0x28, 0xb0, 0xe3, 0x43, 0xa4, 0x1c, 0x91, 0x1c, 0x8f,
	0x9e, 0xfe, 0x89, 0xf3, 0x8c, 0x15, 0x7a, 0x64, 0x3b, 0x19, 0x47, 0x19, 0xa6, 0x67, 0x96, 0x64,
	0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x43, 0x5d, 0x95, 0x99, 0x0f, 0x63, 0x81, 0xb3, 0x24,
	0xd4, 0x7d, 0x70, 0xdb, 0x93, 0xd8, 0xc0, 0x99, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x44, 0x1c, 0x6b, 0xed, 0x03, 0x00, 0x00,
}
