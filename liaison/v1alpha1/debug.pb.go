// Code generated by protoc-gen-go. DO NOT EDIT.
// source: debug.proto

package liav1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request to upload a resource in a .yaml format.
type AddResourceRequest struct {
	// The resource in yaml string.
	Yaml                 string   `protobuf:"bytes,1,opt,name=yaml,proto3" json:"yaml,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResourceRequest) Reset()         { *m = AddResourceRequest{} }
func (m *AddResourceRequest) String() string { return proto.CompactTextString(m) }
func (*AddResourceRequest) ProtoMessage()    {}
func (*AddResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d9d361be58531fb, []int{0}
}

func (m *AddResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResourceRequest.Unmarshal(m, b)
}
func (m *AddResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResourceRequest.Marshal(b, m, deterministic)
}
func (m *AddResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResourceRequest.Merge(m, src)
}
func (m *AddResourceRequest) XXX_Size() int {
	return xxx_messageInfo_AddResourceRequest.Size(m)
}
func (m *AddResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddResourceRequest proto.InternalMessageInfo

func (m *AddResourceRequest) GetYaml() string {
	if m != nil {
		return m.Yaml
	}
	return ""
}

func init() {
	proto.RegisterType((*AddResourceRequest)(nil), "tetrate.api.liaison.v1alpha1.AddResourceRequest")
}

func init() { proto.RegisterFile("debug.proto", fileDescriptor_8d9d361be58531fb) }

var fileDescriptor_8d9d361be58531fb = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0x86, 0x89, 0x88, 0xe0, 0x9e, 0xd5, 0x16, 0x2a, 0x31, 0x85, 0xa4, 0x3a, 0x2c, 0x66, 0x3d,
	0xed, 0x14, 0x11, 0x45, 0x5f, 0x20, 0x76, 0x76, 0x93, 0x64, 0xcc, 0x2d, 0x6c, 0x32, 0x6b, 0xb2,
	0x7b, 0x70, 0xd8, 0xd9, 0x5a, 0xfa, 0x68, 0xbe, 0x82, 0x0f, 0x22, 0xd9, 0x64, 0x41, 0x10, 0xec,
	0xfe, 0x61, 0xf8, 0xe6, 0xff, 0x18, 0xb1, 0xa8, 0xa9, 0xf4, 0x0d, 0xd8, 0x9e, 0x1d, 0xcb, 0xcc,
	0x91, 0xeb, 0xd1, 0x11, 0xa0, 0xd5, 0x60, 0x34, 0xea, 0x81, 0x3b, 0xd8, 0xac, 0xd0, 0xd8, 0x35,
	0xae, 0xd2, 0xac, 0x61, 0x6e, 0x0c, 0x29, 0xb4, 0x5a, 0x61, 0xd7, 0xb1, 0x43, 0xa7, 0xb9, 0x1b,
	0x26, 0x36, 0x3d, 0x99, 0xb7, 0x61, 0x2a, 0xfd, 0x8b, 0xa2, 0xd6, 0xba, 0xed, 0xb4, 0xcc, 0x97,
	0x42, 0xde, 0xd5, 0x75, 0x41, 0x03, 0xfb, 0xbe, 0xa2, 0x82, 0x5e, 0x3d, 0x0d, 0x4e, 0x4a, 0xb1,
	0xbb, 0xc5, 0xd6, 0x1c, 0x27, 0xa7, 0xc9, 0x72, 0xbf, 0x08, 0xf9, 0xe2, 0x23, 0x11, 0x07, 0x0f,
	0xa3, 0xd2, 0x13, 0xf5, 0x1b, 0x5d, 0x91, 0x7c, 0x13, 0x8b, 0x5f, 0xa8, 0x3c, 0x87, 0xff, 0x1c,
	0xe1, 0x6f, 0x4b, 0x7a, 0x08, 0x93, 0x19, 0x44, 0x33, 0x78, 0x1c, 0xcd, 0xf2, 0xfc, 0xfd, 0xeb,
	0xfb, 0x73, 0x27, 0xcb, 0x8f, 0x54, 0xa4, 0xd5, 0x7c, 0x4e, 0x85, 0x9f, 0x5c, 0x25, 0x67, 0xf7,
	0xb7, 0xcf, 0x37, 0x8d, 0x76, 0x6b, 0x5f, 0x42, 0xc5, 0xad, 0x9a, 0x9b, 0x35, 0xc7, 0x14, 0x5e,
	0x11, 0xa1, 0x78, 0xe5, 0xda, 0x68, 0x8c, 0xb9, 0xdc, 0x0b, 0xa5, 0x97, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd5, 0xbe, 0x93, 0x39, 0x67, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DebugServiceClient is the client API for DebugService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugServiceClient interface {
	AddResource(ctx context.Context, in *AddResourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type debugServiceClient struct {
	cc *grpc.ClientConn
}

func NewDebugServiceClient(cc *grpc.ClientConn) DebugServiceClient {
	return &debugServiceClient{cc}
}

func (c *debugServiceClient) AddResource(ctx context.Context, in *AddResourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.DebugService/AddResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugServiceServer is the server API for DebugService service.
type DebugServiceServer interface {
	AddResource(context.Context, *AddResourceRequest) (*empty.Empty, error)
}

func RegisterDebugServiceServer(s *grpc.Server, srv DebugServiceServer) {
	s.RegisterService(&_DebugService_serviceDesc, srv)
}

func _DebugService_AddResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServiceServer).AddResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.DebugService/AddResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServiceServer).AddResource(ctx, req.(*AddResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.liaison.v1alpha1.DebugService",
	HandlerType: (*DebugServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddResource",
			Handler:    _DebugService_AddResource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "debug.proto",
}
