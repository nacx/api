// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package v1alpha1 // import "github.com/tetrateio/tetrate/api/liaison/v1alpha1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A service destination for VirtualService routing rules.
type Service struct {
	// Resource name with format:
	//   "services/<FQDN>"
	// where the FQDN is the 'name' in tetrate.api.inventory.v1.Service.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The name displayed to end users.
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type ListServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesRequest) Reset()         { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()    {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{1}
}
func (m *ListServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesRequest.Unmarshal(m, b)
}
func (m *ListServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesRequest.Marshal(b, m, deterministic)
}
func (dst *ListServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesRequest.Merge(dst, src)
}
func (m *ListServicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListServicesRequest.Size(m)
}
func (m *ListServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesRequest proto.InternalMessageInfo

type ListServicesResponse struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{2}
}
func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesResponse.Unmarshal(m, b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
}
func (dst *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(dst, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListServicesResponse.Size(m)
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

func (m *ListServicesResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type GetServiceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{3}
}
func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (dst *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(dst, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateServiceRequest struct {
	Service              *Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServiceRequest) Reset()         { *m = CreateServiceRequest{} }
func (m *CreateServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceRequest) ProtoMessage()    {}
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{4}
}
func (m *CreateServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceRequest.Unmarshal(m, b)
}
func (m *CreateServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceRequest.Merge(dst, src)
}
func (m *CreateServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceRequest.Size(m)
}
func (m *CreateServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceRequest proto.InternalMessageInfo

func (m *CreateServiceRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type UpdateServiceRequest struct {
	Service              *Service `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateServiceRequest) Reset()         { *m = UpdateServiceRequest{} }
func (m *UpdateServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateServiceRequest) ProtoMessage()    {}
func (*UpdateServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{5}
}
func (m *UpdateServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateServiceRequest.Unmarshal(m, b)
}
func (m *UpdateServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateServiceRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateServiceRequest.Merge(dst, src)
}
func (m *UpdateServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateServiceRequest.Size(m)
}
func (m *UpdateServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateServiceRequest proto.InternalMessageInfo

func (m *UpdateServiceRequest) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type DeleteServiceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceRequest) Reset()         { *m = DeleteServiceRequest{} }
func (m *DeleteServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceRequest) ProtoMessage()    {}
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_4d95af8e966e8fe1, []int{6}
}
func (m *DeleteServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceRequest.Unmarshal(m, b)
}
func (m *DeleteServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceRequest.Merge(dst, src)
}
func (m *DeleteServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceRequest.Size(m)
}
func (m *DeleteServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceRequest proto.InternalMessageInfo

func (m *DeleteServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Service)(nil), "tetrate.api.liaison.v1alpha1.Service")
	proto.RegisterType((*ListServicesRequest)(nil), "tetrate.api.liaison.v1alpha1.ListServicesRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "tetrate.api.liaison.v1alpha1.ListServicesResponse")
	proto.RegisterType((*GetServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.GetServiceRequest")
	proto.RegisterType((*CreateServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.CreateServiceRequest")
	proto.RegisterType((*UpdateServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.UpdateServiceRequest")
	proto.RegisterType((*DeleteServiceRequest)(nil), "tetrate.api.liaison.v1alpha1.DeleteServiceRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Services service

type ServicesClient interface {
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error)
	CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*Service, error)
	UpdateService(ctx context.Context, in *UpdateServiceRequest, opts ...grpc.CallOption) (*Service, error)
	DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type servicesClient struct {
	cc *grpc.ClientConn
}

func NewServicesClient(cc *grpc.ClientConn) ServicesClient {
	return &servicesClient{cc}
}

func (c *servicesClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := grpc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.Services/ListServices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := grpc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.Services/GetService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := grpc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.Services/CreateService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) UpdateService(ctx context.Context, in *UpdateServiceRequest, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := grpc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.Services/UpdateService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.Services/DeleteService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Services service

type ServicesServer interface {
	ListServices(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	GetService(context.Context, *GetServiceRequest) (*Service, error)
	CreateService(context.Context, *CreateServiceRequest) (*Service, error)
	UpdateService(context.Context, *UpdateServiceRequest) (*Service, error)
	DeleteService(context.Context, *DeleteServiceRequest) (*empty.Empty, error)
}

func RegisterServicesServer(s *grpc.Server, srv ServicesServer) {
	s.RegisterService(&_Services_serviceDesc, srv)
}

func _Services_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.Services/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.Services/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.Services/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).CreateService(ctx, req.(*CreateServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_UpdateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).UpdateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.Services/UpdateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).UpdateService(ctx, req.(*UpdateServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.Services/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).DeleteService(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Services_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.liaison.v1alpha1.Services",
	HandlerType: (*ServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServices",
			Handler:    _Services_ListServices_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _Services_GetService_Handler,
		},
		{
			MethodName: "CreateService",
			Handler:    _Services_CreateService_Handler,
		},
		{
			MethodName: "UpdateService",
			Handler:    _Services_UpdateService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _Services_DeleteService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_4d95af8e966e8fe1) }

var fileDescriptor_service_4d95af8e966e8fe1 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcd, 0x6a, 0x14, 0x41,
	0x10, 0x66, 0x12, 0x35, 0x49, 0x6d, 0xe6, 0x60, 0xb9, 0x6a, 0x98, 0x44, 0x88, 0x13, 0xd4, 0xb0,
	0x87, 0x6e, 0x76, 0xe3, 0x29, 0x20, 0x62, 0x54, 0xbc, 0x88, 0x87, 0x55, 0x11, 0xbd, 0x48, 0x6f,
	0xb6, 0xdc, 0x34, 0xcc, 0x4e, 0x8f, 0xd3, 0xbd, 0x0b, 0x41, 0x04, 0xf1, 0xe6, 0x49, 0xc4, 0x17,
	0xf0, 0x39, 0x3c, 0xf9, 0x0e, 0xbe, 0x81, 0x78, 0xf1, 0x2d, 0x64, 0x7b, 0xba, 0xf7, 0x27, 0x19,
	0x66, 0x37, 0x87, 0xdc, 0x66, 0xba, 0xab, 0xbe, 0xfa, 0xfa, 0xfb, 0x3e, 0x0a, 0x42, 0x4d, 0xf9,
	0x50, 0x1e, 0x12, 0xcb, 0x72, 0x65, 0x14, 0x6e, 0x19, 0x32, 0xb9, 0x30, 0xc4, 0x44, 0x26, 0x59,
	0x22, 0x85, 0xd4, 0x2a, 0x65, 0xc3, 0xa6, 0x48, 0xb2, 0x23, 0xd1, 0x8c, 0xb6, 0x7a, 0x4a, 0xf5,
	0x12, 0xe2, 0x22, 0x93, 0x5c, 0xa4, 0xa9, 0x32, 0xc2, 0x48, 0x95, 0xea, 0xa2, 0x37, 0xda, 0x74,
	0xb7, 0xf6, 0xaf, 0x33, 0x78, 0xc7, 0xa9, 0x9f, 0x99, 0x63, 0x77, 0x79, 0x7d, 0x28, 0x12, 0xd9,
	0x15, 0x86, 0xb8, 0xff, 0x28, 0x2e, 0xe2, 0x17, 0xb0, 0xf2, 0xbc, 0xa0, 0x80, 0xb7, 0xe1, 0x42,
	0x2a, 0xfa, 0xb4, 0x11, 0x6c, 0x07, 0xbb, 0x6b, 0x07, 0xf8, 0xf3, 0xdf, 0xaf, 0xe5, 0x30, 0xaf,
	0xed, 0xaf, 0x39, 0x8a, 0x9a, 0xb7, 0xed, 0x3d, 0xde, 0x84, 0xf5, 0xae, 0xd4, 0x59, 0x22, 0x8e,
	0xdf, 0xda, 0xfa, 0xa5, 0x51, 0x7d, 0xbb, 0xe6, 0xce, 0x9e, 0x89, 0x3e, 0xc5, 0x57, 0xe1, 0xca,
	0x53, 0xa9, 0x8d, 0x43, 0xd6, 0x6d, 0x7a, 0x3f, 0x20, 0x6d, 0xe2, 0xd7, 0x50, 0x9f, 0x3d, 0xd6,
	0x99, 0x4a, 0x35, 0xe1, 0x03, 0x58, 0xf5, 0x43, 0x36, 0x82, 0xed, 0xe5, 0xdd, 0x5a, 0xeb, 0x16,
	0xab, 0x52, 0x82, 0x39, 0x84, 0xf6, 0xb8, 0x2d, 0xbe, 0x03, 0x97, 0x9f, 0x90, 0x47, 0x76, 0xf3,
	0x10, 0xa7, 0x5f, 0x54, 0xb0, 0x8f, 0x5f, 0x41, 0xfd, 0x61, 0x4e, 0xc2, 0xd0, 0x89, 0xda, 0xfb,
	0xb0, 0xe2, 0xc0, 0x6c, 0xf9, 0xc2, 0x14, 0x7c, 0xd7, 0x08, 0xf8, 0x65, 0xd6, 0x3d, 0x07, 0xe0,
	0x06, 0xd4, 0x1f, 0x51, 0x42, 0xa7, 0x80, 0x4b, 0x5e, 0xd7, 0xfa, 0x73, 0x11, 0x56, 0xbd, 0xbc,
	0xf8, 0x2d, 0x80, 0xf5, 0x69, 0xbd, 0xb1, 0x59, 0x3d, 0xb9, 0xc4, 0xb2, 0xa8, 0x75, 0x96, 0x96,
	0xc2, 0xce, 0x38, 0xfa, 0xfc, 0xfb, 0xef, 0xf7, 0xa5, 0x3a, 0x22, 0xf7, 0x75, 0xdc, 0xfb, 0x84,
	0x5f, 0x02, 0x80, 0x89, 0x51, 0xc8, 0xab, 0xe1, 0x4f, 0x59, 0x1a, 0x2d, 0x26, 0x5e, 0xbc, 0x63,
	0x29, 0xdc, 0xc0, 0xcd, 0x09, 0x85, 0x0f, 0x23, 0x81, 0xee, 0x8d, 0xc3, 0xdc, 0xf8, 0x88, 0x5f,
	0x03, 0x08, 0x67, 0xb2, 0x80, 0x73, 0x5e, 0x5b, 0x16, 0x9c, 0x33, 0x32, 0x8a, 0x4b, 0x44, 0xd9,
	0xf7, 0x56, 0xe3, 0x8f, 0x00, 0xc2, 0x99, 0x10, 0xcd, 0x63, 0x54, 0x96, 0xb8, 0x45, 0x19, 0xdd,
	0xb5, 0x8c, 0x58, 0xb4, 0x33, 0xa5, 0x91, 0x5f, 0x47, 0x27, 0xb5, 0x9a, 0x50, 0xfc, 0x14, 0x40,
	0x38, 0x13, 0xc7, 0x79, 0x14, 0xcb, 0xb2, 0x1b, 0x5d, 0x63, 0xc5, 0xb6, 0x62, 0x7e, 0x5b, 0xb1,
	0xc7, 0xa3, 0x6d, 0xe5, 0x55, 0x6a, 0x54, 0xf9, 0x76, 0xb0, 0xf7, 0xa6, 0xd9, 0x93, 0xe6, 0x68,
	0xd0, 0x61, 0x87, 0xaa, 0xcf, 0xdd, 0x70, 0xa9, 0xfc, 0x97, 0xdd, 0x8f, 0x8e, 0xc6, 0x18, 0xa6,
	0x73, 0xc9, 0x4e, 0xda, 0xfb, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x07, 0xbd, 0x16, 0x72, 0x05,
	0x00, 0x00,
}
