// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ingress_gateway.proto

package v1alpha1 // import "github.com/tetrateio/tetrate/api/liaison/v1alpha1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import v1alpha3 "istio.io/api/networking/v1alpha3"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// An IngressGateway corresponds to a single ingress Envoy. For simplicity, an
// ingress Envoy is associated with only a single Istio Gateway and a single
// Istio VirtualService, and the two apply to the same hosts.
type IngressGateway struct {
	// Resource name with format:
	//   "ingressGateways/<service name of ingress Envoy>"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name displayed to end users.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The security zone this ingress gateway is within. This is just a label to
	// allow users to create logical groupings of ingress gateways. The intended
	// use case is for the platform owner to create "Security zones" so that
	// network admins can administer only the ingress gateways that they care
	// about.
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	// The Istio Gateway config object specifying traffic that this ingress Envoy
	// will allow through.
	Gateway              *v1alpha3.Gateway `protobuf:"bytes,4,opt,name=gateway,proto3" json:"gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IngressGateway) Reset()         { *m = IngressGateway{} }
func (m *IngressGateway) String() string { return proto.CompactTextString(m) }
func (*IngressGateway) ProtoMessage()    {}
func (*IngressGateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{0}
}
func (m *IngressGateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IngressGateway.Unmarshal(m, b)
}
func (m *IngressGateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IngressGateway.Marshal(b, m, deterministic)
}
func (dst *IngressGateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IngressGateway.Merge(dst, src)
}
func (m *IngressGateway) XXX_Size() int {
	return xxx_messageInfo_IngressGateway.Size(m)
}
func (m *IngressGateway) XXX_DiscardUnknown() {
	xxx_messageInfo_IngressGateway.DiscardUnknown(m)
}

var xxx_messageInfo_IngressGateway proto.InternalMessageInfo

func (m *IngressGateway) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IngressGateway) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *IngressGateway) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *IngressGateway) GetGateway() *v1alpha3.Gateway {
	if m != nil {
		return m.Gateway
	}
	return nil
}

type ListIngressGatewaysRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIngressGatewaysRequest) Reset()         { *m = ListIngressGatewaysRequest{} }
func (m *ListIngressGatewaysRequest) String() string { return proto.CompactTextString(m) }
func (*ListIngressGatewaysRequest) ProtoMessage()    {}
func (*ListIngressGatewaysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{1}
}
func (m *ListIngressGatewaysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIngressGatewaysRequest.Unmarshal(m, b)
}
func (m *ListIngressGatewaysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIngressGatewaysRequest.Marshal(b, m, deterministic)
}
func (dst *ListIngressGatewaysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIngressGatewaysRequest.Merge(dst, src)
}
func (m *ListIngressGatewaysRequest) XXX_Size() int {
	return xxx_messageInfo_ListIngressGatewaysRequest.Size(m)
}
func (m *ListIngressGatewaysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIngressGatewaysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIngressGatewaysRequest proto.InternalMessageInfo

type ListIngressGatewaysResponse struct {
	IngressGateways      []*IngressGateway `protobuf:"bytes,1,rep,name=ingress_gateways,json=ingressGateways,proto3" json:"ingress_gateways,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListIngressGatewaysResponse) Reset()         { *m = ListIngressGatewaysResponse{} }
func (m *ListIngressGatewaysResponse) String() string { return proto.CompactTextString(m) }
func (*ListIngressGatewaysResponse) ProtoMessage()    {}
func (*ListIngressGatewaysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{2}
}
func (m *ListIngressGatewaysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIngressGatewaysResponse.Unmarshal(m, b)
}
func (m *ListIngressGatewaysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIngressGatewaysResponse.Marshal(b, m, deterministic)
}
func (dst *ListIngressGatewaysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIngressGatewaysResponse.Merge(dst, src)
}
func (m *ListIngressGatewaysResponse) XXX_Size() int {
	return xxx_messageInfo_ListIngressGatewaysResponse.Size(m)
}
func (m *ListIngressGatewaysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIngressGatewaysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIngressGatewaysResponse proto.InternalMessageInfo

func (m *ListIngressGatewaysResponse) GetIngressGateways() []*IngressGateway {
	if m != nil {
		return m.IngressGateways
	}
	return nil
}

type GetIngressGatewayRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIngressGatewayRequest) Reset()         { *m = GetIngressGatewayRequest{} }
func (m *GetIngressGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*GetIngressGatewayRequest) ProtoMessage()    {}
func (*GetIngressGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{3}
}
func (m *GetIngressGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIngressGatewayRequest.Unmarshal(m, b)
}
func (m *GetIngressGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIngressGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *GetIngressGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIngressGatewayRequest.Merge(dst, src)
}
func (m *GetIngressGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_GetIngressGatewayRequest.Size(m)
}
func (m *GetIngressGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIngressGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIngressGatewayRequest proto.InternalMessageInfo

func (m *GetIngressGatewayRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateIngressGatewayRequest struct {
	IngressGateway       *IngressGateway `protobuf:"bytes,1,opt,name=ingress_gateway,json=ingressGateway,proto3" json:"ingress_gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateIngressGatewayRequest) Reset()         { *m = CreateIngressGatewayRequest{} }
func (m *CreateIngressGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIngressGatewayRequest) ProtoMessage()    {}
func (*CreateIngressGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{4}
}
func (m *CreateIngressGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIngressGatewayRequest.Unmarshal(m, b)
}
func (m *CreateIngressGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIngressGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *CreateIngressGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIngressGatewayRequest.Merge(dst, src)
}
func (m *CreateIngressGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIngressGatewayRequest.Size(m)
}
func (m *CreateIngressGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIngressGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIngressGatewayRequest proto.InternalMessageInfo

func (m *CreateIngressGatewayRequest) GetIngressGateway() *IngressGateway {
	if m != nil {
		return m.IngressGateway
	}
	return nil
}

type UpdateIngressGatewayRequest struct {
	IngressGateway       *IngressGateway `protobuf:"bytes,1,opt,name=ingress_gateway,json=ingressGateway,proto3" json:"ingress_gateway,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateIngressGatewayRequest) Reset()         { *m = UpdateIngressGatewayRequest{} }
func (m *UpdateIngressGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIngressGatewayRequest) ProtoMessage()    {}
func (*UpdateIngressGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{5}
}
func (m *UpdateIngressGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIngressGatewayRequest.Unmarshal(m, b)
}
func (m *UpdateIngressGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIngressGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateIngressGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIngressGatewayRequest.Merge(dst, src)
}
func (m *UpdateIngressGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIngressGatewayRequest.Size(m)
}
func (m *UpdateIngressGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIngressGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIngressGatewayRequest proto.InternalMessageInfo

func (m *UpdateIngressGatewayRequest) GetIngressGateway() *IngressGateway {
	if m != nil {
		return m.IngressGateway
	}
	return nil
}

type DeleteIngressGatewayRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIngressGatewayRequest) Reset()         { *m = DeleteIngressGatewayRequest{} }
func (m *DeleteIngressGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIngressGatewayRequest) ProtoMessage()    {}
func (*DeleteIngressGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ingress_gateway_087d805dee258674, []int{6}
}
func (m *DeleteIngressGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIngressGatewayRequest.Unmarshal(m, b)
}
func (m *DeleteIngressGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIngressGatewayRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteIngressGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIngressGatewayRequest.Merge(dst, src)
}
func (m *DeleteIngressGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIngressGatewayRequest.Size(m)
}
func (m *DeleteIngressGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIngressGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIngressGatewayRequest proto.InternalMessageInfo

func (m *DeleteIngressGatewayRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*IngressGateway)(nil), "tetrate.api.liaison.v1alpha1.IngressGateway")
	proto.RegisterType((*ListIngressGatewaysRequest)(nil), "tetrate.api.liaison.v1alpha1.ListIngressGatewaysRequest")
	proto.RegisterType((*ListIngressGatewaysResponse)(nil), "tetrate.api.liaison.v1alpha1.ListIngressGatewaysResponse")
	proto.RegisterType((*GetIngressGatewayRequest)(nil), "tetrate.api.liaison.v1alpha1.GetIngressGatewayRequest")
	proto.RegisterType((*CreateIngressGatewayRequest)(nil), "tetrate.api.liaison.v1alpha1.CreateIngressGatewayRequest")
	proto.RegisterType((*UpdateIngressGatewayRequest)(nil), "tetrate.api.liaison.v1alpha1.UpdateIngressGatewayRequest")
	proto.RegisterType((*DeleteIngressGatewayRequest)(nil), "tetrate.api.liaison.v1alpha1.DeleteIngressGatewayRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IngressGatewaysClient is the client API for IngressGateways service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IngressGatewaysClient interface {
	ListIngressGateways(ctx context.Context, in *ListIngressGatewaysRequest, opts ...grpc.CallOption) (*ListIngressGatewaysResponse, error)
	GetIngressGateway(ctx context.Context, in *GetIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error)
	CreateIngressGateway(ctx context.Context, in *CreateIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error)
	UpdateIngressGateway(ctx context.Context, in *UpdateIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error)
	DeleteIngressGateway(ctx context.Context, in *DeleteIngressGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type ingressGatewaysClient struct {
	cc *grpc.ClientConn
}

func NewIngressGatewaysClient(cc *grpc.ClientConn) IngressGatewaysClient {
	return &ingressGatewaysClient{cc}
}

func (c *ingressGatewaysClient) ListIngressGateways(ctx context.Context, in *ListIngressGatewaysRequest, opts ...grpc.CallOption) (*ListIngressGatewaysResponse, error) {
	out := new(ListIngressGatewaysResponse)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.IngressGateways/ListIngressGateways", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingressGatewaysClient) GetIngressGateway(ctx context.Context, in *GetIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error) {
	out := new(IngressGateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.IngressGateways/GetIngressGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingressGatewaysClient) CreateIngressGateway(ctx context.Context, in *CreateIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error) {
	out := new(IngressGateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.IngressGateways/CreateIngressGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingressGatewaysClient) UpdateIngressGateway(ctx context.Context, in *UpdateIngressGatewayRequest, opts ...grpc.CallOption) (*IngressGateway, error) {
	out := new(IngressGateway)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.IngressGateways/UpdateIngressGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ingressGatewaysClient) DeleteIngressGateway(ctx context.Context, in *DeleteIngressGatewayRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tetrate.api.liaison.v1alpha1.IngressGateways/DeleteIngressGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IngressGatewaysServer is the server API for IngressGateways service.
type IngressGatewaysServer interface {
	ListIngressGateways(context.Context, *ListIngressGatewaysRequest) (*ListIngressGatewaysResponse, error)
	GetIngressGateway(context.Context, *GetIngressGatewayRequest) (*IngressGateway, error)
	CreateIngressGateway(context.Context, *CreateIngressGatewayRequest) (*IngressGateway, error)
	UpdateIngressGateway(context.Context, *UpdateIngressGatewayRequest) (*IngressGateway, error)
	DeleteIngressGateway(context.Context, *DeleteIngressGatewayRequest) (*empty.Empty, error)
}

func RegisterIngressGatewaysServer(s *grpc.Server, srv IngressGatewaysServer) {
	s.RegisterService(&_IngressGateways_serviceDesc, srv)
}

func _IngressGateways_ListIngressGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIngressGatewaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngressGatewaysServer).ListIngressGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.IngressGateways/ListIngressGateways",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngressGatewaysServer).ListIngressGateways(ctx, req.(*ListIngressGatewaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IngressGateways_GetIngressGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIngressGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngressGatewaysServer).GetIngressGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.IngressGateways/GetIngressGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngressGatewaysServer).GetIngressGateway(ctx, req.(*GetIngressGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IngressGateways_CreateIngressGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIngressGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngressGatewaysServer).CreateIngressGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.IngressGateways/CreateIngressGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngressGatewaysServer).CreateIngressGateway(ctx, req.(*CreateIngressGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IngressGateways_UpdateIngressGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIngressGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngressGatewaysServer).UpdateIngressGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.IngressGateways/UpdateIngressGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngressGatewaysServer).UpdateIngressGateway(ctx, req.(*UpdateIngressGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IngressGateways_DeleteIngressGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIngressGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IngressGatewaysServer).DeleteIngressGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tetrate.api.liaison.v1alpha1.IngressGateways/DeleteIngressGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IngressGatewaysServer).DeleteIngressGateway(ctx, req.(*DeleteIngressGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IngressGateways_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tetrate.api.liaison.v1alpha1.IngressGateways",
	HandlerType: (*IngressGatewaysServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListIngressGateways",
			Handler:    _IngressGateways_ListIngressGateways_Handler,
		},
		{
			MethodName: "GetIngressGateway",
			Handler:    _IngressGateways_GetIngressGateway_Handler,
		},
		{
			MethodName: "CreateIngressGateway",
			Handler:    _IngressGateways_CreateIngressGateway_Handler,
		},
		{
			MethodName: "UpdateIngressGateway",
			Handler:    _IngressGateways_UpdateIngressGateway_Handler,
		},
		{
			MethodName: "DeleteIngressGateway",
			Handler:    _IngressGateways_DeleteIngressGateway_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ingress_gateway.proto",
}

func init() {
	proto.RegisterFile("ingress_gateway.proto", fileDescriptor_ingress_gateway_087d805dee258674)
}

var fileDescriptor_ingress_gateway_087d805dee258674 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0xc1, 0x6e, 0xd3, 0x30,
	0x1c, 0xc6, 0xe5, 0xad, 0x62, 0xc2, 0x45, 0xeb, 0x30, 0x05, 0xba, 0xb4, 0x87, 0xd6, 0xe2, 0x50,
	0x55, 0xc3, 0x51, 0x53, 0x09, 0xc1, 0x04, 0x97, 0xc1, 0x34, 0x21, 0x10, 0x87, 0x48, 0x13, 0x12,
	0x97, 0xc9, 0xa5, 0x26, 0xb3, 0x48, 0xed, 0x10, 0xbb, 0x9d, 0x06, 0xe2, 0xc2, 0x81, 0x17, 0x40,
	0x3c, 0x02, 0x47, 0x4e, 0x70, 0xe2, 0xc4, 0x03, 0x70, 0xe3, 0x15, 0xb8, 0xf0, 0x16, 0x28, 0x4e,
	0x42, 0x49, 0x96, 0xa4, 0x94, 0x03, 0x37, 0xb7, 0xf6, 0xdf, 0xdf, 0xcf, 0xdf, 0xff, 0x73, 0x0c,
	0x2f, 0x73, 0xe1, 0x85, 0x4c, 0xa9, 0x23, 0x8f, 0x6a, 0x76, 0x42, 0x4f, 0x49, 0x10, 0x4a, 0x2d,
	0x51, 0x47, 0x33, 0x1d, 0x52, 0xcd, 0x08, 0x0d, 0x38, 0xf1, 0x39, 0xe5, 0x4a, 0x0a, 0x32, 0x1f,
	0x52, 0x3f, 0x38, 0xa6, 0x43, 0xab, 0xe3, 0x49, 0xe9, 0xf9, 0xcc, 0xa6, 0x01, 0xb7, 0xa9, 0x10,
	0x52, 0x53, 0xcd, 0xa5, 0x50, 0x71, 0xad, 0xd5, 0x4e, 0x66, 0xcd, 0xaf, 0xf1, 0xec, 0x99, 0xcd,
	0xa6, 0x81, 0x4e, 0x36, 0xb6, 0x7a, 0x82, 0xe9, 0x13, 0x19, 0x3e, 0xe7, 0xc2, 0xb3, 0x93, 0xfd,
	0x46, 0x76, 0x46, 0xdb, 0xba, 0x3a, 0xa7, 0x3e, 0x9f, 0x50, 0xcd, 0xec, 0x74, 0x10, 0x4f, 0xe0,
	0xcf, 0x00, 0x6e, 0xde, 0x8f, 0x71, 0x0f, 0xe2, 0x0a, 0x74, 0x1d, 0xd6, 0x04, 0x9d, 0xb2, 0x16,
	0xe8, 0x82, 0xfe, 0xf9, 0xbd, 0xed, 0x2f, 0x3f, 0xbf, 0xae, 0x37, 0x43, 0xb4, 0xbb, 0xc5, 0x33,
	0xcb, 0x94, 0xed, 0x9a, 0x65, 0xa8, 0x07, 0x2f, 0x4c, 0xb8, 0x0a, 0x7c, 0x7a, 0x7a, 0x64, 0xca,
	0xd6, 0xa2, 0x32, 0xb7, 0x9e, 0xfc, 0xf7, 0x28, 0x5a, 0x82, 0x60, 0xed, 0xa5, 0x14, 0xac, 0xb5,
	0x6e, 0xa6, 0xcc, 0x18, 0xdd, 0x86, 0x1b, 0x09, 0x62, 0xab, 0xd6, 0x05, 0xfd, 0xba, 0x83, 0x09,
	0x57, 0x9a, 0x4b, 0xb2, 0x38, 0x4c, 0x6a, 0xce, 0x88, 0x24, 0x9a, 0x6e, 0x5a, 0x82, 0x3b, 0xd0,
	0x7a, 0xc8, 0x95, 0xce, 0x92, 0x2b, 0x97, 0xbd, 0x98, 0x31, 0xa5, 0xf1, 0x1c, 0xb6, 0x0b, 0x67,
	0x55, 0x20, 0x85, 0x62, 0xe8, 0x31, 0xdc, 0xca, 0x75, 0x48, 0xb5, 0x40, 0x77, 0xbd, 0x5f, 0x77,
	0x76, 0x48, 0x55, 0x8f, 0x48, 0x76, 0x43, 0xb7, 0x91, 0x73, 0x04, 0x13, 0xd8, 0x3a, 0x60, 0x39,
	0xd9, 0x84, 0x29, 0xf2, 0x60, 0xe1, 0x6a, 0x6c, 0x1d, 0xd6, 0xb0, 0x7d, 0x37, 0x64, 0x54, 0xb3,
	0xe2, 0x92, 0x43, 0xd8, 0xc8, 0x71, 0x9a, 0xea, 0x55, 0x31, 0x37, 0xb3, 0x98, 0x91, 0xea, 0x61,
	0x30, 0xf9, 0xdf, 0xaa, 0x43, 0xd8, 0xbe, 0xc7, 0x7c, 0x56, 0xa6, 0x5a, 0x60, 0x8f, 0xf3, 0x76,
	0x03, 0x36, 0x72, 0x3d, 0x44, 0x1f, 0x01, 0xbc, 0x54, 0xd0, 0x5b, 0x74, 0xb3, 0x1a, 0xae, 0x3c,
	0x2c, 0xd6, 0xad, 0x7f, 0xa8, 0x8c, 0x83, 0x84, 0x7b, 0x6f, 0xbe, 0xff, 0x78, 0xb7, 0xd6, 0x46,
	0xdb, 0xe9, 0xb5, 0x1b, 0xda, 0xb9, 0x48, 0xa0, 0x0f, 0x00, 0x5e, 0x3c, 0x93, 0x09, 0x74, 0xa3,
	0x5a, 0xb3, 0x2c, 0x44, 0xd6, 0x4a, 0x2d, 0xc0, 0x03, 0x83, 0x77, 0x0d, 0xe1, 0x05, 0xde, 0xab,
	0xc8, 0xd8, 0x3b, 0xf9, 0x9b, 0x3c, 0x78, 0x8d, 0x3e, 0x01, 0xd8, 0x2c, 0xca, 0x22, 0x5a, 0x62,
	0x4f, 0x45, 0x7e, 0x57, 0xa4, 0x75, 0x0c, 0xed, 0x0e, 0x2e, 0x37, 0x73, 0x37, 0x1f, 0x4c, 0xf4,
	0x0d, 0xc0, 0x66, 0x51, 0x96, 0x97, 0x51, 0x57, 0xe4, 0x7f, 0x45, 0xea, 0x07, 0x86, 0x7a, 0xdf,
	0x72, 0xfe, 0xf0, 0x38, 0xff, 0xf9, 0x2f, 0xf1, 0xfc, 0xec, 0x71, 0xde, 0x03, 0xd8, 0x2c, 0xba,
	0x24, 0xcb, 0x8e, 0x53, 0x71, 0xb1, 0xac, 0x2b, 0x24, 0x7e, 0x3a, 0x48, 0xfa, 0x74, 0x90, 0xfd,
	0xe8, 0xe9, 0x48, 0xc3, 0x31, 0xf8, 0x8b, 0x70, 0xec, 0x8d, 0x9e, 0x0c, 0x3d, 0xae, 0x8f, 0x67,
	0x63, 0xf2, 0x54, 0x4e, 0xed, 0x04, 0x85, 0xcb, 0x74, 0x64, 0xde, 0xac, 0x04, 0xea, 0xf7, 0x6e,
	0xe3, 0x73, 0x46, 0x70, 0xf4, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x65, 0x71, 0xfd, 0x3a, 0x0e, 0x07,
	0x00, 0x00,
}
